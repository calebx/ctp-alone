/* automatically generated by rust-bindgen */

pub const THOST_FTDC_EXP_Normal: u8 = 48u8;
pub const THOST_FTDC_EXP_GenOrderByTrade: u8 = 49u8;
pub const THOST_FTDC_ICT_EID: u8 = 48u8;
pub const THOST_FTDC_ICT_IDCard: u8 = 49u8;
pub const THOST_FTDC_ICT_OfficerIDCard: u8 = 50u8;
pub const THOST_FTDC_ICT_PoliceIDCard: u8 = 51u8;
pub const THOST_FTDC_ICT_SoldierIDCard: u8 = 52u8;
pub const THOST_FTDC_ICT_HouseholdRegister: u8 = 53u8;
pub const THOST_FTDC_ICT_Passport: u8 = 54u8;
pub const THOST_FTDC_ICT_TaiwanCompatriotIDCard: u8 = 55u8;
pub const THOST_FTDC_ICT_HomeComingCard: u8 = 56u8;
pub const THOST_FTDC_ICT_LicenseNo: u8 = 57u8;
pub const THOST_FTDC_ICT_TaxNo: u8 = 65u8;
pub const THOST_FTDC_ICT_HMMainlandTravelPermit: u8 = 66u8;
pub const THOST_FTDC_ICT_TwMainlandTravelPermit: u8 = 67u8;
pub const THOST_FTDC_ICT_DrivingLicense: u8 = 68u8;
pub const THOST_FTDC_ICT_SocialID: u8 = 70u8;
pub const THOST_FTDC_ICT_LocalID: u8 = 71u8;
pub const THOST_FTDC_ICT_BusinessRegistration: u8 = 72u8;
pub const THOST_FTDC_ICT_HKMCIDCard: u8 = 73u8;
pub const THOST_FTDC_ICT_AccountsPermits: u8 = 74u8;
pub const THOST_FTDC_ICT_OtherCard: u8 = 120u8;
pub const THOST_FTDC_IR_All: u8 = 49u8;
pub const THOST_FTDC_IR_Group: u8 = 50u8;
pub const THOST_FTDC_IR_Single: u8 = 51u8;
pub const THOST_FTDC_DR_All: u8 = 49u8;
pub const THOST_FTDC_DR_Group: u8 = 50u8;
pub const THOST_FTDC_DR_Single: u8 = 51u8;
pub const THOST_FTDC_DS_Asynchronous: u8 = 49u8;
pub const THOST_FTDC_DS_Synchronizing: u8 = 50u8;
pub const THOST_FTDC_DS_Synchronized: u8 = 51u8;
pub const THOST_FTDC_BDS_Synchronized: u8 = 49u8;
pub const THOST_FTDC_BDS_Synchronizing: u8 = 50u8;
pub const THOST_FTDC_ECS_NoConnection: u8 = 49u8;
pub const THOST_FTDC_ECS_QryInstrumentSent: u8 = 50u8;
pub const THOST_FTDC_ECS_GotInformation: u8 = 57u8;
pub const THOST_FTDC_TCS_NotConnected: u8 = 49u8;
pub const THOST_FTDC_TCS_Connected: u8 = 50u8;
pub const THOST_FTDC_TCS_QryInstrumentSent: u8 = 51u8;
pub const THOST_FTDC_TCS_SubPrivateFlow: u8 = 52u8;
pub const THOST_FTDC_FC_DataAsync: u8 = 49u8;
pub const THOST_FTDC_FC_ForceUserLogout: u8 = 50u8;
pub const THOST_FTDC_FC_UserPasswordUpdate: u8 = 51u8;
pub const THOST_FTDC_FC_BrokerPasswordUpdate: u8 = 52u8;
pub const THOST_FTDC_FC_InvestorPasswordUpdate: u8 = 53u8;
pub const THOST_FTDC_FC_OrderInsert: u8 = 54u8;
pub const THOST_FTDC_FC_OrderAction: u8 = 55u8;
pub const THOST_FTDC_FC_SyncSystemData: u8 = 56u8;
pub const THOST_FTDC_FC_SyncBrokerData: u8 = 57u8;
pub const THOST_FTDC_FC_BachSyncBrokerData: u8 = 65u8;
pub const THOST_FTDC_FC_SuperQuery: u8 = 66u8;
pub const THOST_FTDC_FC_ParkedOrderInsert: u8 = 67u8;
pub const THOST_FTDC_FC_ParkedOrderAction: u8 = 68u8;
pub const THOST_FTDC_FC_SyncOTP: u8 = 69u8;
pub const THOST_FTDC_FC_DeleteOrder: u8 = 70u8;
pub const THOST_FTDC_BFC_ForceUserLogout: u8 = 49u8;
pub const THOST_FTDC_BFC_UserPasswordUpdate: u8 = 50u8;
pub const THOST_FTDC_BFC_SyncBrokerData: u8 = 51u8;
pub const THOST_FTDC_BFC_BachSyncBrokerData: u8 = 52u8;
pub const THOST_FTDC_BFC_OrderInsert: u8 = 53u8;
pub const THOST_FTDC_BFC_OrderAction: u8 = 54u8;
pub const THOST_FTDC_BFC_AllQuery: u8 = 55u8;
pub const THOST_FTDC_BFC_log: u8 = 97u8;
pub const THOST_FTDC_BFC_BaseQry: u8 = 98u8;
pub const THOST_FTDC_BFC_TradeQry: u8 = 99u8;
pub const THOST_FTDC_BFC_Trade: u8 = 100u8;
pub const THOST_FTDC_BFC_Virement: u8 = 101u8;
pub const THOST_FTDC_BFC_Risk: u8 = 102u8;
pub const THOST_FTDC_BFC_Session: u8 = 103u8;
pub const THOST_FTDC_BFC_RiskNoticeCtl: u8 = 104u8;
pub const THOST_FTDC_BFC_RiskNotice: u8 = 105u8;
pub const THOST_FTDC_BFC_BrokerDeposit: u8 = 106u8;
pub const THOST_FTDC_BFC_QueryFund: u8 = 107u8;
pub const THOST_FTDC_BFC_QueryOrder: u8 = 108u8;
pub const THOST_FTDC_BFC_QueryTrade: u8 = 109u8;
pub const THOST_FTDC_BFC_QueryPosition: u8 = 110u8;
pub const THOST_FTDC_BFC_QueryMarketData: u8 = 111u8;
pub const THOST_FTDC_BFC_QueryUserEvent: u8 = 112u8;
pub const THOST_FTDC_BFC_QueryRiskNotify: u8 = 113u8;
pub const THOST_FTDC_BFC_QueryFundChange: u8 = 114u8;
pub const THOST_FTDC_BFC_QueryInvestor: u8 = 115u8;
pub const THOST_FTDC_BFC_QueryTradingCode: u8 = 116u8;
pub const THOST_FTDC_BFC_ForceClose: u8 = 117u8;
pub const THOST_FTDC_BFC_PressTest: u8 = 118u8;
pub const THOST_FTDC_BFC_RemainCalc: u8 = 119u8;
pub const THOST_FTDC_BFC_NetPositionInd: u8 = 120u8;
pub const THOST_FTDC_BFC_RiskPredict: u8 = 121u8;
pub const THOST_FTDC_BFC_DataExport: u8 = 122u8;
pub const THOST_FTDC_BFC_RiskTargetSetup: u8 = 65u8;
pub const THOST_FTDC_BFC_MarketDataWarn: u8 = 66u8;
pub const THOST_FTDC_BFC_QryBizNotice: u8 = 67u8;
pub const THOST_FTDC_BFC_CfgBizNotice: u8 = 68u8;
pub const THOST_FTDC_BFC_SyncOTP: u8 = 69u8;
pub const THOST_FTDC_BFC_SendBizNotice: u8 = 70u8;
pub const THOST_FTDC_BFC_CfgRiskLevelStd: u8 = 71u8;
pub const THOST_FTDC_BFC_TbCommand: u8 = 72u8;
pub const THOST_FTDC_BFC_DeleteOrder: u8 = 74u8;
pub const THOST_FTDC_BFC_ParkedOrderInsert: u8 = 75u8;
pub const THOST_FTDC_BFC_ParkedOrderAction: u8 = 76u8;
pub const THOST_FTDC_BFC_ExecOrderNoCheck: u8 = 77u8;
pub const THOST_FTDC_BFC_Designate: u8 = 78u8;
pub const THOST_FTDC_BFC_StockDisposal: u8 = 79u8;
pub const THOST_FTDC_BFC_BrokerDepositWarn: u8 = 81u8;
pub const THOST_FTDC_BFC_CoverWarn: u8 = 83u8;
pub const THOST_FTDC_BFC_PreExecOrder: u8 = 84u8;
pub const THOST_FTDC_BFC_ExecOrderRisk: u8 = 80u8;
pub const THOST_FTDC_BFC_PosiLimitWarn: u8 = 85u8;
pub const THOST_FTDC_BFC_QryPosiLimit: u8 = 86u8;
pub const THOST_FTDC_BFC_FBSign: u8 = 87u8;
pub const THOST_FTDC_BFC_FBAccount: u8 = 88u8;
pub const THOST_FTDC_OAS_Submitted: u8 = 97u8;
pub const THOST_FTDC_OAS_Accepted: u8 = 98u8;
pub const THOST_FTDC_OAS_Rejected: u8 = 99u8;
pub const THOST_FTDC_OST_AllTraded: u8 = 48u8;
pub const THOST_FTDC_OST_PartTradedQueueing: u8 = 49u8;
pub const THOST_FTDC_OST_PartTradedNotQueueing: u8 = 50u8;
pub const THOST_FTDC_OST_NoTradeQueueing: u8 = 51u8;
pub const THOST_FTDC_OST_NoTradeNotQueueing: u8 = 52u8;
pub const THOST_FTDC_OST_Canceled: u8 = 53u8;
pub const THOST_FTDC_OST_Unknown: u8 = 97u8;
pub const THOST_FTDC_OST_NotTouched: u8 = 98u8;
pub const THOST_FTDC_OST_Touched: u8 = 99u8;
pub const THOST_FTDC_OSS_InsertSubmitted: u8 = 48u8;
pub const THOST_FTDC_OSS_CancelSubmitted: u8 = 49u8;
pub const THOST_FTDC_OSS_ModifySubmitted: u8 = 50u8;
pub const THOST_FTDC_OSS_Accepted: u8 = 51u8;
pub const THOST_FTDC_OSS_InsertRejected: u8 = 52u8;
pub const THOST_FTDC_OSS_CancelRejected: u8 = 53u8;
pub const THOST_FTDC_OSS_ModifyRejected: u8 = 54u8;
pub const THOST_FTDC_PSD_Today: u8 = 49u8;
pub const THOST_FTDC_PSD_History: u8 = 50u8;
pub const THOST_FTDC_PDT_UseHistory: u8 = 49u8;
pub const THOST_FTDC_PDT_NoUseHistory: u8 = 50u8;
pub const THOST_FTDC_ER_Broker: u8 = 49u8;
pub const THOST_FTDC_ER_Host: u8 = 50u8;
pub const THOST_FTDC_ER_Maker: u8 = 51u8;
pub const THOST_FTDC_PC_Futures: u8 = 49u8;
pub const THOST_FTDC_PC_Options: u8 = 50u8;
pub const THOST_FTDC_PC_Combination: u8 = 51u8;
pub const THOST_FTDC_PC_Spot: u8 = 52u8;
pub const THOST_FTDC_PC_EFP: u8 = 53u8;
pub const THOST_FTDC_PC_SpotOption: u8 = 54u8;
pub const THOST_FTDC_IP_NotStart: u8 = 48u8;
pub const THOST_FTDC_IP_Started: u8 = 49u8;
pub const THOST_FTDC_IP_Pause: u8 = 50u8;
pub const THOST_FTDC_IP_Expired: u8 = 51u8;
pub const THOST_FTDC_D_Buy: u8 = 48u8;
pub const THOST_FTDC_D_Sell: u8 = 49u8;
pub const THOST_FTDC_PT_Net: u8 = 49u8;
pub const THOST_FTDC_PT_Gross: u8 = 50u8;
pub const THOST_FTDC_PD_Net: u8 = 49u8;
pub const THOST_FTDC_PD_Long: u8 = 50u8;
pub const THOST_FTDC_PD_Short: u8 = 51u8;
pub const THOST_FTDC_SS_NonActive: u8 = 49u8;
pub const THOST_FTDC_SS_Startup: u8 = 50u8;
pub const THOST_FTDC_SS_Operating: u8 = 51u8;
pub const THOST_FTDC_SS_Settlement: u8 = 52u8;
pub const THOST_FTDC_SS_SettlementFinished: u8 = 53u8;
pub const THOST_FTDC_RA_Trade: u8 = 48u8;
pub const THOST_FTDC_RA_Settlement: u8 = 49u8;
pub const THOST_FTDC_HF_Speculation: u8 = 49u8;
pub const THOST_FTDC_HF_Arbitrage: u8 = 50u8;
pub const THOST_FTDC_HF_Hedge: u8 = 51u8;
pub const THOST_FTDC_HF_MarketMaker: u8 = 53u8;
pub const THOST_FTDC_BHF_Speculation: u8 = 49u8;
pub const THOST_FTDC_BHF_Arbitrage: u8 = 50u8;
pub const THOST_FTDC_BHF_Hedge: u8 = 51u8;
pub const THOST_FTDC_CIDT_Speculation: u8 = 49u8;
pub const THOST_FTDC_CIDT_Arbitrage: u8 = 50u8;
pub const THOST_FTDC_CIDT_Hedge: u8 = 51u8;
pub const THOST_FTDC_CIDT_MarketMaker: u8 = 53u8;
pub const THOST_FTDC_OPT_AnyPrice: u8 = 49u8;
pub const THOST_FTDC_OPT_LimitPrice: u8 = 50u8;
pub const THOST_FTDC_OPT_BestPrice: u8 = 51u8;
pub const THOST_FTDC_OPT_LastPrice: u8 = 52u8;
pub const THOST_FTDC_OPT_LastPricePlusOneTicks: u8 = 53u8;
pub const THOST_FTDC_OPT_LastPricePlusTwoTicks: u8 = 54u8;
pub const THOST_FTDC_OPT_LastPricePlusThreeTicks: u8 = 55u8;
pub const THOST_FTDC_OPT_AskPrice1: u8 = 56u8;
pub const THOST_FTDC_OPT_AskPrice1PlusOneTicks: u8 = 57u8;
pub const THOST_FTDC_OPT_AskPrice1PlusTwoTicks: u8 = 65u8;
pub const THOST_FTDC_OPT_AskPrice1PlusThreeTicks: u8 = 66u8;
pub const THOST_FTDC_OPT_BidPrice1: u8 = 67u8;
pub const THOST_FTDC_OPT_BidPrice1PlusOneTicks: u8 = 68u8;
pub const THOST_FTDC_OPT_BidPrice1PlusTwoTicks: u8 = 69u8;
pub const THOST_FTDC_OPT_BidPrice1PlusThreeTicks: u8 = 70u8;
pub const THOST_FTDC_OPT_FiveLevelPrice: u8 = 71u8;
pub const THOST_FTDC_OF_Open: u8 = 48u8;
pub const THOST_FTDC_OF_Close: u8 = 49u8;
pub const THOST_FTDC_OF_ForceClose: u8 = 50u8;
pub const THOST_FTDC_OF_CloseToday: u8 = 51u8;
pub const THOST_FTDC_OF_CloseYesterday: u8 = 52u8;
pub const THOST_FTDC_OF_ForceOff: u8 = 53u8;
pub const THOST_FTDC_OF_LocalForceClose: u8 = 54u8;
pub const THOST_FTDC_FCC_NotForceClose: u8 = 48u8;
pub const THOST_FTDC_FCC_LackDeposit: u8 = 49u8;
pub const THOST_FTDC_FCC_ClientOverPositionLimit: u8 = 50u8;
pub const THOST_FTDC_FCC_MemberOverPositionLimit: u8 = 51u8;
pub const THOST_FTDC_FCC_NotMultiple: u8 = 52u8;
pub const THOST_FTDC_FCC_Violation: u8 = 53u8;
pub const THOST_FTDC_FCC_Other: u8 = 54u8;
pub const THOST_FTDC_FCC_PersonDeliv: u8 = 55u8;
pub const THOST_FTDC_ORDT_Normal: u8 = 48u8;
pub const THOST_FTDC_ORDT_DeriveFromQuote: u8 = 49u8;
pub const THOST_FTDC_ORDT_DeriveFromCombination: u8 = 50u8;
pub const THOST_FTDC_ORDT_Combination: u8 = 51u8;
pub const THOST_FTDC_ORDT_ConditionalOrder: u8 = 52u8;
pub const THOST_FTDC_ORDT_Swap: u8 = 53u8;
pub const THOST_FTDC_TC_IOC: u8 = 49u8;
pub const THOST_FTDC_TC_GFS: u8 = 50u8;
pub const THOST_FTDC_TC_GFD: u8 = 51u8;
pub const THOST_FTDC_TC_GTD: u8 = 52u8;
pub const THOST_FTDC_TC_GTC: u8 = 53u8;
pub const THOST_FTDC_TC_GFA: u8 = 54u8;
pub const THOST_FTDC_VC_AV: u8 = 49u8;
pub const THOST_FTDC_VC_MV: u8 = 50u8;
pub const THOST_FTDC_VC_CV: u8 = 51u8;
pub const THOST_FTDC_CC_Immediately: u8 = 49u8;
pub const THOST_FTDC_CC_Touch: u8 = 50u8;
pub const THOST_FTDC_CC_TouchProfit: u8 = 51u8;
pub const THOST_FTDC_CC_ParkedOrder: u8 = 52u8;
pub const THOST_FTDC_CC_LastPriceGreaterThanStopPrice: u8 = 53u8;
pub const THOST_FTDC_CC_LastPriceGreaterEqualStopPrice: u8 = 54u8;
pub const THOST_FTDC_CC_LastPriceLesserThanStopPrice: u8 = 55u8;
pub const THOST_FTDC_CC_LastPriceLesserEqualStopPrice: u8 = 56u8;
pub const THOST_FTDC_CC_AskPriceGreaterThanStopPrice: u8 = 57u8;
pub const THOST_FTDC_CC_AskPriceGreaterEqualStopPrice: u8 = 65u8;
pub const THOST_FTDC_CC_AskPriceLesserThanStopPrice: u8 = 66u8;
pub const THOST_FTDC_CC_AskPriceLesserEqualStopPrice: u8 = 67u8;
pub const THOST_FTDC_CC_BidPriceGreaterThanStopPrice: u8 = 68u8;
pub const THOST_FTDC_CC_BidPriceGreaterEqualStopPrice: u8 = 69u8;
pub const THOST_FTDC_CC_BidPriceLesserThanStopPrice: u8 = 70u8;
pub const THOST_FTDC_CC_BidPriceLesserEqualStopPrice: u8 = 72u8;
pub const THOST_FTDC_AF_Delete: u8 = 48u8;
pub const THOST_FTDC_AF_Modify: u8 = 51u8;
pub const THOST_FTDC_TR_Allow: u8 = 48u8;
pub const THOST_FTDC_TR_CloseOnly: u8 = 49u8;
pub const THOST_FTDC_TR_Forbidden: u8 = 50u8;
pub const THOST_FTDC_OSRC_Participant: u8 = 48u8;
pub const THOST_FTDC_OSRC_Administrator: u8 = 49u8;
pub const THOST_FTDC_TRDT_SplitCombination: u8 = 35u8;
pub const THOST_FTDC_TRDT_Common: u8 = 48u8;
pub const THOST_FTDC_TRDT_OptionsExecution: u8 = 49u8;
pub const THOST_FTDC_TRDT_OTC: u8 = 50u8;
pub const THOST_FTDC_TRDT_EFPDerived: u8 = 51u8;
pub const THOST_FTDC_TRDT_CombinationDerived: u8 = 52u8;
pub const THOST_FTDC_PSRC_LastPrice: u8 = 48u8;
pub const THOST_FTDC_PSRC_Buy: u8 = 49u8;
pub const THOST_FTDC_PSRC_Sell: u8 = 50u8;
pub const THOST_FTDC_IS_BeforeTrading: u8 = 48u8;
pub const THOST_FTDC_IS_NoTrading: u8 = 49u8;
pub const THOST_FTDC_IS_Continous: u8 = 50u8;
pub const THOST_FTDC_IS_AuctionOrdering: u8 = 51u8;
pub const THOST_FTDC_IS_AuctionBalance: u8 = 52u8;
pub const THOST_FTDC_IS_AuctionMatch: u8 = 53u8;
pub const THOST_FTDC_IS_Closed: u8 = 54u8;
pub const THOST_FTDC_IER_Automatic: u8 = 49u8;
pub const THOST_FTDC_IER_Manual: u8 = 50u8;
pub const THOST_FTDC_IER_Fuse: u8 = 51u8;
pub const THOST_FTDC_BS_NoUpload: u8 = 49u8;
pub const THOST_FTDC_BS_Uploaded: u8 = 50u8;
pub const THOST_FTDC_BS_Failed: u8 = 51u8;
pub const THOST_FTDC_RS_All: u8 = 49u8;
pub const THOST_FTDC_RS_ByProduct: u8 = 50u8;
pub const THOST_FTDC_RP_ByVolume: u8 = 49u8;
pub const THOST_FTDC_RP_ByFeeOnHand: u8 = 50u8;
pub const THOST_FTDC_RL_Level1: u8 = 49u8;
pub const THOST_FTDC_RL_Level2: u8 = 50u8;
pub const THOST_FTDC_RL_Level3: u8 = 51u8;
pub const THOST_FTDC_RL_Level4: u8 = 52u8;
pub const THOST_FTDC_RL_Level5: u8 = 53u8;
pub const THOST_FTDC_RL_Level6: u8 = 54u8;
pub const THOST_FTDC_RL_Level7: u8 = 55u8;
pub const THOST_FTDC_RL_Level8: u8 = 56u8;
pub const THOST_FTDC_RL_Level9: u8 = 57u8;
pub const THOST_FTDC_RSD_ByPeriod: u8 = 49u8;
pub const THOST_FTDC_RSD_ByStandard: u8 = 50u8;
pub const THOST_FTDC_MT_Out: u8 = 48u8;
pub const THOST_FTDC_MT_In: u8 = 49u8;
pub const THOST_FTDC_ISPI_MortgageRatio: u8 = 52u8;
pub const THOST_FTDC_ISPI_MarginWay: u8 = 53u8;
pub const THOST_FTDC_ISPI_BillDeposit: u8 = 57u8;
pub const THOST_FTDC_ESPI_MortgageRatio: u8 = 49u8;
pub const THOST_FTDC_ESPI_OtherFundItem: u8 = 50u8;
pub const THOST_FTDC_ESPI_OtherFundImport: u8 = 51u8;
pub const THOST_FTDC_ESPI_CFFEXMinPrepa: u8 = 54u8;
pub const THOST_FTDC_ESPI_CZCESettlementType: u8 = 55u8;
pub const THOST_FTDC_ESPI_ExchDelivFeeMode: u8 = 57u8;
pub const THOST_FTDC_ESPI_DelivFeeMode: u8 = 48u8;
pub const THOST_FTDC_ESPI_CZCEComMarginType: u8 = 65u8;
pub const THOST_FTDC_ESPI_DceComMarginType: u8 = 66u8;
pub const THOST_FTDC_ESPI_OptOutDisCountRate: u8 = 97u8;
pub const THOST_FTDC_ESPI_OptMiniGuarantee: u8 = 98u8;
pub const THOST_FTDC_SPI_InvestorIDMinLength: u8 = 49u8;
pub const THOST_FTDC_SPI_AccountIDMinLength: u8 = 50u8;
pub const THOST_FTDC_SPI_UserRightLogon: u8 = 51u8;
pub const THOST_FTDC_SPI_SettlementBillTrade: u8 = 52u8;
pub const THOST_FTDC_SPI_TradingCode: u8 = 53u8;
pub const THOST_FTDC_SPI_CheckFund: u8 = 54u8;
pub const THOST_FTDC_SPI_CommModelRight: u8 = 55u8;
pub const THOST_FTDC_SPI_MarginModelRight: u8 = 57u8;
pub const THOST_FTDC_SPI_IsStandardActive: u8 = 56u8;
pub const THOST_FTDC_SPI_UploadSettlementFile: u8 = 85u8;
pub const THOST_FTDC_SPI_DownloadCSRCFile: u8 = 68u8;
pub const THOST_FTDC_SPI_SettlementBillFile: u8 = 83u8;
pub const THOST_FTDC_SPI_CSRCOthersFile: u8 = 67u8;
pub const THOST_FTDC_SPI_InvestorPhoto: u8 = 80u8;
pub const THOST_FTDC_SPI_CSRCData: u8 = 82u8;
pub const THOST_FTDC_SPI_InvestorPwdModel: u8 = 73u8;
pub const THOST_FTDC_SPI_CFFEXInvestorSettleFile: u8 = 70u8;
pub const THOST_FTDC_SPI_InvestorIDType: u8 = 97u8;
pub const THOST_FTDC_SPI_FreezeMaxReMain: u8 = 114u8;
pub const THOST_FTDC_SPI_IsSync: u8 = 65u8;
pub const THOST_FTDC_SPI_RelieveOpenLimit: u8 = 79u8;
pub const THOST_FTDC_SPI_IsStandardFreeze: u8 = 88u8;
pub const THOST_FTDC_SPI_CZCENormalProductHedge: u8 = 66u8;
pub const THOST_FTDC_TPID_EncryptionStandard: u8 = 69u8;
pub const THOST_FTDC_TPID_RiskMode: u8 = 82u8;
pub const THOST_FTDC_TPID_RiskModeGlobal: u8 = 71u8;
pub const THOST_FTDC_TPID_modeEncode: u8 = 80u8;
pub const THOST_FTDC_TPID_tickMode: u8 = 84u8;
pub const THOST_FTDC_TPID_SingleUserSessionMaxNum: u8 = 83u8;
pub const THOST_FTDC_TPID_LoginFailMaxNum: u8 = 76u8;
pub const THOST_FTDC_TPID_IsAuthForce: u8 = 65u8;
pub const THOST_FTDC_TPID_IsPosiFreeze: u8 = 70u8;
pub const THOST_FTDC_TPID_IsPosiLimit: u8 = 77u8;
pub const THOST_FTDC_TPID_ForQuoteTimeInterval: u8 = 81u8;
pub const THOST_FTDC_TPID_IsFuturePosiLimit: u8 = 66u8;
pub const THOST_FTDC_TPID_IsFutureOrderFreq: u8 = 67u8;
pub const THOST_FTDC_TPID_IsExecOrderProfit: u8 = 72u8;
pub const THOST_FTDC_TPID_IsCheckBankAcc: u8 = 73u8;
pub const THOST_FTDC_TPID_PasswordDeadLine: u8 = 74u8;
pub const THOST_FTDC_TPID_IsStrongPassword: u8 = 75u8;
pub const THOST_FTDC_TPID_BalanceMorgage: u8 = 97u8;
pub const THOST_FTDC_TPID_MinPwdLen: u8 = 79u8;
pub const THOST_FTDC_TPID_LoginFailMaxNumForIP: u8 = 85u8;
pub const THOST_FTDC_TPID_PasswordPeriod: u8 = 86u8;
pub const THOST_FTDC_FI_SettlementFund: u8 = 70u8;
pub const THOST_FTDC_FI_Trade: u8 = 84u8;
pub const THOST_FTDC_FI_InvestorPosition: u8 = 80u8;
pub const THOST_FTDC_FI_SubEntryFund: u8 = 79u8;
pub const THOST_FTDC_FI_CZCECombinationPos: u8 = 67u8;
pub const THOST_FTDC_FI_CSRCData: u8 = 82u8;
pub const THOST_FTDC_FI_CZCEClose: u8 = 76u8;
pub const THOST_FTDC_FI_CZCENoClose: u8 = 78u8;
pub const THOST_FTDC_FI_PositionDtl: u8 = 68u8;
pub const THOST_FTDC_FI_OptionStrike: u8 = 83u8;
pub const THOST_FTDC_FI_SettlementPriceComparison: u8 = 77u8;
pub const THOST_FTDC_FI_NonTradePosChange: u8 = 66u8;
pub const THOST_FTDC_FUT_Settlement: u8 = 48u8;
pub const THOST_FTDC_FUT_Check: u8 = 49u8;
pub const THOST_FTDC_FFT_Txt: u8 = 48u8;
pub const THOST_FTDC_FFT_Zip: u8 = 49u8;
pub const THOST_FTDC_FFT_DBF: u8 = 50u8;
pub const THOST_FTDC_FUS_SucceedUpload: u8 = 49u8;
pub const THOST_FTDC_FUS_FailedUpload: u8 = 50u8;
pub const THOST_FTDC_FUS_SucceedLoad: u8 = 51u8;
pub const THOST_FTDC_FUS_PartSucceedLoad: u8 = 52u8;
pub const THOST_FTDC_FUS_FailedLoad: u8 = 53u8;
pub const THOST_FTDC_TD_Out: u8 = 48u8;
pub const THOST_FTDC_TD_In: u8 = 49u8;
pub const THOST_FTDC_SC_NoSpecialRule: u8 = 48u8;
pub const THOST_FTDC_SC_NoSpringFestival: u8 = 49u8;
pub const THOST_FTDC_IPT_LastSettlement: u8 = 49u8;
pub const THOST_FTDC_IPT_LaseClose: u8 = 50u8;
pub const THOST_FTDC_PLP_Active: u8 = 49u8;
pub const THOST_FTDC_PLP_NonActive: u8 = 50u8;
pub const THOST_FTDC_PLP_Canceled: u8 = 51u8;
pub const THOST_FTDC_DM_CashDeliv: u8 = 49u8;
pub const THOST_FTDC_DM_CommodityDeliv: u8 = 50u8;
pub const THOST_FTDC_FIOT_FundIO: u8 = 49u8;
pub const THOST_FTDC_FIOT_Transfer: u8 = 50u8;
pub const THOST_FTDC_FIOT_SwapCurrency: u8 = 51u8;
pub const THOST_FTDC_FT_Deposite: u8 = 49u8;
pub const THOST_FTDC_FT_ItemFund: u8 = 50u8;
pub const THOST_FTDC_FT_Company: u8 = 51u8;
pub const THOST_FTDC_FT_InnerTransfer: u8 = 52u8;
pub const THOST_FTDC_FD_In: u8 = 49u8;
pub const THOST_FTDC_FD_Out: u8 = 50u8;
pub const THOST_FTDC_FS_Record: u8 = 49u8;
pub const THOST_FTDC_FS_Check: u8 = 50u8;
pub const THOST_FTDC_FS_Charge: u8 = 51u8;
pub const THOST_FTDC_PS_None: u8 = 49u8;
pub const THOST_FTDC_PS_Publishing: u8 = 50u8;
pub const THOST_FTDC_PS_Published: u8 = 51u8;
pub const THOST_FTDC_ES_NonActive: u8 = 49u8;
pub const THOST_FTDC_ES_Startup: u8 = 50u8;
pub const THOST_FTDC_ES_Initialize: u8 = 51u8;
pub const THOST_FTDC_ES_Initialized: u8 = 52u8;
pub const THOST_FTDC_ES_Close: u8 = 53u8;
pub const THOST_FTDC_ES_Closed: u8 = 54u8;
pub const THOST_FTDC_ES_Settlement: u8 = 55u8;
pub const THOST_FTDC_STS_Initialize: u8 = 48u8;
pub const THOST_FTDC_STS_Settlementing: u8 = 49u8;
pub const THOST_FTDC_STS_Settlemented: u8 = 50u8;
pub const THOST_FTDC_STS_Finished: u8 = 51u8;
pub const THOST_FTDC_CT_Person: u8 = 48u8;
pub const THOST_FTDC_CT_Company: u8 = 49u8;
pub const THOST_FTDC_CT_Fund: u8 = 50u8;
pub const THOST_FTDC_CT_SpecialOrgan: u8 = 51u8;
pub const THOST_FTDC_CT_Asset: u8 = 52u8;
pub const THOST_FTDC_BT_Trade: u8 = 48u8;
pub const THOST_FTDC_BT_TradeSettle: u8 = 49u8;
pub const THOST_FTDC_FAS_Low: u8 = 49u8;
pub const THOST_FTDC_FAS_Normal: u8 = 50u8;
pub const THOST_FTDC_FAS_Focus: u8 = 51u8;
pub const THOST_FTDC_FAS_Risk: u8 = 52u8;
pub const THOST_FTDC_FAS_ByTrade: u8 = 49u8;
pub const THOST_FTDC_FAS_ByDeliv: u8 = 50u8;
pub const THOST_FTDC_FAS_None: u8 = 51u8;
pub const THOST_FTDC_FAS_FixFee: u8 = 52u8;
pub const THOST_FTDC_PWDT_Trade: u8 = 49u8;
pub const THOST_FTDC_PWDT_Account: u8 = 50u8;
pub const THOST_FTDC_AG_All: u8 = 49u8;
pub const THOST_FTDC_AG_OnlyLost: u8 = 50u8;
pub const THOST_FTDC_AG_OnlyGain: u8 = 51u8;
pub const THOST_FTDC_AG_None: u8 = 52u8;
pub const THOST_FTDC_ICP_Include: u8 = 48u8;
pub const THOST_FTDC_ICP_NotInclude: u8 = 50u8;
pub const THOST_FTDC_AWT_Enable: u8 = 48u8;
pub const THOST_FTDC_AWT_Disable: u8 = 50u8;
pub const THOST_FTDC_AWT_NoHoldEnable: u8 = 51u8;
pub const THOST_FTDC_FPWD_UnCheck: u8 = 48u8;
pub const THOST_FTDC_FPWD_Check: u8 = 49u8;
pub const THOST_FTDC_TT_BankToFuture: u8 = 48u8;
pub const THOST_FTDC_TT_FutureToBank: u8 = 49u8;
pub const THOST_FTDC_TVF_Invalid: u8 = 48u8;
pub const THOST_FTDC_TVF_Valid: u8 = 49u8;
pub const THOST_FTDC_TVF_Reverse: u8 = 50u8;
pub const THOST_FTDC_RN_CD: u8 = 48u8;
pub const THOST_FTDC_RN_ZT: u8 = 49u8;
pub const THOST_FTDC_RN_QT: u8 = 50u8;
pub const THOST_FTDC_SEX_None: u8 = 48u8;
pub const THOST_FTDC_SEX_Man: u8 = 49u8;
pub const THOST_FTDC_SEX_Woman: u8 = 50u8;
pub const THOST_FTDC_UT_Investor: u8 = 48u8;
pub const THOST_FTDC_UT_Operator: u8 = 49u8;
pub const THOST_FTDC_UT_SuperUser: u8 = 50u8;
pub const THOST_FTDC_RATETYPE_MarginRate: u8 = 50u8;
pub const THOST_FTDC_NOTETYPE_TradeSettleBill: u8 = 49u8;
pub const THOST_FTDC_NOTETYPE_TradeSettleMonth: u8 = 50u8;
pub const THOST_FTDC_NOTETYPE_CallMarginNotes: u8 = 51u8;
pub const THOST_FTDC_NOTETYPE_ForceCloseNotes: u8 = 52u8;
pub const THOST_FTDC_NOTETYPE_TradeNotes: u8 = 53u8;
pub const THOST_FTDC_NOTETYPE_DelivNotes: u8 = 54u8;
pub const THOST_FTDC_SBS_Day: u8 = 49u8;
pub const THOST_FTDC_SBS_Volume: u8 = 50u8;
pub const THOST_FTDC_ST_Day: u8 = 48u8;
pub const THOST_FTDC_ST_Month: u8 = 49u8;
pub const THOST_FTDC_URT_Logon: u8 = 49u8;
pub const THOST_FTDC_URT_Transfer: u8 = 50u8;
pub const THOST_FTDC_URT_EMail: u8 = 51u8;
pub const THOST_FTDC_URT_Fax: u8 = 52u8;
pub const THOST_FTDC_URT_ConditionOrder: u8 = 53u8;
pub const THOST_FTDC_MPT_PreSettlementPrice: u8 = 49u8;
pub const THOST_FTDC_MPT_SettlementPrice: u8 = 50u8;
pub const THOST_FTDC_MPT_AveragePrice: u8 = 51u8;
pub const THOST_FTDC_MPT_OpenPrice: u8 = 52u8;
pub const THOST_FTDC_BGS_None: u8 = 48u8;
pub const THOST_FTDC_BGS_NoGenerated: u8 = 49u8;
pub const THOST_FTDC_BGS_Generated: u8 = 50u8;
pub const THOST_FTDC_AT_HandlePositionAlgo: u8 = 49u8;
pub const THOST_FTDC_AT_FindMarginRateAlgo: u8 = 50u8;
pub const THOST_FTDC_HPA_Base: u8 = 49u8;
pub const THOST_FTDC_HPA_DCE: u8 = 50u8;
pub const THOST_FTDC_HPA_CZCE: u8 = 51u8;
pub const THOST_FTDC_FMRA_Base: u8 = 49u8;
pub const THOST_FTDC_FMRA_DCE: u8 = 50u8;
pub const THOST_FTDC_FMRA_CZCE: u8 = 51u8;
pub const THOST_FTDC_HTAA_Base: u8 = 49u8;
pub const THOST_FTDC_HTAA_DCE: u8 = 50u8;
pub const THOST_FTDC_HTAA_CZCE: u8 = 51u8;
pub const THOST_FTDC_PST_Order: u8 = 49u8;
pub const THOST_FTDC_PST_Open: u8 = 50u8;
pub const THOST_FTDC_PST_Fund: u8 = 51u8;
pub const THOST_FTDC_PST_Settlement: u8 = 52u8;
pub const THOST_FTDC_PST_Company: u8 = 53u8;
pub const THOST_FTDC_PST_Corporation: u8 = 54u8;
pub const THOST_FTDC_PST_LinkMan: u8 = 55u8;
pub const THOST_FTDC_PST_Ledger: u8 = 56u8;
pub const THOST_FTDC_PST_Trustee: u8 = 57u8;
pub const THOST_FTDC_PST_TrusteeCorporation: u8 = 65u8;
pub const THOST_FTDC_PST_TrusteeOpen: u8 = 66u8;
pub const THOST_FTDC_PST_TrusteeContact: u8 = 67u8;
pub const THOST_FTDC_PST_ForeignerRefer: u8 = 68u8;
pub const THOST_FTDC_PST_CorporationRefer: u8 = 69u8;
pub const THOST_FTDC_QIR_All: u8 = 49u8;
pub const THOST_FTDC_QIR_Group: u8 = 50u8;
pub const THOST_FTDC_QIR_Single: u8 = 51u8;
pub const THOST_FTDC_IRS_Normal: u8 = 49u8;
pub const THOST_FTDC_IRS_Warn: u8 = 50u8;
pub const THOST_FTDC_IRS_Call: u8 = 51u8;
pub const THOST_FTDC_IRS_Force: u8 = 52u8;
pub const THOST_FTDC_IRS_Exception: u8 = 53u8;
pub const THOST_FTDC_UET_Login: u8 = 49u8;
pub const THOST_FTDC_UET_Logout: u8 = 50u8;
pub const THOST_FTDC_UET_Trading: u8 = 51u8;
pub const THOST_FTDC_UET_TradingError: u8 = 52u8;
pub const THOST_FTDC_UET_UpdatePassword: u8 = 53u8;
pub const THOST_FTDC_UET_Authenticate: u8 = 54u8;
pub const THOST_FTDC_UET_Other: u8 = 57u8;
pub const THOST_FTDC_ICS_Close: u8 = 48u8;
pub const THOST_FTDC_ICS_CloseToday: u8 = 49u8;
pub const THOST_FTDC_SM_Non: u8 = 48u8;
pub const THOST_FTDC_SM_Instrument: u8 = 49u8;
pub const THOST_FTDC_SM_Product: u8 = 50u8;
pub const THOST_FTDC_SM_Investor: u8 = 51u8;
pub const THOST_FTDC_PAOS_NotSend: u8 = 49u8;
pub const THOST_FTDC_PAOS_Send: u8 = 50u8;
pub const THOST_FTDC_PAOS_Deleted: u8 = 51u8;
pub const THOST_FTDC_VDS_Dealing: u8 = 49u8;
pub const THOST_FTDC_VDS_DeaclSucceed: u8 = 50u8;
pub const THOST_FTDC_ORGS_Standard: u8 = 48u8;
pub const THOST_FTDC_ORGS_ESunny: u8 = 49u8;
pub const THOST_FTDC_ORGS_KingStarV6: u8 = 50u8;
pub const THOST_FTDC_VTS_NaturalDeal: u8 = 48u8;
pub const THOST_FTDC_VTS_SucceedEnd: u8 = 49u8;
pub const THOST_FTDC_VTS_FailedEND: u8 = 50u8;
pub const THOST_FTDC_VTS_Exception: u8 = 51u8;
pub const THOST_FTDC_VTS_ManualDeal: u8 = 52u8;
pub const THOST_FTDC_VTS_MesException: u8 = 53u8;
pub const THOST_FTDC_VTS_SysException: u8 = 54u8;
pub const THOST_FTDC_VBAT_BankBook: u8 = 49u8;
pub const THOST_FTDC_VBAT_BankCard: u8 = 50u8;
pub const THOST_FTDC_VBAT_CreditCard: u8 = 51u8;
pub const THOST_FTDC_VMS_Natural: u8 = 48u8;
pub const THOST_FTDC_VMS_Canceled: u8 = 57u8;
pub const THOST_FTDC_VAA_NoAvailAbility: u8 = 48u8;
pub const THOST_FTDC_VAA_AvailAbility: u8 = 49u8;
pub const THOST_FTDC_VAA_Repeal: u8 = 50u8;
pub const THOST_FTDC_GEN_Program: u8 = 48u8;
pub const THOST_FTDC_GEN_HandWork: u8 = 49u8;
pub const THOST_FTDC_CFMMCKK_REQUEST: u8 = 82u8;
pub const THOST_FTDC_CFMMCKK_AUTO: u8 = 65u8;
pub const THOST_FTDC_CFMMCKK_MANUAL: u8 = 77u8;
pub const THOST_FTDC_CFT_IDCard: u8 = 48u8;
pub const THOST_FTDC_CFT_Passport: u8 = 49u8;
pub const THOST_FTDC_CFT_OfficerIDCard: u8 = 50u8;
pub const THOST_FTDC_CFT_SoldierIDCard: u8 = 51u8;
pub const THOST_FTDC_CFT_HomeComingCard: u8 = 52u8;
pub const THOST_FTDC_CFT_HouseholdRegister: u8 = 53u8;
pub const THOST_FTDC_CFT_LicenseNo: u8 = 54u8;
pub const THOST_FTDC_CFT_InstitutionCodeCard: u8 = 55u8;
pub const THOST_FTDC_CFT_TempLicenseNo: u8 = 56u8;
pub const THOST_FTDC_CFT_NoEnterpriseLicenseNo: u8 = 57u8;
pub const THOST_FTDC_CFT_OtherCard: u8 = 120u8;
pub const THOST_FTDC_CFT_SuperDepAgree: u8 = 97u8;
pub const THOST_FTDC_FBC_Others: u8 = 48u8;
pub const THOST_FTDC_FBC_TransferDetails: u8 = 49u8;
pub const THOST_FTDC_FBC_CustAccStatus: u8 = 50u8;
pub const THOST_FTDC_FBC_AccountTradeDetails: u8 = 51u8;
pub const THOST_FTDC_FBC_FutureAccountChangeInfoDetails: u8 = 52u8;
pub const THOST_FTDC_FBC_CustMoneyDetail: u8 = 53u8;
pub const THOST_FTDC_FBC_CustCancelAccountInfo: u8 = 54u8;
pub const THOST_FTDC_FBC_CustMoneyResult: u8 = 55u8;
pub const THOST_FTDC_FBC_OthersExceptionResult: u8 = 56u8;
pub const THOST_FTDC_FBC_CustInterestNetMoneyDetails: u8 = 57u8;
pub const THOST_FTDC_FBC_CustMoneySendAndReceiveDetails: u8 = 97u8;
pub const THOST_FTDC_FBC_CorporationMoneyTotal: u8 = 98u8;
pub const THOST_FTDC_FBC_MainbodyMoneyTotal: u8 = 99u8;
pub const THOST_FTDC_FBC_MainPartMonitorData: u8 = 100u8;
pub const THOST_FTDC_FBC_PreparationMoney: u8 = 101u8;
pub const THOST_FTDC_FBC_BankMoneyMonitorData: u8 = 102u8;
pub const THOST_FTDC_CEC_Exchange: u8 = 49u8;
pub const THOST_FTDC_CEC_Cash: u8 = 50u8;
pub const THOST_FTDC_YNI_Yes: u8 = 48u8;
pub const THOST_FTDC_YNI_No: u8 = 49u8;
pub const THOST_FTDC_BLT_CurrentMoney: u8 = 48u8;
pub const THOST_FTDC_BLT_UsableMoney: u8 = 49u8;
pub const THOST_FTDC_BLT_FetchableMoney: u8 = 50u8;
pub const THOST_FTDC_BLT_FreezeMoney: u8 = 51u8;
pub const THOST_FTDC_GD_Unknown: u8 = 48u8;
pub const THOST_FTDC_GD_Male: u8 = 49u8;
pub const THOST_FTDC_GD_Female: u8 = 50u8;
pub const THOST_FTDC_FPF_BEN: u8 = 48u8;
pub const THOST_FTDC_FPF_OUR: u8 = 49u8;
pub const THOST_FTDC_FPF_SHA: u8 = 50u8;
pub const THOST_FTDC_PWKT_ExchangeKey: u8 = 48u8;
pub const THOST_FTDC_PWKT_PassWordKey: u8 = 49u8;
pub const THOST_FTDC_PWKT_MACKey: u8 = 50u8;
pub const THOST_FTDC_PWKT_MessageKey: u8 = 51u8;
pub const THOST_FTDC_PWT_Query: u8 = 48u8;
pub const THOST_FTDC_PWT_Fetch: u8 = 49u8;
pub const THOST_FTDC_PWT_Transfer: u8 = 50u8;
pub const THOST_FTDC_PWT_Trade: u8 = 51u8;
pub const THOST_FTDC_EM_NoEncry: u8 = 48u8;
pub const THOST_FTDC_EM_DES: u8 = 49u8;
pub const THOST_FTDC_EM_3DES: u8 = 50u8;
pub const THOST_FTDC_BRF_BankNotNeedRepeal: u8 = 48u8;
pub const THOST_FTDC_BRF_BankWaitingRepeal: u8 = 49u8;
pub const THOST_FTDC_BRF_BankBeenRepealed: u8 = 50u8;
pub const THOST_FTDC_BRORF_BrokerNotNeedRepeal: u8 = 48u8;
pub const THOST_FTDC_BRORF_BrokerWaitingRepeal: u8 = 49u8;
pub const THOST_FTDC_BRORF_BrokerBeenRepealed: u8 = 50u8;
pub const THOST_FTDC_TS_Bank: u8 = 48u8;
pub const THOST_FTDC_TS_Future: u8 = 49u8;
pub const THOST_FTDC_TS_Store: u8 = 50u8;
pub const THOST_FTDC_LF_Yes: u8 = 48u8;
pub const THOST_FTDC_LF_No: u8 = 49u8;
pub const THOST_FTDC_BAS_Normal: u8 = 48u8;
pub const THOST_FTDC_BAS_Freeze: u8 = 49u8;
pub const THOST_FTDC_BAS_ReportLoss: u8 = 50u8;
pub const THOST_FTDC_MAS_Normal: u8 = 48u8;
pub const THOST_FTDC_MAS_Cancel: u8 = 49u8;
pub const THOST_FTDC_MSS_Point: u8 = 48u8;
pub const THOST_FTDC_MSS_PrePoint: u8 = 49u8;
pub const THOST_FTDC_MSS_CancelPoint: u8 = 50u8;
pub const THOST_FTDC_SYT_FutureBankTransfer: u8 = 48u8;
pub const THOST_FTDC_SYT_StockBankTransfer: u8 = 49u8;
pub const THOST_FTDC_SYT_TheThirdPartStore: u8 = 50u8;
pub const THOST_FTDC_TEF_NormalProcessing: u8 = 48u8;
pub const THOST_FTDC_TEF_Success: u8 = 49u8;
pub const THOST_FTDC_TEF_Failed: u8 = 50u8;
pub const THOST_FTDC_TEF_Abnormal: u8 = 51u8;
pub const THOST_FTDC_TEF_ManualProcessedForException: u8 = 52u8;
pub const THOST_FTDC_TEF_CommuFailedNeedManualProcess: u8 = 53u8;
pub const THOST_FTDC_TEF_SysErrorNeedManualProcess: u8 = 54u8;
pub const THOST_FTDC_PSS_NotProcess: u8 = 48u8;
pub const THOST_FTDC_PSS_StartProcess: u8 = 49u8;
pub const THOST_FTDC_PSS_Finished: u8 = 50u8;
pub const THOST_FTDC_CUSTT_Person: u8 = 48u8;
pub const THOST_FTDC_CUSTT_Institution: u8 = 49u8;
pub const THOST_FTDC_FBTTD_FromBankToFuture: u8 = 49u8;
pub const THOST_FTDC_FBTTD_FromFutureToBank: u8 = 50u8;
pub const THOST_FTDC_OOD_Open: u8 = 49u8;
pub const THOST_FTDC_OOD_Destroy: u8 = 48u8;
pub const THOST_FTDC_AVAF_Invalid: u8 = 48u8;
pub const THOST_FTDC_AVAF_Valid: u8 = 49u8;
pub const THOST_FTDC_AVAF_Repeal: u8 = 50u8;
pub const THOST_FTDC_OT_Bank: u8 = 49u8;
pub const THOST_FTDC_OT_Future: u8 = 50u8;
pub const THOST_FTDC_OT_PlateForm: u8 = 57u8;
pub const THOST_FTDC_OL_HeadQuarters: u8 = 49u8;
pub const THOST_FTDC_OL_Branch: u8 = 50u8;
pub const THOST_FTDC_PID_FutureProtocal: u8 = 48u8;
pub const THOST_FTDC_PID_ICBCProtocal: u8 = 49u8;
pub const THOST_FTDC_PID_ABCProtocal: u8 = 50u8;
pub const THOST_FTDC_PID_CBCProtocal: u8 = 51u8;
pub const THOST_FTDC_PID_CCBProtocal: u8 = 52u8;
pub const THOST_FTDC_PID_BOCOMProtocal: u8 = 53u8;
pub const THOST_FTDC_PID_FBTPlateFormProtocal: u8 = 88u8;
pub const THOST_FTDC_CM_ShortConnect: u8 = 48u8;
pub const THOST_FTDC_CM_LongConnect: u8 = 49u8;
pub const THOST_FTDC_SRM_ASync: u8 = 48u8;
pub const THOST_FTDC_SRM_Sync: u8 = 49u8;
pub const THOST_FTDC_BAT_BankBook: u8 = 49u8;
pub const THOST_FTDC_BAT_SavingCard: u8 = 50u8;
pub const THOST_FTDC_BAT_CreditCard: u8 = 51u8;
pub const THOST_FTDC_FAT_BankBook: u8 = 49u8;
pub const THOST_FTDC_FAT_SavingCard: u8 = 50u8;
pub const THOST_FTDC_FAT_CreditCard: u8 = 51u8;
pub const THOST_FTDC_OS_Ready: u8 = 48u8;
pub const THOST_FTDC_OS_CheckIn: u8 = 49u8;
pub const THOST_FTDC_OS_CheckOut: u8 = 50u8;
pub const THOST_FTDC_OS_CheckFileArrived: u8 = 51u8;
pub const THOST_FTDC_OS_CheckDetail: u8 = 52u8;
pub const THOST_FTDC_OS_DayEndClean: u8 = 53u8;
pub const THOST_FTDC_OS_Invalid: u8 = 57u8;
pub const THOST_FTDC_CCBFM_ByAmount: u8 = 49u8;
pub const THOST_FTDC_CCBFM_ByMonth: u8 = 50u8;
pub const THOST_FTDC_CAPIT_Client: u8 = 49u8;
pub const THOST_FTDC_CAPIT_Server: u8 = 50u8;
pub const THOST_FTDC_CAPIT_UserApi: u8 = 51u8;
pub const THOST_FTDC_LS_Connected: u8 = 49u8;
pub const THOST_FTDC_LS_Disconnected: u8 = 50u8;
pub const THOST_FTDC_BPWDF_NoCheck: u8 = 48u8;
pub const THOST_FTDC_BPWDF_BlankCheck: u8 = 49u8;
pub const THOST_FTDC_BPWDF_EncryptCheck: u8 = 50u8;
pub const THOST_FTDC_SAT_AccountID: u8 = 49u8;
pub const THOST_FTDC_SAT_CardID: u8 = 50u8;
pub const THOST_FTDC_SAT_SHStockholderID: u8 = 51u8;
pub const THOST_FTDC_SAT_SZStockholderID: u8 = 52u8;
pub const THOST_FTDC_TRFS_Normal: u8 = 48u8;
pub const THOST_FTDC_TRFS_Repealed: u8 = 49u8;
pub const THOST_FTDC_SPTYPE_Broker: u8 = 48u8;
pub const THOST_FTDC_SPTYPE_Bank: u8 = 49u8;
pub const THOST_FTDC_REQRSP_Request: u8 = 48u8;
pub const THOST_FTDC_REQRSP_Response: u8 = 49u8;
pub const THOST_FTDC_FBTUET_SignIn: u8 = 48u8;
pub const THOST_FTDC_FBTUET_FromBankToFuture: u8 = 49u8;
pub const THOST_FTDC_FBTUET_FromFutureToBank: u8 = 50u8;
pub const THOST_FTDC_FBTUET_OpenAccount: u8 = 51u8;
pub const THOST_FTDC_FBTUET_CancelAccount: u8 = 52u8;
pub const THOST_FTDC_FBTUET_ChangeAccount: u8 = 53u8;
pub const THOST_FTDC_FBTUET_RepealFromBankToFuture: u8 = 54u8;
pub const THOST_FTDC_FBTUET_RepealFromFutureToBank: u8 = 55u8;
pub const THOST_FTDC_FBTUET_QueryBankAccount: u8 = 56u8;
pub const THOST_FTDC_FBTUET_QueryFutureAccount: u8 = 57u8;
pub const THOST_FTDC_FBTUET_SignOut: u8 = 65u8;
pub const THOST_FTDC_FBTUET_SyncKey: u8 = 66u8;
pub const THOST_FTDC_FBTUET_ReserveOpenAccount: u8 = 67u8;
pub const THOST_FTDC_FBTUET_CancelReserveOpenAccount: u8 = 68u8;
pub const THOST_FTDC_FBTUET_ReserveOpenAccountConfirm: u8 = 69u8;
pub const THOST_FTDC_FBTUET_Other: u8 = 90u8;
pub const THOST_FTDC_DBOP_Insert: u8 = 48u8;
pub const THOST_FTDC_DBOP_Update: u8 = 49u8;
pub const THOST_FTDC_DBOP_Delete: u8 = 50u8;
pub const THOST_FTDC_SYNF_Yes: u8 = 48u8;
pub const THOST_FTDC_SYNF_No: u8 = 49u8;
pub const THOST_FTDC_SYNT_OneOffSync: u8 = 48u8;
pub const THOST_FTDC_SYNT_TimerSync: u8 = 49u8;
pub const THOST_FTDC_SYNT_TimerFullSync: u8 = 50u8;
pub const THOST_FTDC_FBEDIR_Settlement: u8 = 48u8;
pub const THOST_FTDC_FBEDIR_Sale: u8 = 49u8;
pub const THOST_FTDC_FBERES_Success: u8 = 48u8;
pub const THOST_FTDC_FBERES_InsufficientBalance: u8 = 49u8;
pub const THOST_FTDC_FBERES_UnknownTrading: u8 = 56u8;
pub const THOST_FTDC_FBERES_Fail: u8 = 120u8;
pub const THOST_FTDC_FBEES_Normal: u8 = 48u8;
pub const THOST_FTDC_FBEES_ReExchange: u8 = 49u8;
pub const THOST_FTDC_FBEFG_DataPackage: u8 = 48u8;
pub const THOST_FTDC_FBEFG_File: u8 = 49u8;
pub const THOST_FTDC_FBEAT_NotTrade: u8 = 48u8;
pub const THOST_FTDC_FBEAT_Trade: u8 = 49u8;
pub const THOST_FTDC_FBEUET_SignIn: u8 = 48u8;
pub const THOST_FTDC_FBEUET_Exchange: u8 = 49u8;
pub const THOST_FTDC_FBEUET_ReExchange: u8 = 50u8;
pub const THOST_FTDC_FBEUET_QueryBankAccount: u8 = 51u8;
pub const THOST_FTDC_FBEUET_QueryExchDetial: u8 = 52u8;
pub const THOST_FTDC_FBEUET_QueryExchSummary: u8 = 53u8;
pub const THOST_FTDC_FBEUET_QueryExchRate: u8 = 54u8;
pub const THOST_FTDC_FBEUET_CheckBankAccount: u8 = 55u8;
pub const THOST_FTDC_FBEUET_SignOut: u8 = 56u8;
pub const THOST_FTDC_FBEUET_Other: u8 = 90u8;
pub const THOST_FTDC_FBERF_UnProcessed: u8 = 48u8;
pub const THOST_FTDC_FBERF_WaitSend: u8 = 49u8;
pub const THOST_FTDC_FBERF_SendSuccess: u8 = 50u8;
pub const THOST_FTDC_FBERF_SendFailed: u8 = 51u8;
pub const THOST_FTDC_FBERF_WaitReSend: u8 = 52u8;
pub const THOST_FTDC_NC_NOERROR: u8 = 48u8;
pub const THOST_FTDC_NC_Warn: u8 = 49u8;
pub const THOST_FTDC_NC_Call: u8 = 50u8;
pub const THOST_FTDC_NC_Force: u8 = 51u8;
pub const THOST_FTDC_NC_CHUANCANG: u8 = 52u8;
pub const THOST_FTDC_NC_Exception: u8 = 53u8;
pub const THOST_FTDC_FCT_Manual: u8 = 48u8;
pub const THOST_FTDC_FCT_Single: u8 = 49u8;
pub const THOST_FTDC_FCT_Group: u8 = 50u8;
pub const THOST_FTDC_RNM_System: u8 = 48u8;
pub const THOST_FTDC_RNM_SMS: u8 = 49u8;
pub const THOST_FTDC_RNM_EMail: u8 = 50u8;
pub const THOST_FTDC_RNM_Manual: u8 = 51u8;
pub const THOST_FTDC_RNS_NotGen: u8 = 48u8;
pub const THOST_FTDC_RNS_Generated: u8 = 49u8;
pub const THOST_FTDC_RNS_SendError: u8 = 50u8;
pub const THOST_FTDC_RNS_SendOk: u8 = 51u8;
pub const THOST_FTDC_RNS_Received: u8 = 52u8;
pub const THOST_FTDC_RNS_Confirmed: u8 = 53u8;
pub const THOST_FTDC_RUE_ExportData: u8 = 48u8;
pub const THOST_FTDC_COST_LastPriceAsc: u8 = 48u8;
pub const THOST_FTDC_COST_LastPriceDesc: u8 = 49u8;
pub const THOST_FTDC_COST_AskPriceAsc: u8 = 50u8;
pub const THOST_FTDC_COST_AskPriceDesc: u8 = 51u8;
pub const THOST_FTDC_COST_BidPriceAsc: u8 = 52u8;
pub const THOST_FTDC_COST_BidPriceDesc: u8 = 53u8;
pub const THOST_FTDC_UOAST_NoSend: u8 = 48u8;
pub const THOST_FTDC_UOAST_Sended: u8 = 49u8;
pub const THOST_FTDC_UOAST_Generated: u8 = 50u8;
pub const THOST_FTDC_UOAST_SendFail: u8 = 51u8;
pub const THOST_FTDC_UOAST_Success: u8 = 52u8;
pub const THOST_FTDC_UOAST_Fail: u8 = 53u8;
pub const THOST_FTDC_UOAST_Cancel: u8 = 54u8;
pub const THOST_FTDC_UOACS_NoApply: u8 = 49u8;
pub const THOST_FTDC_UOACS_Submited: u8 = 50u8;
pub const THOST_FTDC_UOACS_Sended: u8 = 51u8;
pub const THOST_FTDC_UOACS_Success: u8 = 52u8;
pub const THOST_FTDC_UOACS_Refuse: u8 = 53u8;
pub const THOST_FTDC_UOACS_Cancel: u8 = 54u8;
pub const THOST_FTDC_QT_Radio: u8 = 49u8;
pub const THOST_FTDC_QT_Option: u8 = 50u8;
pub const THOST_FTDC_QT_Blank: u8 = 51u8;
pub const THOST_FTDC_BT_Request: u8 = 49u8;
pub const THOST_FTDC_BT_Response: u8 = 50u8;
pub const THOST_FTDC_BT_Notice: u8 = 51u8;
pub const THOST_FTDC_CRC_Success: u8 = 48u8;
pub const THOST_FTDC_CRC_Working: u8 = 49u8;
pub const THOST_FTDC_CRC_InfoFail: u8 = 50u8;
pub const THOST_FTDC_CRC_IDCardFail: u8 = 51u8;
pub const THOST_FTDC_CRC_OtherFail: u8 = 52u8;
pub const THOST_FTDC_CfMMCCT_All: u8 = 48u8;
pub const THOST_FTDC_CfMMCCT_Person: u8 = 49u8;
pub const THOST_FTDC_CfMMCCT_Company: u8 = 50u8;
pub const THOST_FTDC_CfMMCCT_Other: u8 = 51u8;
pub const THOST_FTDC_CfMMCCT_SpecialOrgan: u8 = 52u8;
pub const THOST_FTDC_CfMMCCT_Asset: u8 = 53u8;
pub const THOST_FTDC_EIDT_SHFE: u8 = 83u8;
pub const THOST_FTDC_EIDT_CZCE: u8 = 90u8;
pub const THOST_FTDC_EIDT_DCE: u8 = 68u8;
pub const THOST_FTDC_EIDT_CFFEX: u8 = 74u8;
pub const THOST_FTDC_EIDT_INE: u8 = 78u8;
pub const THOST_FTDC_ECIDT_Hedge: u8 = 49u8;
pub const THOST_FTDC_ECIDT_Arbitrage: u8 = 50u8;
pub const THOST_FTDC_ECIDT_Speculation: u8 = 51u8;
pub const THOST_FTDC_UF_NoUpdate: u8 = 48u8;
pub const THOST_FTDC_UF_Success: u8 = 49u8;
pub const THOST_FTDC_UF_Fail: u8 = 50u8;
pub const THOST_FTDC_UF_TCSuccess: u8 = 51u8;
pub const THOST_FTDC_UF_TCFail: u8 = 52u8;
pub const THOST_FTDC_UF_Cancel: u8 = 53u8;
pub const THOST_FTDC_AOID_OpenInvestor: u8 = 49u8;
pub const THOST_FTDC_AOID_ModifyIDCard: u8 = 50u8;
pub const THOST_FTDC_AOID_ModifyNoIDCard: u8 = 51u8;
pub const THOST_FTDC_AOID_ApplyTradingCode: u8 = 52u8;
pub const THOST_FTDC_AOID_CancelTradingCode: u8 = 53u8;
pub const THOST_FTDC_AOID_CancelInvestor: u8 = 54u8;
pub const THOST_FTDC_AOID_FreezeAccount: u8 = 56u8;
pub const THOST_FTDC_AOID_ActiveFreezeAccount: u8 = 57u8;
pub const THOST_FTDC_ASID_NoComplete: u8 = 49u8;
pub const THOST_FTDC_ASID_Submited: u8 = 50u8;
pub const THOST_FTDC_ASID_Checked: u8 = 51u8;
pub const THOST_FTDC_ASID_Refused: u8 = 52u8;
pub const THOST_FTDC_ASID_Deleted: u8 = 53u8;
pub const THOST_FTDC_UOASM_ByAPI: u8 = 49u8;
pub const THOST_FTDC_UOASM_ByFile: u8 = 50u8;
pub const THOST_FTDC_EvM_ADD: u8 = 49u8;
pub const THOST_FTDC_EvM_UPDATE: u8 = 50u8;
pub const THOST_FTDC_EvM_DELETE: u8 = 51u8;
pub const THOST_FTDC_EvM_CHECK: u8 = 52u8;
pub const THOST_FTDC_EvM_COPY: u8 = 53u8;
pub const THOST_FTDC_EvM_CANCEL: u8 = 54u8;
pub const THOST_FTDC_EvM_Reverse: u8 = 55u8;
pub const THOST_FTDC_UOAA_ASR: u8 = 49u8;
pub const THOST_FTDC_UOAA_ASNR: u8 = 50u8;
pub const THOST_FTDC_UOAA_NSAR: u8 = 51u8;
pub const THOST_FTDC_UOAA_NSR: u8 = 52u8;
pub const THOST_FTDC_EvM_InvestorGroupFlow: u8 = 49u8;
pub const THOST_FTDC_EvM_InvestorRate: u8 = 50u8;
pub const THOST_FTDC_EvM_InvestorCommRateModel: u8 = 51u8;
pub const THOST_FTDC_CL_Zero: u8 = 48u8;
pub const THOST_FTDC_CL_One: u8 = 49u8;
pub const THOST_FTDC_CL_Two: u8 = 50u8;
pub const THOST_FTDC_CHS_Init: u8 = 48u8;
pub const THOST_FTDC_CHS_Checking: u8 = 49u8;
pub const THOST_FTDC_CHS_Checked: u8 = 50u8;
pub const THOST_FTDC_CHS_Refuse: u8 = 51u8;
pub const THOST_FTDC_CHS_Cancel: u8 = 52u8;
pub const THOST_FTDC_CHU_Unused: u8 = 48u8;
pub const THOST_FTDC_CHU_Used: u8 = 49u8;
pub const THOST_FTDC_CHU_Fail: u8 = 50u8;
pub const THOST_FTDC_BAO_ByAccProperty: u8 = 48u8;
pub const THOST_FTDC_BAO_ByFBTransfer: u8 = 49u8;
pub const THOST_FTDC_MBTS_ByInstrument: u8 = 48u8;
pub const THOST_FTDC_MBTS_ByDayInsPrc: u8 = 49u8;
pub const THOST_FTDC_MBTS_ByDayIns: u8 = 50u8;
pub const THOST_FTDC_OTP_NONE: u8 = 48u8;
pub const THOST_FTDC_OTP_TOTP: u8 = 49u8;
pub const THOST_FTDC_OTPS_Unused: u8 = 48u8;
pub const THOST_FTDC_OTPS_Used: u8 = 49u8;
pub const THOST_FTDC_OTPS_Disuse: u8 = 50u8;
pub const THOST_FTDC_BUT_Investor: u8 = 49u8;
pub const THOST_FTDC_BUT_BrokerUser: u8 = 50u8;
pub const THOST_FTDC_FUTT_Commodity: u8 = 49u8;
pub const THOST_FTDC_FUTT_Financial: u8 = 50u8;
pub const THOST_FTDC_FET_Restriction: u8 = 48u8;
pub const THOST_FTDC_FET_TodayRestriction: u8 = 49u8;
pub const THOST_FTDC_FET_Transfer: u8 = 50u8;
pub const THOST_FTDC_FET_Credit: u8 = 51u8;
pub const THOST_FTDC_FET_InvestorWithdrawAlm: u8 = 52u8;
pub const THOST_FTDC_FET_BankRestriction: u8 = 53u8;
pub const THOST_FTDC_FET_Accountregister: u8 = 54u8;
pub const THOST_FTDC_FET_ExchangeFundIO: u8 = 55u8;
pub const THOST_FTDC_FET_InvestorFundIO: u8 = 56u8;
pub const THOST_FTDC_AST_FBTransfer: u8 = 48u8;
pub const THOST_FTDC_AST_ManualEntry: u8 = 49u8;
pub const THOST_FTDC_CST_UnifyAccount: u8 = 48u8;
pub const THOST_FTDC_CST_ManualEntry: u8 = 49u8;
pub const THOST_FTDC_UR_All: u8 = 48u8;
pub const THOST_FTDC_UR_Single: u8 = 49u8;
pub const THOST_FTDC_BG_Investor: u8 = 50u8;
pub const THOST_FTDC_BG_Group: u8 = 49u8;
pub const THOST_FTDC_TSSM_Instrument: u8 = 49u8;
pub const THOST_FTDC_TSSM_Product: u8 = 50u8;
pub const THOST_FTDC_TSSM_Exchange: u8 = 51u8;
pub const THOST_FTDC_ESM_Relative: u8 = 49u8;
pub const THOST_FTDC_ESM_Typical: u8 = 50u8;
pub const THOST_FTDC_RIR_All: u8 = 49u8;
pub const THOST_FTDC_RIR_Model: u8 = 50u8;
pub const THOST_FTDC_RIR_Single: u8 = 51u8;
pub const THOST_FTDC_SDS_Initialize: u8 = 48u8;
pub const THOST_FTDC_SDS_Settlementing: u8 = 49u8;
pub const THOST_FTDC_SDS_Settlemented: u8 = 50u8;
pub const THOST_FTDC_TSRC_NORMAL: u8 = 48u8;
pub const THOST_FTDC_TSRC_QUERY: u8 = 49u8;
pub const THOST_FTDC_FSM_Product: u8 = 49u8;
pub const THOST_FTDC_FSM_Exchange: u8 = 50u8;
pub const THOST_FTDC_FSM_All: u8 = 51u8;
pub const THOST_FTDC_BIR_Property: u8 = 49u8;
pub const THOST_FTDC_BIR_All: u8 = 50u8;
pub const THOST_FTDC_PIR_All: u8 = 49u8;
pub const THOST_FTDC_PIR_Property: u8 = 50u8;
pub const THOST_FTDC_PIR_Single: u8 = 51u8;
pub const THOST_FTDC_FIS_NoCreate: u8 = 48u8;
pub const THOST_FTDC_FIS_Created: u8 = 49u8;
pub const THOST_FTDC_FIS_Failed: u8 = 50u8;
pub const THOST_FTDC_FGS_FileTransmit: u8 = 48u8;
pub const THOST_FTDC_FGS_FileGen: u8 = 49u8;
pub const THOST_FTDC_SoM_Add: u8 = 49u8;
pub const THOST_FTDC_SoM_Update: u8 = 50u8;
pub const THOST_FTDC_SoM_Delete: u8 = 51u8;
pub const THOST_FTDC_SoM_Copy: u8 = 52u8;
pub const THOST_FTDC_SoM_AcTive: u8 = 53u8;
pub const THOST_FTDC_SoM_CanCel: u8 = 54u8;
pub const THOST_FTDC_SoM_ReSet: u8 = 55u8;
pub const THOST_FTDC_SoT_UpdatePassword: u8 = 48u8;
pub const THOST_FTDC_SoT_UserDepartment: u8 = 49u8;
pub const THOST_FTDC_SoT_RoleManager: u8 = 50u8;
pub const THOST_FTDC_SoT_RoleFunction: u8 = 51u8;
pub const THOST_FTDC_SoT_BaseParam: u8 = 52u8;
pub const THOST_FTDC_SoT_SetUserID: u8 = 53u8;
pub const THOST_FTDC_SoT_SetUserRole: u8 = 54u8;
pub const THOST_FTDC_SoT_UserIpRestriction: u8 = 55u8;
pub const THOST_FTDC_SoT_DepartmentManager: u8 = 56u8;
pub const THOST_FTDC_SoT_DepartmentCopy: u8 = 57u8;
pub const THOST_FTDC_SoT_Tradingcode: u8 = 65u8;
pub const THOST_FTDC_SoT_InvestorStatus: u8 = 66u8;
pub const THOST_FTDC_SoT_InvestorAuthority: u8 = 67u8;
pub const THOST_FTDC_SoT_PropertySet: u8 = 68u8;
pub const THOST_FTDC_SoT_ReSetInvestorPasswd: u8 = 69u8;
pub const THOST_FTDC_SoT_InvestorPersonalityInfo: u8 = 70u8;
pub const THOST_FTDC_CSRCQ_Current: u8 = 48u8;
pub const THOST_FTDC_CSRCQ_History: u8 = 49u8;
pub const THOST_FTDC_FRS_Normal: u8 = 49u8;
pub const THOST_FTDC_FRS_Freeze: u8 = 48u8;
pub const THOST_FTDC_STST_Standard: u8 = 48u8;
pub const THOST_FTDC_STST_NonStandard: u8 = 49u8;
pub const THOST_FTDC_RPT_Freeze: u8 = 49u8;
pub const THOST_FTDC_RPT_FreezeActive: u8 = 50u8;
pub const THOST_FTDC_RPT_OpenLimit: u8 = 51u8;
pub const THOST_FTDC_RPT_RelieveOpenLimit: u8 = 52u8;
pub const THOST_FTDC_AMLDS_Normal: u8 = 48u8;
pub const THOST_FTDC_AMLDS_Deleted: u8 = 49u8;
pub const THOST_FTDC_AMLCHS_Init: u8 = 48u8;
pub const THOST_FTDC_AMLCHS_Checking: u8 = 49u8;
pub const THOST_FTDC_AMLCHS_Checked: u8 = 50u8;
pub const THOST_FTDC_AMLCHS_RefuseReport: u8 = 51u8;
pub const THOST_FTDC_AMLDT_DrawDay: u8 = 48u8;
pub const THOST_FTDC_AMLDT_TouchDay: u8 = 49u8;
pub const THOST_FTDC_AMLCL_CheckLevel0: u8 = 48u8;
pub const THOST_FTDC_AMLCL_CheckLevel1: u8 = 49u8;
pub const THOST_FTDC_AMLCL_CheckLevel2: u8 = 50u8;
pub const THOST_FTDC_AMLCL_CheckLevel3: u8 = 51u8;
pub const THOST_FTDC_EFT_CSV: u8 = 48u8;
pub const THOST_FTDC_EFT_EXCEL: u8 = 49u8;
pub const THOST_FTDC_EFT_DBF: u8 = 50u8;
pub const THOST_FTDC_SMT_Before: u8 = 49u8;
pub const THOST_FTDC_SMT_Settlement: u8 = 50u8;
pub const THOST_FTDC_SMT_After: u8 = 51u8;
pub const THOST_FTDC_SMT_Settlemented: u8 = 52u8;
pub const THOST_FTDC_SML_Must: u8 = 49u8;
pub const THOST_FTDC_SML_Alarm: u8 = 50u8;
pub const THOST_FTDC_SML_Prompt: u8 = 51u8;
pub const THOST_FTDC_SML_Ignore: u8 = 52u8;
pub const THOST_FTDC_SMG_Exhcange: u8 = 49u8;
pub const THOST_FTDC_SMG_ASP: u8 = 50u8;
pub const THOST_FTDC_SMG_CSRC: u8 = 51u8;
pub const THOST_FTDC_LUT_Repeatable: u8 = 49u8;
pub const THOST_FTDC_LUT_Unrepeatable: u8 = 50u8;
pub const THOST_FTDC_DAR_Settle: u8 = 49u8;
pub const THOST_FTDC_DAR_Exchange: u8 = 50u8;
pub const THOST_FTDC_DAR_CSRC: u8 = 51u8;
pub const THOST_FTDC_MGT_ExchMarginRate: u8 = 48u8;
pub const THOST_FTDC_MGT_InstrMarginRate: u8 = 49u8;
pub const THOST_FTDC_MGT_InstrMarginRateTrade: u8 = 50u8;
pub const THOST_FTDC_ACT_Intraday: u8 = 49u8;
pub const THOST_FTDC_ACT_Long: u8 = 50u8;
pub const THOST_FTDC_MRT_Exchange: u8 = 49u8;
pub const THOST_FTDC_MRT_Investor: u8 = 50u8;
pub const THOST_FTDC_MRT_InvestorTrade: u8 = 51u8;
pub const THOST_FTDC_BUS_UnBak: u8 = 48u8;
pub const THOST_FTDC_BUS_BakUp: u8 = 49u8;
pub const THOST_FTDC_BUS_BakUped: u8 = 50u8;
pub const THOST_FTDC_BUS_BakFail: u8 = 51u8;
pub const THOST_FTDC_SIS_UnInitialize: u8 = 48u8;
pub const THOST_FTDC_SIS_Initialize: u8 = 49u8;
pub const THOST_FTDC_SIS_Initialized: u8 = 50u8;
pub const THOST_FTDC_SRS_NoCreate: u8 = 48u8;
pub const THOST_FTDC_SRS_Create: u8 = 49u8;
pub const THOST_FTDC_SRS_Created: u8 = 50u8;
pub const THOST_FTDC_SRS_CreateFail: u8 = 51u8;
pub const THOST_FTDC_SSS_UnSaveData: u8 = 48u8;
pub const THOST_FTDC_SSS_SaveDatad: u8 = 49u8;
pub const THOST_FTDC_SAS_UnArchived: u8 = 48u8;
pub const THOST_FTDC_SAS_Archiving: u8 = 49u8;
pub const THOST_FTDC_SAS_Archived: u8 = 50u8;
pub const THOST_FTDC_SAS_ArchiveFail: u8 = 51u8;
pub const THOST_FTDC_CTPT_Unkown: u8 = 48u8;
pub const THOST_FTDC_CTPT_MainCenter: u8 = 49u8;
pub const THOST_FTDC_CTPT_BackUp: u8 = 50u8;
pub const THOST_FTDC_CDT_Normal: u8 = 48u8;
pub const THOST_FTDC_CDT_SpecFirst: u8 = 49u8;
pub const THOST_FTDC_MFUR_None: u8 = 48u8;
pub const THOST_FTDC_MFUR_Margin: u8 = 49u8;
pub const THOST_FTDC_MFUR_All: u8 = 50u8;
pub const THOST_FTDC_SPT_CzceHedge: u8 = 49u8;
pub const THOST_FTDC_SPT_IneForeignCurrency: u8 = 50u8;
pub const THOST_FTDC_SPT_DceOpenClose: u8 = 51u8;
pub const THOST_FTDC_FMT_Mortgage: u8 = 49u8;
pub const THOST_FTDC_FMT_Redemption: u8 = 50u8;
pub const THOST_FTDC_ASPI_BaseMargin: u8 = 49u8;
pub const THOST_FTDC_ASPI_LowestInterest: u8 = 50u8;
pub const THOST_FTDC_FMD_In: u8 = 49u8;
pub const THOST_FTDC_FMD_Out: u8 = 50u8;
pub const THOST_FTDC_BT_Profit: u8 = 48u8;
pub const THOST_FTDC_BT_Loss: u8 = 49u8;
pub const THOST_FTDC_BT_Other: u8 = 90u8;
pub const THOST_FTDC_SST_Manual: u8 = 48u8;
pub const THOST_FTDC_SST_Automatic: u8 = 49u8;
pub const THOST_FTDC_CED_Settlement: u8 = 48u8;
pub const THOST_FTDC_CED_Sale: u8 = 49u8;
pub const THOST_FTDC_CSS_Entry: u8 = 49u8;
pub const THOST_FTDC_CSS_Approve: u8 = 50u8;
pub const THOST_FTDC_CSS_Refuse: u8 = 51u8;
pub const THOST_FTDC_CSS_Revoke: u8 = 52u8;
pub const THOST_FTDC_CSS_Send: u8 = 53u8;
pub const THOST_FTDC_CSS_Success: u8 = 54u8;
pub const THOST_FTDC_CSS_Failure: u8 = 55u8;
pub const THOST_FTDC_REQF_NoSend: u8 = 48u8;
pub const THOST_FTDC_REQF_SendSuccess: u8 = 49u8;
pub const THOST_FTDC_REQF_SendFailed: u8 = 50u8;
pub const THOST_FTDC_REQF_WaitReSend: u8 = 51u8;
pub const THOST_FTDC_RESF_Success: u8 = 48u8;
pub const THOST_FTDC_RESF_InsuffiCient: u8 = 49u8;
pub const THOST_FTDC_RESF_UnKnown: u8 = 56u8;
pub const THOST_FTDC_EXS_Before: u8 = 48u8;
pub const THOST_FTDC_EXS_After: u8 = 49u8;
pub const THOST_FTDC_CR_Domestic: u8 = 49u8;
pub const THOST_FTDC_CR_GMT: u8 = 50u8;
pub const THOST_FTDC_CR_Foreign: u8 = 51u8;
pub const THOST_FTDC_HB_No: u8 = 48u8;
pub const THOST_FTDC_HB_Yes: u8 = 49u8;
pub const THOST_FTDC_SM_Normal: u8 = 49u8;
pub const THOST_FTDC_SM_Emerge: u8 = 50u8;
pub const THOST_FTDC_SM_Restore: u8 = 51u8;
pub const THOST_FTDC_TPT_Full: u8 = 49u8;
pub const THOST_FTDC_TPT_Increment: u8 = 50u8;
pub const THOST_FTDC_TPT_BackUp: u8 = 51u8;
pub const THOST_FTDC_LM_Trade: u8 = 48u8;
pub const THOST_FTDC_LM_Transfer: u8 = 49u8;
pub const THOST_FTDC_CPT_Instrument: u8 = 49u8;
pub const THOST_FTDC_CPT_Margin: u8 = 50u8;
pub const THOST_FTDC_HT_Yes: u8 = 49u8;
pub const THOST_FTDC_HT_No: u8 = 48u8;
pub const THOST_FTDC_AMT_Bank: u8 = 49u8;
pub const THOST_FTDC_AMT_Securities: u8 = 50u8;
pub const THOST_FTDC_AMT_Fund: u8 = 51u8;
pub const THOST_FTDC_AMT_Insurance: u8 = 52u8;
pub const THOST_FTDC_AMT_Trust: u8 = 53u8;
pub const THOST_FTDC_AMT_Other: u8 = 57u8;
pub const THOST_FTDC_CFIOT_FundIO: u8 = 48u8;
pub const THOST_FTDC_CFIOT_SwapCurrency: u8 = 49u8;
pub const THOST_FTDC_CAT_Futures: u8 = 49u8;
pub const THOST_FTDC_CAT_AssetmgrFuture: u8 = 50u8;
pub const THOST_FTDC_CAT_AssetmgrTrustee: u8 = 51u8;
pub const THOST_FTDC_CAT_AssetmgrTransfer: u8 = 52u8;
pub const THOST_FTDC_LT_Chinese: u8 = 49u8;
pub const THOST_FTDC_LT_English: u8 = 50u8;
pub const THOST_FTDC_AMCT_Person: u8 = 49u8;
pub const THOST_FTDC_AMCT_Organ: u8 = 50u8;
pub const THOST_FTDC_AMCT_SpecialOrgan: u8 = 52u8;
pub const THOST_FTDC_ASST_Futures: u8 = 51u8;
pub const THOST_FTDC_ASST_SpecialOrgan: u8 = 52u8;
pub const THOST_FTDC_CIT_HasExch: u8 = 48u8;
pub const THOST_FTDC_CIT_HasATP: u8 = 49u8;
pub const THOST_FTDC_CIT_HasDiff: u8 = 50u8;
pub const THOST_FTDC_DT_HandDeliv: u8 = 49u8;
pub const THOST_FTDC_DT_PersonDeliv: u8 = 50u8;
pub const THOST_FTDC_MMSA_NO: u8 = 48u8;
pub const THOST_FTDC_MMSA_YES: u8 = 49u8;
pub const THOST_FTDC_CACT_Person: u8 = 48u8;
pub const THOST_FTDC_CACT_Company: u8 = 49u8;
pub const THOST_FTDC_CACT_Other: u8 = 50u8;
pub const THOST_FTDC_UOAAT_Futures: u8 = 49u8;
pub const THOST_FTDC_UOAAT_SpecialOrgan: u8 = 50u8;
pub const THOST_FTDC_DEN_Buy: u8 = 48u8;
pub const THOST_FTDC_DEN_Sell: u8 = 49u8;
pub const THOST_FTDC_OFEN_Open: u8 = 48u8;
pub const THOST_FTDC_OFEN_Close: u8 = 49u8;
pub const THOST_FTDC_OFEN_ForceClose: u8 = 50u8;
pub const THOST_FTDC_OFEN_CloseToday: u8 = 51u8;
pub const THOST_FTDC_OFEN_CloseYesterday: u8 = 52u8;
pub const THOST_FTDC_OFEN_ForceOff: u8 = 53u8;
pub const THOST_FTDC_OFEN_LocalForceClose: u8 = 54u8;
pub const THOST_FTDC_HFEN_Speculation: u8 = 49u8;
pub const THOST_FTDC_HFEN_Arbitrage: u8 = 50u8;
pub const THOST_FTDC_HFEN_Hedge: u8 = 51u8;
pub const THOST_FTDC_FIOTEN_FundIO: u8 = 49u8;
pub const THOST_FTDC_FIOTEN_Transfer: u8 = 50u8;
pub const THOST_FTDC_FIOTEN_SwapCurrency: u8 = 51u8;
pub const THOST_FTDC_FTEN_Deposite: u8 = 49u8;
pub const THOST_FTDC_FTEN_ItemFund: u8 = 50u8;
pub const THOST_FTDC_FTEN_Company: u8 = 51u8;
pub const THOST_FTDC_FTEN_InnerTransfer: u8 = 52u8;
pub const THOST_FTDC_FDEN_In: u8 = 49u8;
pub const THOST_FTDC_FDEN_Out: u8 = 50u8;
pub const THOST_FTDC_FMDEN_In: u8 = 49u8;
pub const THOST_FTDC_FMDEN_Out: u8 = 50u8;
pub const THOST_FTDC_CP_CallOptions: u8 = 49u8;
pub const THOST_FTDC_CP_PutOptions: u8 = 50u8;
pub const THOST_FTDC_STM_Continental: u8 = 48u8;
pub const THOST_FTDC_STM_American: u8 = 49u8;
pub const THOST_FTDC_STM_Bermuda: u8 = 50u8;
pub const THOST_FTDC_STT_Hedge: u8 = 48u8;
pub const THOST_FTDC_STT_Match: u8 = 49u8;
pub const THOST_FTDC_APPT_NotStrikeNum: u8 = 52u8;
pub const THOST_FTDC_GUDS_Gen: u8 = 48u8;
pub const THOST_FTDC_GUDS_Hand: u8 = 49u8;
pub const THOST_FTDC_OER_NoExec: u8 = 110u8;
pub const THOST_FTDC_OER_Canceled: u8 = 99u8;
pub const THOST_FTDC_OER_OK: u8 = 48u8;
pub const THOST_FTDC_OER_NoPosition: u8 = 49u8;
pub const THOST_FTDC_OER_NoDeposit: u8 = 50u8;
pub const THOST_FTDC_OER_NoParticipant: u8 = 51u8;
pub const THOST_FTDC_OER_NoClient: u8 = 52u8;
pub const THOST_FTDC_OER_NoInstrument: u8 = 54u8;
pub const THOST_FTDC_OER_NoRight: u8 = 55u8;
pub const THOST_FTDC_OER_InvalidVolume: u8 = 56u8;
pub const THOST_FTDC_OER_NoEnoughHistoryTrade: u8 = 57u8;
pub const THOST_FTDC_OER_Unknown: u8 = 97u8;
pub const THOST_FTDC_COMBT_Future: u8 = 48u8;
pub const THOST_FTDC_COMBT_BUL: u8 = 49u8;
pub const THOST_FTDC_COMBT_BER: u8 = 50u8;
pub const THOST_FTDC_COMBT_STD: u8 = 51u8;
pub const THOST_FTDC_COMBT_STG: u8 = 52u8;
pub const THOST_FTDC_COMBT_PRT: u8 = 53u8;
pub const THOST_FTDC_COMBT_CLD: u8 = 54u8;
pub const THOST_FTDC_ORPT_PreSettlementPrice: u8 = 49u8;
pub const THOST_FTDC_ORPT_OpenPrice: u8 = 52u8;
pub const THOST_FTDC_ORPT_MaxPreSettlementPrice: u8 = 53u8;
pub const THOST_FTDC_BLAG_Default: u8 = 49u8;
pub const THOST_FTDC_BLAG_IncludeOptValLost: u8 = 50u8;
pub const THOST_FTDC_ACTP_Exec: u8 = 49u8;
pub const THOST_FTDC_ACTP_Abandon: u8 = 50u8;
pub const THOST_FTDC_FQST_Submitted: u8 = 97u8;
pub const THOST_FTDC_FQST_Accepted: u8 = 98u8;
pub const THOST_FTDC_FQST_Rejected: u8 = 99u8;
pub const THOST_FTDC_VM_Absolute: u8 = 48u8;
pub const THOST_FTDC_VM_Ratio: u8 = 49u8;
pub const THOST_FTDC_EOPF_Reserve: u8 = 48u8;
pub const THOST_FTDC_EOPF_UnReserve: u8 = 49u8;
pub const THOST_FTDC_EOCF_AutoClose: u8 = 48u8;
pub const THOST_FTDC_EOCF_NotToClose: u8 = 49u8;
pub const THOST_FTDC_PTE_Futures: u8 = 49u8;
pub const THOST_FTDC_PTE_Options: u8 = 50u8;
pub const THOST_FTDC_CUFN_CUFN_O: u8 = 79u8;
pub const THOST_FTDC_CUFN_CUFN_T: u8 = 84u8;
pub const THOST_FTDC_CUFN_CUFN_P: u8 = 80u8;
pub const THOST_FTDC_CUFN_CUFN_N: u8 = 78u8;
pub const THOST_FTDC_CUFN_CUFN_L: u8 = 76u8;
pub const THOST_FTDC_CUFN_CUFN_F: u8 = 70u8;
pub const THOST_FTDC_CUFN_CUFN_C: u8 = 67u8;
pub const THOST_FTDC_CUFN_CUFN_M: u8 = 77u8;
pub const THOST_FTDC_DUFN_DUFN_O: u8 = 79u8;
pub const THOST_FTDC_DUFN_DUFN_T: u8 = 84u8;
pub const THOST_FTDC_DUFN_DUFN_P: u8 = 80u8;
pub const THOST_FTDC_DUFN_DUFN_F: u8 = 70u8;
pub const THOST_FTDC_DUFN_DUFN_C: u8 = 67u8;
pub const THOST_FTDC_DUFN_DUFN_D: u8 = 68u8;
pub const THOST_FTDC_DUFN_DUFN_M: u8 = 77u8;
pub const THOST_FTDC_DUFN_DUFN_S: u8 = 83u8;
pub const THOST_FTDC_SUFN_SUFN_O: u8 = 79u8;
pub const THOST_FTDC_SUFN_SUFN_T: u8 = 84u8;
pub const THOST_FTDC_SUFN_SUFN_P: u8 = 80u8;
pub const THOST_FTDC_SUFN_SUFN_F: u8 = 70u8;
pub const THOST_FTDC_CFUFN_SUFN_T: u8 = 84u8;
pub const THOST_FTDC_CFUFN_SUFN_P: u8 = 80u8;
pub const THOST_FTDC_CFUFN_SUFN_F: u8 = 70u8;
pub const THOST_FTDC_CFUFN_SUFN_S: u8 = 83u8;
pub const THOST_FTDC_CMDR_Comb: u8 = 48u8;
pub const THOST_FTDC_CMDR_UnComb: u8 = 49u8;
pub const THOST_FTDC_STOV_RealValue: u8 = 49u8;
pub const THOST_FTDC_STOV_ProfitValue: u8 = 50u8;
pub const THOST_FTDC_STOV_RealRatio: u8 = 51u8;
pub const THOST_FTDC_STOV_ProfitRatio: u8 = 52u8;
pub const THOST_FTDC_ROAST_Processing: u8 = 48u8;
pub const THOST_FTDC_ROAST_Cancelled: u8 = 49u8;
pub const THOST_FTDC_ROAST_Opened: u8 = 50u8;
pub const THOST_FTDC_ROAST_Invalid: u8 = 51u8;
pub const THOST_FTDC_WPSR_Lib: u8 = 49u8;
pub const THOST_FTDC_WPSR_Manual: u8 = 50u8;
pub const THOST_FTDC_OSCF_CloseSelfOptionPosition: u8 = 49u8;
pub const THOST_FTDC_OSCF_ReserveOptionPosition: u8 = 50u8;
pub const THOST_FTDC_OSCF_SellCloseSelfFuturePosition: u8 = 51u8;
pub const THOST_FTDC_BZTP_Future: u8 = 49u8;
pub const THOST_FTDC_BZTP_Stock: u8 = 50u8;
pub const THOST_TE_RESUME_TYPE_THOST_TERT_RESTART: THOST_TE_RESUME_TYPE = 0;
pub const THOST_TE_RESUME_TYPE_THOST_TERT_RESUME: THOST_TE_RESUME_TYPE = 1;
pub const THOST_TE_RESUME_TYPE_THOST_TERT_QUICK: THOST_TE_RESUME_TYPE = 2;
pub type THOST_TE_RESUME_TYPE = u32;
pub type TThostFtdcTraderIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcInvestorIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcBrokerIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcBrokerAbbrType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcBrokerNameType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcExchangeInstIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcOrderRefType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcParticipantIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcUserIDType = [::std::os::raw::c_uchar; 16usize];
pub type TThostFtdcPasswordType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcClientIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcInstrumentIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcInstrumentCodeType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcMarketIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcProductNameType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcExchangeIDType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcExchangeNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcExchangeAbbrType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcExchangeFlagType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcMacAddressType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcSystemIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcExchangePropertyType = ::std::os::raw::c_uchar;
pub type TThostFtdcDateType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcTimeType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcLongTimeType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcInstrumentNameType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcSettlementGroupIDType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcOrderSysIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcTradeIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcCommandTypeType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcIPAddressType = [::std::os::raw::c_uchar; 16usize];
pub type TThostFtdcIPPortType = ::std::os::raw::c_int;
pub type TThostFtdcProductInfoType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcProtocolInfoType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcBusinessUnitType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcDepositSeqNoType = [::std::os::raw::c_uchar; 15usize];
pub type TThostFtdcIdentifiedCardNoType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcIdCardTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderLocalIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcUserNameType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcPartyNameType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcErrorMsgType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcFieldNameType = [::std::os::raw::c_uchar; 2049usize];
pub type TThostFtdcFieldContentType = [::std::os::raw::c_uchar; 2049usize];
pub type TThostFtdcSystemNameType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcContentType = [::std::os::raw::c_uchar; 501usize];
pub type TThostFtdcInvestorRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcDepartmentRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcDataSyncStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcBrokerDataSyncStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcExchangeConnectStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcTraderConnectStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcFunctionCodeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBrokerFunctionCodeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderActionStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderSubmitStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcPositionDateType = ::std::os::raw::c_uchar;
pub type TThostFtdcPositionDateTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcTradingRoleType = ::std::os::raw::c_uchar;
pub type TThostFtdcProductClassType = ::std::os::raw::c_uchar;
pub type TThostFtdcInstLifePhaseType = ::std::os::raw::c_uchar;
pub type TThostFtdcDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcPositionTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcPosiDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcSysSettlementStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcRatioAttrType = ::std::os::raw::c_uchar;
pub type TThostFtdcHedgeFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcBillHedgeFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcClientIDTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderPriceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOffsetFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcForceCloseReasonType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcTimeConditionType = ::std::os::raw::c_uchar;
pub type TThostFtdcVolumeConditionType = ::std::os::raw::c_uchar;
pub type TThostFtdcContingentConditionType = ::std::os::raw::c_uchar;
pub type TThostFtdcActionFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcTradingRightType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderSourceType = ::std::os::raw::c_uchar;
pub type TThostFtdcTradeTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcPriceSourceType = ::std::os::raw::c_uchar;
pub type TThostFtdcInstrumentStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcInstStatusEnterReasonType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrderActionRefType = ::std::os::raw::c_int;
pub type TThostFtdcInstallCountType = ::std::os::raw::c_int;
pub type TThostFtdcInstallIDType = ::std::os::raw::c_int;
pub type TThostFtdcErrorIDType = ::std::os::raw::c_int;
pub type TThostFtdcSettlementIDType = ::std::os::raw::c_int;
pub type TThostFtdcVolumeType = ::std::os::raw::c_int;
pub type TThostFtdcFrontIDType = ::std::os::raw::c_int;
pub type TThostFtdcSessionIDType = ::std::os::raw::c_int;
pub type TThostFtdcSequenceNoType = ::std::os::raw::c_int;
pub type TThostFtdcCommandNoType = ::std::os::raw::c_int;
pub type TThostFtdcMillisecType = ::std::os::raw::c_int;
pub type TThostFtdcVolumeMultipleType = ::std::os::raw::c_int;
pub type TThostFtdcTradingSegmentSNType = ::std::os::raw::c_int;
pub type TThostFtdcRequestIDType = ::std::os::raw::c_int;
pub type TThostFtdcYearType = ::std::os::raw::c_int;
pub type TThostFtdcMonthType = ::std::os::raw::c_int;
pub type TThostFtdcBoolType = ::std::os::raw::c_int;
pub type TThostFtdcPriceType = f64;
pub type TThostFtdcCombOffsetFlagType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcCombHedgeFlagType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcRatioType = f64;
pub type TThostFtdcMoneyType = f64;
pub type TThostFtdcLargeVolumeType = f64;
pub type TThostFtdcSequenceSeriesType = ::std::os::raw::c_short;
pub type TThostFtdcCommPhaseNoType = ::std::os::raw::c_short;
pub type TThostFtdcSequenceLabelType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcUnderlyingMultipleType = f64;
pub type TThostFtdcPriorityType = ::std::os::raw::c_int;
pub type TThostFtdcContractCodeType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcCityType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcIsStockType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcChannelType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcAddressType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcZipCodeType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcTelephoneType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcFaxType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcMobileType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcEMailType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcMemoType = [::std::os::raw::c_uchar; 161usize];
pub type TThostFtdcCompanyCodeType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcWebsiteType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcTaxNoType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcBatchStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcPropertyIDType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcPropertyNameType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcLicenseNoType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcAgentIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcAgentNameType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcAgentGroupIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcAgentGroupNameType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcReturnStyleType = ::std::os::raw::c_uchar;
pub type TThostFtdcReturnPatternType = ::std::os::raw::c_uchar;
pub type TThostFtdcReturnLevelType = ::std::os::raw::c_uchar;
pub type TThostFtdcReturnStandardType = ::std::os::raw::c_uchar;
pub type TThostFtdcMortgageTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcInvestorSettlementParamIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcExchangeSettlementParamIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcSystemParamIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcTradeParamIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcSettlementParamValueType = [::std::os::raw::c_uchar; 256usize];
pub type TThostFtdcCounterIDType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcInvestorGroupNameType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcBrandCodeType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcWarehouseType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcProductDateType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcGradeType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcClassifyType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcPositionType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcYieldlyType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcWeightType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcSubEntryFundNoType = ::std::os::raw::c_int;
pub type TThostFtdcFileIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcFileNameType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcFileTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFileFormatType = ::std::os::raw::c_uchar;
pub type TThostFtdcFileUploadStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcTransferDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcUploadModeType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcAccountIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcBankFlagType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcBankAccountType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcOpenNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcOpenBankType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcBankNameType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcPublishPathType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcOperatorIDType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcMonthCountType = ::std::os::raw::c_int;
pub type TThostFtdcAdvanceMonthArrayType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcDateExprType = [::std::os::raw::c_uchar; 1025usize];
pub type TThostFtdcInstrumentIDExprType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcInstrumentNameExprType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcSpecialCreateRuleType = ::std::os::raw::c_uchar;
pub type TThostFtdcBasisPriceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcProductLifePhaseType = ::std::os::raw::c_uchar;
pub type TThostFtdcDeliveryModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcLogLevelType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcProcessNameType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcOperationMemoType = [::std::os::raw::c_uchar; 1025usize];
pub type TThostFtdcFundIOTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcBillNoType = [::std::os::raw::c_uchar; 15usize];
pub type TThostFtdcBillNameType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcPublishStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcEnumValueIDType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcEnumValueTypeType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcEnumValueLabelType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcEnumValueResultType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcSystemStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcSettlementStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcRangeIntTypeType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcRangeIntFromType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcRangeIntToType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcFunctionIDType = [::std::os::raw::c_uchar; 25usize];
pub type TThostFtdcFunctionValueCodeType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcFunctionNameType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcRoleIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcRoleNameType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcDescriptionType = [::std::os::raw::c_uchar; 401usize];
pub type TThostFtdcCombineIDType = [::std::os::raw::c_uchar; 25usize];
pub type TThostFtdcCombineTypeType = [::std::os::raw::c_uchar; 25usize];
pub type TThostFtdcInvestorTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBrokerTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcRiskLevelType = ::std::os::raw::c_uchar;
pub type TThostFtdcFeeAcceptStyleType = ::std::os::raw::c_uchar;
pub type TThostFtdcPasswordTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcAlgorithmType = ::std::os::raw::c_uchar;
pub type TThostFtdcIncludeCloseProfitType = ::std::os::raw::c_uchar;
pub type TThostFtdcAllWithoutTradeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCommentType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcVersionType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcTradeCodeType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcTradeDateType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcTradeTimeType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcTradeSerialType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcTradeSerialNoType = ::std::os::raw::c_int;
pub type TThostFtdcFutureIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcBankIDType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcBankBrchIDType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcBankBranchIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcOperNoType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcDeviceIDType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcRecordNumType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcFutureAccountType = [::std::os::raw::c_uchar; 22usize];
pub type TThostFtdcFuturePwdFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcTransferTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFutureAccPwdType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcCurrencyCodeType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcRetCodeType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcRetInfoType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcTradeAmtType = [::std::os::raw::c_uchar; 20usize];
pub type TThostFtdcUseAmtType = [::std::os::raw::c_uchar; 20usize];
pub type TThostFtdcFetchAmtType = [::std::os::raw::c_uchar; 20usize];
pub type TThostFtdcTransferValidFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcCertCodeType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcReasonType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundProjectIDType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcSexType = ::std::os::raw::c_uchar;
pub type TThostFtdcProfessionType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcNationalType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcProvinceType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcRegionType = [::std::os::raw::c_uchar; 16usize];
pub type TThostFtdcCountryType = [::std::os::raw::c_uchar; 16usize];
pub type TThostFtdcLicenseNOType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcCompanyTypeType = [::std::os::raw::c_uchar; 16usize];
pub type TThostFtdcBusinessScopeType = [::std::os::raw::c_uchar; 1001usize];
pub type TThostFtdcCapitalCurrencyType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcUserTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBranchIDType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcRateTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcNoteTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcSettlementStyleType = ::std::os::raw::c_uchar;
pub type TThostFtdcBrokerDNSType = [::std::os::raw::c_uchar; 256usize];
pub type TThostFtdcSentenceType = [::std::os::raw::c_uchar; 501usize];
pub type TThostFtdcSettlementBillTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcUserRightTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcMarginPriceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBillGenStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcAlgoTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcHandlePositionAlgoIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcFindMarginRateAlgoIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcHandleTradingAccountAlgoIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcPersonTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcQueryInvestorRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcInvestorRiskStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcLegIDType = ::std::os::raw::c_int;
pub type TThostFtdcLegMultipleType = ::std::os::raw::c_int;
pub type TThostFtdcImplyLevelType = ::std::os::raw::c_int;
pub type TThostFtdcClearAccountType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcOrganNOType = [::std::os::raw::c_uchar; 6usize];
pub type TThostFtdcClearbarchIDType = [::std::os::raw::c_uchar; 6usize];
pub type TThostFtdcUserEventTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcUserEventInfoType = [::std::os::raw::c_uchar; 1025usize];
pub type TThostFtdcCloseStyleType = ::std::os::raw::c_uchar;
pub type TThostFtdcStatModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcParkedOrderStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcParkedOrderIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcParkedOrderActionIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcVirDealStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrgSystemIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcVirTradeStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcVirBankAccTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcVirementStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcVirementAvailAbilityType = ::std::os::raw::c_uchar;
pub type TThostFtdcVirementTradeCodeType = ::std::os::raw::c_uchar;
pub type TThostFtdcPhotoTypeNameType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcPhotoTypeIDType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcPhotoNameType = [::std::os::raw::c_uchar; 161usize];
pub type TThostFtdcTopicIDType = ::std::os::raw::c_int;
pub type TThostFtdcReportTypeIDType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcCharacterIDType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcAMLParamIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcAMLInvestorTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcAMLIdCardTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcAMLTradeDirectType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcAMLTradeModelType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcAMLOpParamValueType = f64;
pub type TThostFtdcAMLCustomerCardTypeType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcAMLInstitutionNameType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcAMLDistrictIDType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcAMLRelationShipType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcAMLInstitutionTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcAMLInstitutionIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcAMLAccountTypeType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcAMLTradingTypeType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcAMLTransactClassType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcAMLCapitalIOType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcAMLSiteType = [::std::os::raw::c_uchar; 10usize];
pub type TThostFtdcAMLCapitalPurposeType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcAMLReportTypeType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcAMLSerialNoType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcAMLStatusType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcAMLGenStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcAMLSeqCodeType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcAMLFileNameType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcAMLMoneyType = f64;
pub type TThostFtdcAMLFileAmountType = ::std::os::raw::c_int;
pub type TThostFtdcCFMMCKeyType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcCFMMCTokenType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcCFMMCKeyKindType = ::std::os::raw::c_uchar;
pub type TThostFtdcAMLReportNameType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcIndividualNameType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcCurrencyIDType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcCustNumberType = [::std::os::raw::c_uchar; 36usize];
pub type TThostFtdcOrganCodeType = [::std::os::raw::c_uchar; 36usize];
pub type TThostFtdcOrganNameType = [::std::os::raw::c_uchar; 71usize];
pub type TThostFtdcSuperOrganCodeType = [::std::os::raw::c_uchar; 12usize];
pub type TThostFtdcSubBranchIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcSubBranchNameType = [::std::os::raw::c_uchar; 71usize];
pub type TThostFtdcBranchNetCodeType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcBranchNetNameType = [::std::os::raw::c_uchar; 71usize];
pub type TThostFtdcOrganFlagType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcBankCodingForFutureType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcBankReturnCodeType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcPlateReturnCodeType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcBankSubBranchIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcFutureBranchIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcReturnCodeType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcOperatorCodeType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcClearDepIDType = [::std::os::raw::c_uchar; 6usize];
pub type TThostFtdcClearBrchIDType = [::std::os::raw::c_uchar; 6usize];
pub type TThostFtdcClearNameType = [::std::os::raw::c_uchar; 71usize];
pub type TThostFtdcBankAccountNameType = [::std::os::raw::c_uchar; 71usize];
pub type TThostFtdcInvDepIDType = [::std::os::raw::c_uchar; 6usize];
pub type TThostFtdcInvBrchIDType = [::std::os::raw::c_uchar; 6usize];
pub type TThostFtdcMessageFormatVersionType = [::std::os::raw::c_uchar; 36usize];
pub type TThostFtdcDigestType = [::std::os::raw::c_uchar; 36usize];
pub type TThostFtdcAuthenticDataType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcPasswordKeyType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcFutureAccountNameType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcMobilePhoneType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcFutureMainKeyType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcFutureWorkKeyType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcFutureTransKeyType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcBankMainKeyType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcBankWorkKeyType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcBankTransKeyType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcBankServerDescriptionType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcAddInfoType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcDescrInfoForReturnCodeType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcCountryCodeType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcSerialType = ::std::os::raw::c_int;
pub type TThostFtdcPlateSerialType = ::std::os::raw::c_int;
pub type TThostFtdcBankSerialType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcCorrectSerialType = ::std::os::raw::c_int;
pub type TThostFtdcFutureSerialType = ::std::os::raw::c_int;
pub type TThostFtdcApplicationIDType = ::std::os::raw::c_int;
pub type TThostFtdcBankProxyIDType = ::std::os::raw::c_int;
pub type TThostFtdcFBTCoreIDType = ::std::os::raw::c_int;
pub type TThostFtdcServerPortType = ::std::os::raw::c_int;
pub type TThostFtdcRepealedTimesType = ::std::os::raw::c_int;
pub type TThostFtdcRepealTimeIntervalType = ::std::os::raw::c_int;
pub type TThostFtdcTotalTimesType = ::std::os::raw::c_int;
pub type TThostFtdcFBTRequestIDType = ::std::os::raw::c_int;
pub type TThostFtdcTIDType = ::std::os::raw::c_int;
pub type TThostFtdcTradeAmountType = f64;
pub type TThostFtdcCustFeeType = f64;
pub type TThostFtdcFutureFeeType = f64;
pub type TThostFtdcSingleMaxAmtType = f64;
pub type TThostFtdcSingleMinAmtType = f64;
pub type TThostFtdcTotalAmtType = f64;
pub type TThostFtdcCertificationTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFileBusinessCodeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCashExchangeCodeType = ::std::os::raw::c_uchar;
pub type TThostFtdcYesNoIndicatorType = ::std::os::raw::c_uchar;
pub type TThostFtdcBanlanceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcGenderType = ::std::os::raw::c_uchar;
pub type TThostFtdcFeePayFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcPassWordKeyTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBTPassWordTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBTEncryModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBankRepealFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcBrokerRepealFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcInstitutionTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcLastFragmentType = ::std::os::raw::c_uchar;
pub type TThostFtdcBankAccStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcMoneyAccountStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcManageStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcSystemTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcTxnEndFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcProcessStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcCustTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBTTransferDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcOpenOrDestroyType = ::std::os::raw::c_uchar;
pub type TThostFtdcAvailabilityFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrganTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrganLevelType = ::std::os::raw::c_uchar;
pub type TThostFtdcProtocalIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcConnectModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcSyncModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBankAccTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFutureAccTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOrganStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcCCBFeeModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCommApiTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcServiceIDType = ::std::os::raw::c_int;
pub type TThostFtdcServiceLineNoType = ::std::os::raw::c_int;
pub type TThostFtdcServiceNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcLinkStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcCommApiPointerType = ::std::os::raw::c_int;
pub type TThostFtdcPwdFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcSecuAccTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcTransferStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcSponsorTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcReqRspTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBTUserEventTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBankIDByBankType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcBankOperNoType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcBankCustNoType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcDBOPSeqNoType = ::std::os::raw::c_int;
pub type TThostFtdcTableNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcPKNameType = [::std::os::raw::c_uchar; 201usize];
pub type TThostFtdcPKValueType = [::std::os::raw::c_uchar; 501usize];
pub type TThostFtdcDBOperationType = ::std::os::raw::c_uchar;
pub type TThostFtdcSyncFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcTargetIDType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcSyncTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBETimeType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcFBEBankNoType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcFBECertNoType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcExDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBEBankAccountType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcFBEBankAccountNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcFBEAmtType = f64;
pub type TThostFtdcFBEBusinessTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcFBEPostScriptType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcFBERemarkType = [::std::os::raw::c_uchar; 71usize];
pub type TThostFtdcExRateType = f64;
pub type TThostFtdcFBEResultFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBERtnMsgType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcFBEExtendMsgType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcFBEBusinessSerialType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcFBESystemSerialType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcFBETotalExCntType = ::std::os::raw::c_int;
pub type TThostFtdcFBEExchStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBEFileFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBEAlreadyTradeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBEOpenBankType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcFBEUserEventTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBEFileNameType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcFBEBatchSerialType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcFBEReqFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcNotifyClassType = ::std::os::raw::c_uchar;
pub type TThostFtdcRiskNofityInfoType = [::std::os::raw::c_uchar; 257usize];
pub type TThostFtdcForceCloseSceneIdType = [::std::os::raw::c_uchar; 24usize];
pub type TThostFtdcForceCloseTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcInstrumentIDsType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcRiskNotifyMethodType = ::std::os::raw::c_uchar;
pub type TThostFtdcRiskNotifyStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcRiskUserEventType = ::std::os::raw::c_uchar;
pub type TThostFtdcParamIDType = ::std::os::raw::c_int;
pub type TThostFtdcParamNameType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcParamValueType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcConditionalOrderSortTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcSendTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcClientIDStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcIndustryIDType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcQuestionIDType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcQuestionContentType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcOptionIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcOptionContentType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcQuestionTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcProcessIDType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcSeqNoType = ::std::os::raw::c_int;
pub type TThostFtdcUOAProcessStatusType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcProcessTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcBusinessTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCfmmcReturnCodeType = ::std::os::raw::c_uchar;
pub type TThostFtdcExReturnCodeType = ::std::os::raw::c_int;
pub type TThostFtdcClientTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcExchangeIDTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcExClientIDTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcClientClassifyType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcUOAOrganTypeType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcUOACountryCodeType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcAreaCodeType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcFuturesIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcCffmcDateType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcCffmcTimeType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcNocIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcUpdateFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcApplyOperateIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcApplyStatusIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcSendMethodType = ::std::os::raw::c_uchar;
pub type TThostFtdcEventTypeType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcEventModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcUOAAutoSendType = ::std::os::raw::c_uchar;
pub type TThostFtdcQueryDepthType = ::std::os::raw::c_int;
pub type TThostFtdcDataCenterIDType = ::std::os::raw::c_int;
pub type TThostFtdcFlowIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcCheckLevelType = ::std::os::raw::c_uchar;
pub type TThostFtdcCheckNoType = ::std::os::raw::c_int;
pub type TThostFtdcCheckStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcUsedStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcRateTemplateNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcPropertyStringType = [::std::os::raw::c_uchar; 2049usize];
pub type TThostFtdcBankAcountOriginType = ::std::os::raw::c_uchar;
pub type TThostFtdcMonthBillTradeSumType = ::std::os::raw::c_uchar;
pub type TThostFtdcFBTTradeCodeEnumType = ::std::os::raw::c_uchar;
pub type TThostFtdcRateTemplateIDType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcRiskRateType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcTimestampType = ::std::os::raw::c_int;
pub type TThostFtdcInvestorIDRuleNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcInvestorIDRuleExprType = [::std::os::raw::c_uchar; 513usize];
pub type TThostFtdcLastDriftType = ::std::os::raw::c_int;
pub type TThostFtdcLastSuccessType = ::std::os::raw::c_int;
pub type TThostFtdcAuthKeyType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcSerialNumberType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcOTPTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOTPVendorsIDType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcOTPVendorsNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcOTPStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcBrokerUserTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFutureTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundEventTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcAccountSourceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCodeSourceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcUserRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcTimeSpanType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcImportSequenceIDType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcByGroupType = ::std::os::raw::c_uchar;
pub type TThostFtdcTradeSumStatModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcComTypeType = ::std::os::raw::c_int;
pub type TThostFtdcUserProductIDType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcUserProductNameType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcUserProductMemoType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcCSRCCancelFlagType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcCSRCDateType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcCSRCInvestorNameType = [::std::os::raw::c_uchar; 201usize];
pub type TThostFtdcCSRCOpenInvestorNameType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcCSRCInvestorIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcCSRCIdentifiedCardNoType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcCSRCClientIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcCSRCBankFlagType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcCSRCBankAccountType = [::std::os::raw::c_uchar; 23usize];
pub type TThostFtdcCSRCOpenNameType = [::std::os::raw::c_uchar; 401usize];
pub type TThostFtdcCSRCMemoType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcCSRCTimeType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcCSRCTradeIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcCSRCExchangeInstIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcCSRCMortgageNameType = [::std::os::raw::c_uchar; 7usize];
pub type TThostFtdcCSRCReasonType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcIsSettlementType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcCSRCMoneyType = f64;
pub type TThostFtdcCSRCPriceType = f64;
pub type TThostFtdcCSRCOptionsTypeType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcCSRCStrikePriceType = f64;
pub type TThostFtdcCSRCTargetProductIDType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcCSRCTargetInstrIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcCommModelNameType = [::std::os::raw::c_uchar; 161usize];
pub type TThostFtdcCommModelMemoType = [::std::os::raw::c_uchar; 1025usize];
pub type TThostFtdcExprSetModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcRateInvestorRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcAgentBrokerIDType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcDRIdentityIDType = ::std::os::raw::c_int;
pub type TThostFtdcDRIdentityNameType = [::std::os::raw::c_uchar; 65usize];
pub type TThostFtdcDBLinkIDType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcSyncDataStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcTradeSourceType = ::std::os::raw::c_uchar;
pub type TThostFtdcFlexStatModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcByInvestorRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcSRiskRateType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcSequenceNo12Type = ::std::os::raw::c_int;
pub type TThostFtdcPropertyInvestorRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFileStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcFileGenStyleType = ::std::os::raw::c_uchar;
pub type TThostFtdcSysOperModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcSysOperTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCSRCDataQueyTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFreezeStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcStandardStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcCSRCFreezeStatusType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcRightParamTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcRightTemplateIDType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcRightTemplateNameType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcDataStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcAMLCheckStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcAmlDateTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcAmlCheckLevelType = ::std::os::raw::c_uchar;
pub type TThostFtdcAmlCheckFlowType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcDataTypeType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcExportFileTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcSettleManagerTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcSettleManagerIDType = [::std::os::raw::c_uchar; 33usize];
pub type TThostFtdcSettleManagerNameType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcSettleManagerLevelType = ::std::os::raw::c_uchar;
pub type TThostFtdcSettleManagerGroupType = ::std::os::raw::c_uchar;
pub type TThostFtdcCheckResultMemoType = [::std::os::raw::c_uchar; 1025usize];
pub type TThostFtdcFunctionUrlType = [::std::os::raw::c_uchar; 1025usize];
pub type TThostFtdcAuthInfoType = [::std::os::raw::c_uchar; 129usize];
pub type TThostFtdcAuthCodeType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcLimitUseTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcDataResourceType = ::std::os::raw::c_uchar;
pub type TThostFtdcMarginTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcActiveTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcMarginRateTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBackUpStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcInitSettlementType = ::std::os::raw::c_uchar;
pub type TThostFtdcReportStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcSaveStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcSettArchiveStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcCTPTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcToolIDType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcToolNameType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcCloseDealTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcMortgageFundUseRangeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCurrencyUnitType = f64;
pub type TThostFtdcExchangeRateType = f64;
pub type TThostFtdcSpecProductTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundMortgageTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcAccountSettlementParamIDType = ::std::os::raw::c_uchar;
pub type TThostFtdcCurrencyNameType = [::std::os::raw::c_uchar; 31usize];
pub type TThostFtdcCurrencySignType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcFundMortDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcBusinessClassType = ::std::os::raw::c_uchar;
pub type TThostFtdcSwapSourceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCurrExDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcCurrencySwapStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcCurrExchCertNoType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcBatchSerialNoType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcReqFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcResFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcPageControlType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcRecordCountType = ::std::os::raw::c_int;
pub type TThostFtdcCurrencySwapMemoType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcExStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcClientRegionType = ::std::os::raw::c_uchar;
pub type TThostFtdcWorkPlaceType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcBusinessPeriodType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcWebSiteType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcUOAIdCardTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcClientModeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcInvestorFullNameType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcUOABrokerIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcUOAZipCodeType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcUOAEMailType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcOldCityType = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcCorporateIdentifiedCardNoType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcHasBoardType = ::std::os::raw::c_uchar;
pub type TThostFtdcStartModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcTemplateTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcLoginModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcPromptTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcLedgerManageIDType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcInvestVarietyType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcBankAccountTypeType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcLedgerManageBankType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcCffexDepartmentNameType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcCffexDepartmentCodeType = [::std::os::raw::c_uchar; 9usize];
pub type TThostFtdcHasTrusteeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCSRCMemo1Type = [::std::os::raw::c_uchar; 41usize];
pub type TThostFtdcAssetmgrCFullNameType = [::std::os::raw::c_uchar; 101usize];
pub type TThostFtdcAssetmgrApprovalNOType = [::std::os::raw::c_uchar; 51usize];
pub type TThostFtdcAssetmgrMgrNameType = [::std::os::raw::c_uchar; 401usize];
pub type TThostFtdcAmTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCSRCAmTypeType = [::std::os::raw::c_uchar; 5usize];
pub type TThostFtdcCSRCFundIOTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCusAccountTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCSRCNationalType = [::std::os::raw::c_uchar; 4usize];
pub type TThostFtdcCSRCSecAgentIDType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcLanguageTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcAmAccountType = [::std::os::raw::c_uchar; 23usize];
pub type TThostFtdcAssetmgrClientTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcAssetmgrTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcUOMType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcSHFEInstLifePhaseType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcSHFEProductClassType = [::std::os::raw::c_uchar; 11usize];
pub type TThostFtdcPriceDecimalType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcInTheMoneyFlagType = [::std::os::raw::c_uchar; 2usize];
pub type TThostFtdcCheckInstrTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcDeliveryTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBigMoneyType = f64;
pub type TThostFtdcMaxMarginSideAlgorithmType = ::std::os::raw::c_uchar;
pub type TThostFtdcDAClientTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCombinInstrIDType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcCombinSettlePriceType = [::std::os::raw::c_uchar; 61usize];
pub type TThostFtdcDCEPriorityType = ::std::os::raw::c_int;
pub type TThostFtdcTradeGroupIDType = ::std::os::raw::c_int;
pub type TThostFtdcIsCheckPrepaType = ::std::os::raw::c_int;
pub type TThostFtdcUOAAssetmgrTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcDirectionEnType = ::std::os::raw::c_uchar;
pub type TThostFtdcOffsetFlagEnType = ::std::os::raw::c_uchar;
pub type TThostFtdcHedgeFlagEnType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundIOTypeEnType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundTypeEnType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundDirectionEnType = ::std::os::raw::c_uchar;
pub type TThostFtdcFundMortDirectionEnType = ::std::os::raw::c_uchar;
pub type TThostFtdcSwapBusinessTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcOptionsTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcStrikeModeType = ::std::os::raw::c_uchar;
pub type TThostFtdcStrikeTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcApplyTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcGiveUpDataSourceType = ::std::os::raw::c_uchar;
pub type TThostFtdcExecOrderSysIDType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcExecResultType = ::std::os::raw::c_uchar;
pub type TThostFtdcStrikeSequenceType = ::std::os::raw::c_int;
pub type TThostFtdcStrikeTimeType = [::std::os::raw::c_uchar; 13usize];
pub type TThostFtdcCombinationTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcOptionRoyaltyPriceTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcBalanceAlgorithmType = ::std::os::raw::c_uchar;
pub type TThostFtdcActionTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcForQuoteStatusType = ::std::os::raw::c_uchar;
pub type TThostFtdcValueMethodType = ::std::os::raw::c_uchar;
pub type TThostFtdcExecOrderPositionFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcExecOrderCloseFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcProductTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcCZCEUploadFileNameType = ::std::os::raw::c_uchar;
pub type TThostFtdcDCEUploadFileNameType = ::std::os::raw::c_uchar;
pub type TThostFtdcSHFEUploadFileNameType = ::std::os::raw::c_uchar;
pub type TThostFtdcCFFEXUploadFileNameType = ::std::os::raw::c_uchar;
pub type TThostFtdcCombDirectionType = ::std::os::raw::c_uchar;
pub type TThostFtdcStrikeOffsetTypeType = ::std::os::raw::c_uchar;
pub type TThostFtdcReserveOpenAccStasType = ::std::os::raw::c_uchar;
pub type TThostFtdcLoginRemarkType = [::std::os::raw::c_uchar; 36usize];
pub type TThostFtdcInvestUnitIDType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcBulletinIDType = ::std::os::raw::c_int;
pub type TThostFtdcNewsTypeType = [::std::os::raw::c_uchar; 3usize];
pub type TThostFtdcNewsUrgencyType = ::std::os::raw::c_uchar;
pub type TThostFtdcAbstractType = [::std::os::raw::c_uchar; 81usize];
pub type TThostFtdcComeFromType = [::std::os::raw::c_uchar; 21usize];
pub type TThostFtdcURLLinkType = [::std::os::raw::c_uchar; 201usize];
pub type TThostFtdcLongIndividualNameType = [::std::os::raw::c_uchar; 161usize];
pub type TThostFtdcLongFBEBankAccountNameType = [::std::os::raw::c_uchar; 161usize];
pub type TThostFtdcDateTimeType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcWeakPasswordSourceType = ::std::os::raw::c_uchar;
pub type TThostFtdcRandomStringType = [::std::os::raw::c_uchar; 17usize];
pub type TThostFtdcOptSelfCloseFlagType = ::std::os::raw::c_uchar;
pub type TThostFtdcBizTypeType = ::std::os::raw::c_uchar;
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcDisseminationField {
    pub SequenceSeries: TThostFtdcSequenceSeriesType,
    pub SequenceNo: TThostFtdcSequenceNoType,
}
#[test]
fn bindgen_test_layout_CThostFtdcDisseminationField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcDisseminationField>(),
        8usize,
        concat!("Size of: ", stringify!(CThostFtdcDisseminationField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcDisseminationField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcDisseminationField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDisseminationField>())).SequenceSeries as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDisseminationField),
            "::",
            stringify!(SequenceSeries)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDisseminationField>())).SequenceNo as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDisseminationField),
            "::",
            stringify!(SequenceNo)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqUserLoginField {
    pub TradingDay: TThostFtdcDateType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Password: TThostFtdcPasswordType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub InterfaceProductInfo: TThostFtdcProductInfoType,
    pub ProtocolInfo: TThostFtdcProtocolInfoType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub OneTimePassword: TThostFtdcPasswordType,
    pub ClientIPAddress: TThostFtdcIPAddressType,
    pub LoginRemark: TThostFtdcLoginRemarkType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqUserLoginField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqUserLoginField>(),
        224usize,
        concat!("Size of: ", stringify!(CThostFtdcReqUserLoginField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqUserLoginField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqUserLoginField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).BrokerID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).UserID as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).Password as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).UserProductInfo as *const _
                as usize
        },
        77usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).InterfaceProductInfo as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(InterfaceProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).ProtocolInfo as *const _
                as usize
        },
        99usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(ProtocolInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).MacAddress as *const _ as usize
        },
        110usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).OneTimePassword as *const _
                as usize
        },
        131usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(OneTimePassword)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).ClientIPAddress as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(ClientIPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqUserLoginField>())).LoginRemark as *const _ as usize
        },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqUserLoginField),
            "::",
            stringify!(LoginRemark)
        )
    );
}
impl Default for CThostFtdcReqUserLoginField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspUserLoginField {
    pub TradingDay: TThostFtdcDateType,
    pub LoginTime: TThostFtdcTimeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub SystemName: TThostFtdcSystemNameType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub MaxOrderRef: TThostFtdcOrderRefType,
    pub SHFETime: TThostFtdcTimeType,
    pub DCETime: TThostFtdcTimeType,
    pub CZCETime: TThostFtdcTimeType,
    pub FFEXTime: TThostFtdcTimeType,
    pub INETime: TThostFtdcTimeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspUserLoginField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspUserLoginField>(),
        156usize,
        concat!("Size of: ", stringify!(CThostFtdcRspUserLoginField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspUserLoginField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspUserLoginField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).LoginTime as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(LoginTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).BrokerID as *const _ as usize
        },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).UserID as *const _ as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).SystemName as *const _ as usize
        },
        45usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(SystemName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).FrontID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).SessionID as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).MaxOrderRef as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(MaxOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).SHFETime as *const _ as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(SHFETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).DCETime as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(DCETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).CZCETime as *const _ as usize
        },
        127usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(CZCETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).FFEXTime as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(FFEXTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLoginField>())).INETime as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLoginField),
            "::",
            stringify!(INETime)
        )
    );
}
impl Default for CThostFtdcRspUserLoginField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcUserLogoutField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcUserLogoutField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcUserLogoutField>(),
        27usize,
        concat!("Size of: ", stringify!(CThostFtdcUserLogoutField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcUserLogoutField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcUserLogoutField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserLogoutField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserLogoutField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserLogoutField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserLogoutField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcForceUserLogoutField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcForceUserLogoutField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcForceUserLogoutField>(),
        27usize,
        concat!("Size of: ", stringify!(CThostFtdcForceUserLogoutField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcForceUserLogoutField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcForceUserLogoutField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForceUserLogoutField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForceUserLogoutField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForceUserLogoutField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForceUserLogoutField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcReqAuthenticateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub AuthCode: TThostFtdcAuthCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqAuthenticateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqAuthenticateField>(),
        55usize,
        concat!("Size of: ", stringify!(CThostFtdcReqAuthenticateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqAuthenticateField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqAuthenticateField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqAuthenticateField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqAuthenticateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqAuthenticateField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqAuthenticateField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqAuthenticateField>())).UserProductInfo as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqAuthenticateField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqAuthenticateField>())).AuthCode as *const _ as usize
        },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqAuthenticateField),
            "::",
            stringify!(AuthCode)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcRspAuthenticateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspAuthenticateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspAuthenticateField>(),
        38usize,
        concat!("Size of: ", stringify!(CThostFtdcRspAuthenticateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspAuthenticateField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspAuthenticateField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspAuthenticateField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspAuthenticateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspAuthenticateField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspAuthenticateField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspAuthenticateField>())).UserProductInfo as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspAuthenticateField),
            "::",
            stringify!(UserProductInfo)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcAuthenticationInfoField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub AuthInfo: TThostFtdcAuthInfoType,
    pub IsResult: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcAuthenticationInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcAuthenticationInfoField>(),
        172usize,
        concat!("Size of: ", stringify!(CThostFtdcAuthenticationInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcAuthenticationInfoField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcAuthenticationInfoField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAuthenticationInfoField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAuthenticationInfoField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAuthenticationInfoField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAuthenticationInfoField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAuthenticationInfoField>())).UserProductInfo
                as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAuthenticationInfoField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAuthenticationInfoField>())).AuthInfo as *const _
                as usize
        },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAuthenticationInfoField),
            "::",
            stringify!(AuthInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAuthenticationInfoField>())).IsResult as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAuthenticationInfoField),
            "::",
            stringify!(IsResult)
        )
    );
}
impl Default for CThostFtdcAuthenticationInfoField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspUserLogin2Field {
    pub TradingDay: TThostFtdcDateType,
    pub LoginTime: TThostFtdcTimeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub SystemName: TThostFtdcSystemNameType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub MaxOrderRef: TThostFtdcOrderRefType,
    pub SHFETime: TThostFtdcTimeType,
    pub DCETime: TThostFtdcTimeType,
    pub CZCETime: TThostFtdcTimeType,
    pub FFEXTime: TThostFtdcTimeType,
    pub INETime: TThostFtdcTimeType,
    pub RandomString: TThostFtdcRandomStringType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspUserLogin2Field() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspUserLogin2Field>(),
        172usize,
        concat!("Size of: ", stringify!(CThostFtdcRspUserLogin2Field))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspUserLogin2Field>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspUserLogin2Field))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).LoginTime as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(LoginTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).BrokerID as *const _ as usize
        },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).UserID as *const _ as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).SystemName as *const _ as usize
        },
        45usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(SystemName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).FrontID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).SessionID as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).MaxOrderRef as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(MaxOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).SHFETime as *const _ as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(SHFETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).DCETime as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(DCETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).CZCETime as *const _ as usize
        },
        127usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(CZCETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).FFEXTime as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(FFEXTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).INETime as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(INETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspUserLogin2Field>())).RandomString as *const _
                as usize
        },
        154usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspUserLogin2Field),
            "::",
            stringify!(RandomString)
        )
    );
}
impl Default for CThostFtdcRspUserLogin2Field {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTransferHeaderField {
    pub Version: TThostFtdcVersionType,
    pub TradeCode: TThostFtdcTradeCodeType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub TradeSerial: TThostFtdcTradeSerialType,
    pub FutureID: TThostFtdcFutureIDType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBrchID: TThostFtdcBankBrchIDType,
    pub OperNo: TThostFtdcOperNoType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub RecordNum: TThostFtdcRecordNumType,
    pub SessionID: TThostFtdcSessionIDType,
    pub RequestID: TThostFtdcRequestIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferHeaderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferHeaderField>(),
        96usize,
        concat!("Size of: ", stringify!(CThostFtdcTransferHeaderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferHeaderField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcTransferHeaderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).Version as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(Version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).TradeCode as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).TradeDate as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).TradeTime as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).TradeSerial as *const _
                as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(TradeSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).FutureID as *const _ as usize
        },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(FutureID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).BankID as *const _ as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).BankBrchID as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(BankBrchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).OperNo as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).DeviceID as *const _ as usize
        },
        75usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).RecordNum as *const _ as usize
        },
        78usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(RecordNum)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).SessionID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferHeaderField>())).RequestID as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferHeaderField),
            "::",
            stringify!(RequestID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTransferBankToFutureReqField {
    pub FutureAccount: TThostFtdcAccountIDType,
    pub FuturePwdFlag: TThostFtdcFuturePwdFlagType,
    pub FutureAccPwd: TThostFtdcFutureAccPwdType,
    pub TradeAmt: TThostFtdcMoneyType,
    pub CustFee: TThostFtdcMoneyType,
    pub CurrencyCode: TThostFtdcCurrencyCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferBankToFutureReqField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferBankToFutureReqField>(),
        56usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTransferBankToFutureReqField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferBankToFutureReqField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferBankToFutureReqField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureReqField>())).FutureAccount
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureReqField),
            "::",
            stringify!(FutureAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureReqField>())).FuturePwdFlag
                as *const _ as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureReqField),
            "::",
            stringify!(FuturePwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureReqField>())).FutureAccPwd
                as *const _ as usize
        },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureReqField),
            "::",
            stringify!(FutureAccPwd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureReqField>())).TradeAmt as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureReqField),
            "::",
            stringify!(TradeAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureReqField>())).CustFee as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureReqField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureReqField>())).CurrencyCode
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureReqField),
            "::",
            stringify!(CurrencyCode)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTransferBankToFutureRspField {
    pub RetCode: TThostFtdcRetCodeType,
    pub RetInfo: TThostFtdcRetInfoType,
    pub FutureAccount: TThostFtdcAccountIDType,
    pub TradeAmt: TThostFtdcMoneyType,
    pub CustFee: TThostFtdcMoneyType,
    pub CurrencyCode: TThostFtdcCurrencyCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferBankToFutureRspField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferBankToFutureRspField>(),
        176usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTransferBankToFutureRspField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferBankToFutureRspField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferBankToFutureRspField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureRspField>())).RetCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureRspField),
            "::",
            stringify!(RetCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureRspField>())).RetInfo as *const _
                as usize
        },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureRspField),
            "::",
            stringify!(RetInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureRspField>())).FutureAccount
                as *const _ as usize
        },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureRspField),
            "::",
            stringify!(FutureAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureRspField>())).TradeAmt as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureRspField),
            "::",
            stringify!(TradeAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureRspField>())).CustFee as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureRspField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankToFutureRspField>())).CurrencyCode
                as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankToFutureRspField),
            "::",
            stringify!(CurrencyCode)
        )
    );
}
impl Default for CThostFtdcTransferBankToFutureRspField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTransferFutureToBankReqField {
    pub FutureAccount: TThostFtdcAccountIDType,
    pub FuturePwdFlag: TThostFtdcFuturePwdFlagType,
    pub FutureAccPwd: TThostFtdcFutureAccPwdType,
    pub TradeAmt: TThostFtdcMoneyType,
    pub CustFee: TThostFtdcMoneyType,
    pub CurrencyCode: TThostFtdcCurrencyCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferFutureToBankReqField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferFutureToBankReqField>(),
        56usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTransferFutureToBankReqField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferFutureToBankReqField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferFutureToBankReqField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankReqField>())).FutureAccount
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankReqField),
            "::",
            stringify!(FutureAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankReqField>())).FuturePwdFlag
                as *const _ as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankReqField),
            "::",
            stringify!(FuturePwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankReqField>())).FutureAccPwd
                as *const _ as usize
        },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankReqField),
            "::",
            stringify!(FutureAccPwd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankReqField>())).TradeAmt as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankReqField),
            "::",
            stringify!(TradeAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankReqField>())).CustFee as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankReqField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankReqField>())).CurrencyCode
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankReqField),
            "::",
            stringify!(CurrencyCode)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTransferFutureToBankRspField {
    pub RetCode: TThostFtdcRetCodeType,
    pub RetInfo: TThostFtdcRetInfoType,
    pub FutureAccount: TThostFtdcAccountIDType,
    pub TradeAmt: TThostFtdcMoneyType,
    pub CustFee: TThostFtdcMoneyType,
    pub CurrencyCode: TThostFtdcCurrencyCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferFutureToBankRspField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferFutureToBankRspField>(),
        176usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTransferFutureToBankRspField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferFutureToBankRspField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferFutureToBankRspField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankRspField>())).RetCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankRspField),
            "::",
            stringify!(RetCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankRspField>())).RetInfo as *const _
                as usize
        },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankRspField),
            "::",
            stringify!(RetInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankRspField>())).FutureAccount
                as *const _ as usize
        },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankRspField),
            "::",
            stringify!(FutureAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankRspField>())).TradeAmt as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankRspField),
            "::",
            stringify!(TradeAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankRspField>())).CustFee as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankRspField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferFutureToBankRspField>())).CurrencyCode
                as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferFutureToBankRspField),
            "::",
            stringify!(CurrencyCode)
        )
    );
}
impl Default for CThostFtdcTransferFutureToBankRspField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTransferQryBankReqField {
    pub FutureAccount: TThostFtdcAccountIDType,
    pub FuturePwdFlag: TThostFtdcFuturePwdFlagType,
    pub FutureAccPwd: TThostFtdcFutureAccPwdType,
    pub CurrencyCode: TThostFtdcCurrencyCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferQryBankReqField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferQryBankReqField>(),
        35usize,
        concat!("Size of: ", stringify!(CThostFtdcTransferQryBankReqField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferQryBankReqField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferQryBankReqField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankReqField>())).FutureAccount as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankReqField),
            "::",
            stringify!(FutureAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankReqField>())).FuturePwdFlag as *const _
                as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankReqField),
            "::",
            stringify!(FuturePwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankReqField>())).FutureAccPwd as *const _
                as usize
        },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankReqField),
            "::",
            stringify!(FutureAccPwd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankReqField>())).CurrencyCode as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankReqField),
            "::",
            stringify!(CurrencyCode)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTransferQryBankRspField {
    pub RetCode: TThostFtdcRetCodeType,
    pub RetInfo: TThostFtdcRetInfoType,
    pub FutureAccount: TThostFtdcAccountIDType,
    pub TradeAmt: TThostFtdcMoneyType,
    pub UseAmt: TThostFtdcMoneyType,
    pub FetchAmt: TThostFtdcMoneyType,
    pub CurrencyCode: TThostFtdcCurrencyCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferQryBankRspField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferQryBankRspField>(),
        184usize,
        concat!("Size of: ", stringify!(CThostFtdcTransferQryBankRspField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferQryBankRspField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferQryBankRspField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankRspField>())).RetCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankRspField),
            "::",
            stringify!(RetCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankRspField>())).RetInfo as *const _
                as usize
        },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankRspField),
            "::",
            stringify!(RetInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankRspField>())).FutureAccount as *const _
                as usize
        },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankRspField),
            "::",
            stringify!(FutureAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankRspField>())).TradeAmt as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankRspField),
            "::",
            stringify!(TradeAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankRspField>())).UseAmt as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankRspField),
            "::",
            stringify!(UseAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankRspField>())).FetchAmt as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankRspField),
            "::",
            stringify!(FetchAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryBankRspField>())).CurrencyCode as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryBankRspField),
            "::",
            stringify!(CurrencyCode)
        )
    );
}
impl Default for CThostFtdcTransferQryBankRspField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTransferQryDetailReqField {
    pub FutureAccount: TThostFtdcAccountIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferQryDetailReqField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferQryDetailReqField>(),
        13usize,
        concat!("Size of: ", stringify!(CThostFtdcTransferQryDetailReqField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferQryDetailReqField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferQryDetailReqField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailReqField>())).FutureAccount
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailReqField),
            "::",
            stringify!(FutureAccount)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTransferQryDetailRspField {
    pub TradeDate: TThostFtdcDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub TradeCode: TThostFtdcTradeCodeType,
    pub FutureSerial: TThostFtdcTradeSerialNoType,
    pub FutureID: TThostFtdcFutureIDType,
    pub FutureAccount: TThostFtdcFutureAccountType,
    pub BankSerial: TThostFtdcTradeSerialNoType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBrchID: TThostFtdcBankBrchIDType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub CertCode: TThostFtdcCertCodeType,
    pub CurrencyCode: TThostFtdcCurrencyCodeType,
    pub TxAmount: TThostFtdcMoneyType,
    pub Flag: TThostFtdcTransferValidFlagType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferQryDetailRspField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferQryDetailRspField>(),
        168usize,
        concat!("Size of: ", stringify!(CThostFtdcTransferQryDetailRspField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferQryDetailRspField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTransferQryDetailRspField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).TradeDate as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).TradeTime as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).TradeCode as *const _
                as usize
        },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).FutureSerial as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).FutureID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(FutureID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).FutureAccount
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(FutureAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).BankSerial as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).BankID as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).BankBrchID as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(BankBrchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).BankAccount as *const _
                as usize
        },
        81usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).CertCode as *const _
                as usize
        },
        122usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(CertCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).CurrencyCode as *const _
                as usize
        },
        143usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(CurrencyCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).TxAmount as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(TxAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferQryDetailRspField>())).Flag as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferQryDetailRspField),
            "::",
            stringify!(Flag)
        )
    );
}
impl Default for CThostFtdcTransferQryDetailRspField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspInfoField {
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspInfoField>(),
        88usize,
        concat!("Size of: ", stringify!(CThostFtdcRspInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspInfoField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspInfoField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspInfoField>())).ErrorID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspInfoField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspInfoField>())).ErrorMsg as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspInfoField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcRspInfoField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcExchangeField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExchangeName: TThostFtdcExchangeNameType,
    pub ExchangeProperty: TThostFtdcExchangePropertyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeField>(),
        71usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcExchangeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeField>())).ExchangeName as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeField),
            "::",
            stringify!(ExchangeName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeField>())).ExchangeProperty as *const _
                as usize
        },
        70usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeField),
            "::",
            stringify!(ExchangeProperty)
        )
    );
}
impl Default for CThostFtdcExchangeField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcProductField {
    pub ProductID: TThostFtdcInstrumentIDType,
    pub ProductName: TThostFtdcProductNameType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ProductClass: TThostFtdcProductClassType,
    pub VolumeMultiple: TThostFtdcVolumeMultipleType,
    pub PriceTick: TThostFtdcPriceType,
    pub MaxMarketOrderVolume: TThostFtdcVolumeType,
    pub MinMarketOrderVolume: TThostFtdcVolumeType,
    pub MaxLimitOrderVolume: TThostFtdcVolumeType,
    pub MinLimitOrderVolume: TThostFtdcVolumeType,
    pub PositionType: TThostFtdcPositionTypeType,
    pub PositionDateType: TThostFtdcPositionDateTypeType,
    pub CloseDealType: TThostFtdcCloseDealTypeType,
    pub TradeCurrencyID: TThostFtdcCurrencyIDType,
    pub MortgageFundUseRange: TThostFtdcMortgageFundUseRangeType,
    pub ExchangeProductID: TThostFtdcInstrumentIDType,
    pub UnderlyingMultiple: TThostFtdcUnderlyingMultipleType,
}
#[test]
fn bindgen_test_layout_CThostFtdcProductField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcProductField>(),
        144usize,
        concat!("Size of: ", stringify!(CThostFtdcProductField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcProductField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcProductField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).ProductID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).ProductName as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(ProductName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).ExchangeID as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).ProductClass as *const _ as usize
        },
        61usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(ProductClass)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).VolumeMultiple as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(VolumeMultiple)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).PriceTick as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(PriceTick)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).MaxMarketOrderVolume as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(MaxMarketOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).MinMarketOrderVolume as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(MinMarketOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).MaxLimitOrderVolume as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(MaxLimitOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).MinLimitOrderVolume as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(MinLimitOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).PositionType as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(PositionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).PositionDateType as *const _ as usize
        },
        97usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(PositionDateType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).CloseDealType as *const _ as usize
        },
        98usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(CloseDealType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).TradeCurrencyID as *const _ as usize
        },
        99usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(TradeCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).MortgageFundUseRange as *const _
                as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(MortgageFundUseRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).ExchangeProductID as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(ExchangeProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductField>())).UnderlyingMultiple as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductField),
            "::",
            stringify!(UnderlyingMultiple)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InstrumentName: TThostFtdcInstrumentNameType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub ProductID: TThostFtdcInstrumentIDType,
    pub ProductClass: TThostFtdcProductClassType,
    pub DeliveryYear: TThostFtdcYearType,
    pub DeliveryMonth: TThostFtdcMonthType,
    pub MaxMarketOrderVolume: TThostFtdcVolumeType,
    pub MinMarketOrderVolume: TThostFtdcVolumeType,
    pub MaxLimitOrderVolume: TThostFtdcVolumeType,
    pub MinLimitOrderVolume: TThostFtdcVolumeType,
    pub VolumeMultiple: TThostFtdcVolumeMultipleType,
    pub PriceTick: TThostFtdcPriceType,
    pub CreateDate: TThostFtdcDateType,
    pub OpenDate: TThostFtdcDateType,
    pub ExpireDate: TThostFtdcDateType,
    pub StartDelivDate: TThostFtdcDateType,
    pub EndDelivDate: TThostFtdcDateType,
    pub InstLifePhase: TThostFtdcInstLifePhaseType,
    pub IsTrading: TThostFtdcBoolType,
    pub PositionType: TThostFtdcPositionTypeType,
    pub PositionDateType: TThostFtdcPositionDateTypeType,
    pub LongMarginRatio: TThostFtdcRatioType,
    pub ShortMarginRatio: TThostFtdcRatioType,
    pub MaxMarginSideAlgorithm: TThostFtdcMaxMarginSideAlgorithmType,
    pub UnderlyingInstrID: TThostFtdcInstrumentIDType,
    pub StrikePrice: TThostFtdcPriceType,
    pub OptionsType: TThostFtdcOptionsTypeType,
    pub UnderlyingMultiple: TThostFtdcUnderlyingMultipleType,
    pub CombinationType: TThostFtdcCombinationTypeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentField>(),
        296usize,
        concat!("Size of: ", stringify!(CThostFtdcInstrumentField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcInstrumentField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).InstrumentID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).ExchangeID as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).InstrumentName as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(InstrumentName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).ExchangeInstID as *const _
                as usize
        },
        61usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).ProductID as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).ProductClass as *const _ as usize
        },
        123usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(ProductClass)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).DeliveryYear as *const _ as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(DeliveryYear)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).DeliveryMonth as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(DeliveryMonth)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).MaxMarketOrderVolume as *const _
                as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(MaxMarketOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).MinMarketOrderVolume as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(MinMarketOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).MaxLimitOrderVolume as *const _
                as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(MaxLimitOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).MinLimitOrderVolume as *const _
                as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(MinLimitOrderVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).VolumeMultiple as *const _
                as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(VolumeMultiple)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).PriceTick as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(PriceTick)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).CreateDate as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(CreateDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).OpenDate as *const _ as usize
        },
        169usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(OpenDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).ExpireDate as *const _ as usize
        },
        178usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(ExpireDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).StartDelivDate as *const _
                as usize
        },
        187usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(StartDelivDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).EndDelivDate as *const _ as usize
        },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(EndDelivDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).InstLifePhase as *const _ as usize
        },
        205usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(InstLifePhase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).IsTrading as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(IsTrading)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).PositionType as *const _ as usize
        },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(PositionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).PositionDateType as *const _
                as usize
        },
        213usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(PositionDateType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).LongMarginRatio as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(LongMarginRatio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).ShortMarginRatio as *const _
                as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(ShortMarginRatio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).MaxMarginSideAlgorithm as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(MaxMarginSideAlgorithm)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).UnderlyingInstrID as *const _
                as usize
        },
        233usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(UnderlyingInstrID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).StrikePrice as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(StrikePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).OptionsType as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(OptionsType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).UnderlyingMultiple as *const _
                as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(UnderlyingMultiple)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentField>())).CombinationType as *const _
                as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentField),
            "::",
            stringify!(CombinationType)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcBrokerField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerAbbr: TThostFtdcBrokerAbbrType,
    pub BrokerName: TThostFtdcBrokerNameType,
    pub IsActive: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerField>(),
        108usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcBrokerField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcBrokerField>())).BrokerID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerField>())).BrokerAbbr as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerField),
            "::",
            stringify!(BrokerAbbr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerField>())).BrokerName as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerField),
            "::",
            stringify!(BrokerName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcBrokerField>())).IsActive as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerField),
            "::",
            stringify!(IsActive)
        )
    );
}
impl Default for CThostFtdcBrokerField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTraderField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallCount: TThostFtdcInstallCountType,
    pub BrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTraderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTraderField>(),
        100usize,
        concat!("Size of: ", stringify!(CThostFtdcTraderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTraderField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcTraderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTraderField>())).TraderID as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderField>())).ParticipantID as *const _ as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTraderField>())).Password as *const _ as usize },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderField>())).InstallCount as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderField),
            "::",
            stringify!(InstallCount)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTraderField>())).BrokerID as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderField),
            "::",
            stringify!(BrokerID)
        )
    );
}
impl Default for CThostFtdcTraderField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcInvestorField {
    pub InvestorID: TThostFtdcInvestorIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorGroupID: TThostFtdcInvestorIDType,
    pub InvestorName: TThostFtdcPartyNameType,
    pub IdentifiedCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub IsActive: TThostFtdcBoolType,
    pub Telephone: TThostFtdcTelephoneType,
    pub Address: TThostFtdcAddressType,
    pub OpenDate: TThostFtdcDateType,
    pub Mobile: TThostFtdcMobileType,
    pub CommModelID: TThostFtdcInvestorIDType,
    pub MarginModelID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorField>(),
        396usize,
        concat!("Size of: ", stringify!(CThostFtdcInvestorField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcInvestorField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).InvestorID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).BrokerID as *const _ as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).InvestorGroupID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(InvestorGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).InvestorName as *const _ as usize
        },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(InvestorName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).IdentifiedCardType as *const _
                as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(IdentifiedCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).IdentifiedCardNo as *const _
                as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).IsActive as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(IsActive)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).Telephone as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcInvestorField>())).Address as *const _ as usize },
        217usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).OpenDate as *const _ as usize
        },
        318usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(OpenDate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcInvestorField>())).Mobile as *const _ as usize },
        327usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(Mobile)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).CommModelID as *const _ as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(CommModelID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorField>())).MarginModelID as *const _ as usize
        },
        381usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorField),
            "::",
            stringify!(MarginModelID)
        )
    );
}
impl Default for CThostFtdcInvestorField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTradingCodeField {
    pub InvestorID: TThostFtdcInvestorIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IsActive: TThostFtdcBoolType,
    pub ClientIDType: TThostFtdcClientIDTypeType,
    pub BranchID: TThostFtdcBranchIDType,
    pub BizType: TThostFtdcBizTypeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingCodeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingCodeField>(),
        76usize,
        concat!("Size of: ", stringify!(CThostFtdcTradingCodeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingCodeField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcTradingCodeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).InvestorID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).BrokerID as *const _ as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).ExchangeID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).ClientID as *const _ as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).IsActive as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(IsActive)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).ClientIDType as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(ClientIDType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).BranchID as *const _ as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).BizType as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(BizType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingCodeField>())).InvestUnitID as *const _ as usize
        },
        59usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingCodeField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcPartBrokerField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub IsActive: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcPartBrokerField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcPartBrokerField>(),
        36usize,
        concat!("Size of: ", stringify!(CThostFtdcPartBrokerField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcPartBrokerField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcPartBrokerField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPartBrokerField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPartBrokerField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPartBrokerField>())).ExchangeID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPartBrokerField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPartBrokerField>())).ParticipantID as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPartBrokerField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPartBrokerField>())).IsActive as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPartBrokerField),
            "::",
            stringify!(IsActive)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcSuperUserField {
    pub UserID: TThostFtdcUserIDType,
    pub UserName: TThostFtdcUserNameType,
    pub Password: TThostFtdcPasswordType,
    pub IsActive: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSuperUserField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSuperUserField>(),
        144usize,
        concat!("Size of: ", stringify!(CThostFtdcSuperUserField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSuperUserField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcSuperUserField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcSuperUserField>())).UserID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSuperUserField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSuperUserField>())).UserName as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSuperUserField),
            "::",
            stringify!(UserName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSuperUserField>())).Password as *const _ as usize
        },
        97usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSuperUserField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSuperUserField>())).IsActive as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSuperUserField),
            "::",
            stringify!(IsActive)
        )
    );
}
impl Default for CThostFtdcSuperUserField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSuperUserFunctionField {
    pub UserID: TThostFtdcUserIDType,
    pub FunctionCode: TThostFtdcFunctionCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSuperUserFunctionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSuperUserFunctionField>(),
        17usize,
        concat!("Size of: ", stringify!(CThostFtdcSuperUserFunctionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSuperUserFunctionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSuperUserFunctionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSuperUserFunctionField>())).UserID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSuperUserFunctionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSuperUserFunctionField>())).FunctionCode as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSuperUserFunctionField),
            "::",
            stringify!(FunctionCode)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcInvestorGroupField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorGroupID: TThostFtdcInvestorIDType,
    pub InvestorGroupName: TThostFtdcInvestorGroupNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorGroupField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorGroupField>(),
        65usize,
        concat!("Size of: ", stringify!(CThostFtdcInvestorGroupField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorGroupField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcInvestorGroupField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorGroupField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorGroupField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorGroupField>())).InvestorGroupID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorGroupField),
            "::",
            stringify!(InvestorGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorGroupField>())).InvestorGroupName as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorGroupField),
            "::",
            stringify!(InvestorGroupName)
        )
    );
}
impl Default for CThostFtdcInvestorGroupField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTradingAccountField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub PreMortgage: TThostFtdcMoneyType,
    pub PreCredit: TThostFtdcMoneyType,
    pub PreDeposit: TThostFtdcMoneyType,
    pub PreBalance: TThostFtdcMoneyType,
    pub PreMargin: TThostFtdcMoneyType,
    pub InterestBase: TThostFtdcMoneyType,
    pub Interest: TThostFtdcMoneyType,
    pub Deposit: TThostFtdcMoneyType,
    pub Withdraw: TThostFtdcMoneyType,
    pub FrozenMargin: TThostFtdcMoneyType,
    pub FrozenCash: TThostFtdcMoneyType,
    pub FrozenCommission: TThostFtdcMoneyType,
    pub CurrMargin: TThostFtdcMoneyType,
    pub CashIn: TThostFtdcMoneyType,
    pub Commission: TThostFtdcMoneyType,
    pub CloseProfit: TThostFtdcMoneyType,
    pub PositionProfit: TThostFtdcMoneyType,
    pub Balance: TThostFtdcMoneyType,
    pub Available: TThostFtdcMoneyType,
    pub WithdrawQuota: TThostFtdcMoneyType,
    pub Reserve: TThostFtdcMoneyType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub Credit: TThostFtdcMoneyType,
    pub Mortgage: TThostFtdcMoneyType,
    pub ExchangeMargin: TThostFtdcMoneyType,
    pub DeliveryMargin: TThostFtdcMoneyType,
    pub ExchangeDeliveryMargin: TThostFtdcMoneyType,
    pub ReserveBalance: TThostFtdcMoneyType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub PreFundMortgageIn: TThostFtdcMoneyType,
    pub PreFundMortgageOut: TThostFtdcMoneyType,
    pub FundMortgageIn: TThostFtdcMoneyType,
    pub FundMortgageOut: TThostFtdcMoneyType,
    pub FundMortgageAvailable: TThostFtdcMoneyType,
    pub MortgageableFund: TThostFtdcMoneyType,
    pub SpecProductMargin: TThostFtdcMoneyType,
    pub SpecProductFrozenMargin: TThostFtdcMoneyType,
    pub SpecProductCommission: TThostFtdcMoneyType,
    pub SpecProductFrozenCommission: TThostFtdcMoneyType,
    pub SpecProductPositionProfit: TThostFtdcMoneyType,
    pub SpecProductCloseProfit: TThostFtdcMoneyType,
    pub SpecProductPositionProfitByAlg: TThostFtdcMoneyType,
    pub SpecProductExchangeMargin: TThostFtdcMoneyType,
    pub BizType: TThostFtdcBizTypeType,
    pub FrozenSwap: TThostFtdcMoneyType,
    pub RemainSwap: TThostFtdcMoneyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingAccountField>(),
        400usize,
        concat!("Size of: ", stringify!(CThostFtdcTradingAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingAccountField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcTradingAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).AccountID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PreMortgage as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PreMortgage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PreCredit as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PreCredit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PreDeposit as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PreDeposit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PreBalance as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PreBalance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PreMargin as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PreMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).InterestBase as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(InterestBase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Interest as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Interest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Deposit as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Deposit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Withdraw as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Withdraw)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).FrozenMargin as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(FrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).FrozenCash as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(FrozenCash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).FrozenCommission as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(FrozenCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).CurrMargin as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(CurrMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).CashIn as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(CashIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Commission as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Commission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).CloseProfit as *const _
                as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(CloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PositionProfit as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PositionProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Balance as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Balance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Available as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Available)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).WithdrawQuota as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(WithdrawQuota)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Reserve as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Reserve)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).TradingDay as *const _
                as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SettlementID as *const _
                as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Credit as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Credit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).Mortgage as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(Mortgage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).ExchangeMargin as *const _
                as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(ExchangeMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).DeliveryMargin as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(DeliveryMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).ExchangeDeliveryMargin
                as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(ExchangeDeliveryMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).ReserveBalance as *const _
                as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(ReserveBalance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).CurrencyID as *const _
                as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PreFundMortgageIn as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PreFundMortgageIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).PreFundMortgageOut as *const _
                as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(PreFundMortgageOut)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).FundMortgageIn as *const _
                as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(FundMortgageIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).FundMortgageOut as *const _
                as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(FundMortgageOut)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).FundMortgageAvailable
                as *const _ as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(FundMortgageAvailable)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).MortgageableFund as *const _
                as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(MortgageableFund)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductMargin as *const _
                as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductFrozenMargin
                as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductFrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductCommission
                as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductFrozenCommission
                as *const _ as usize
        },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductFrozenCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductPositionProfit
                as *const _ as usize
        },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductPositionProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductCloseProfit
                as *const _ as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductCloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductPositionProfitByAlg
                as *const _ as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductPositionProfitByAlg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).SpecProductExchangeMargin
                as *const _ as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(SpecProductExchangeMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).BizType as *const _ as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(BizType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).FrozenSwap as *const _
                as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(FrozenSwap)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountField>())).RemainSwap as *const _
                as usize
        },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountField),
            "::",
            stringify!(RemainSwap)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInvestorPositionField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub PosiDirection: TThostFtdcPosiDirectionType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub PositionDate: TThostFtdcPositionDateType,
    pub YdPosition: TThostFtdcVolumeType,
    pub Position: TThostFtdcVolumeType,
    pub LongFrozen: TThostFtdcVolumeType,
    pub ShortFrozen: TThostFtdcVolumeType,
    pub LongFrozenAmount: TThostFtdcMoneyType,
    pub ShortFrozenAmount: TThostFtdcMoneyType,
    pub OpenVolume: TThostFtdcVolumeType,
    pub CloseVolume: TThostFtdcVolumeType,
    pub OpenAmount: TThostFtdcMoneyType,
    pub CloseAmount: TThostFtdcMoneyType,
    pub PositionCost: TThostFtdcMoneyType,
    pub PreMargin: TThostFtdcMoneyType,
    pub UseMargin: TThostFtdcMoneyType,
    pub FrozenMargin: TThostFtdcMoneyType,
    pub FrozenCash: TThostFtdcMoneyType,
    pub FrozenCommission: TThostFtdcMoneyType,
    pub CashIn: TThostFtdcMoneyType,
    pub Commission: TThostFtdcMoneyType,
    pub CloseProfit: TThostFtdcMoneyType,
    pub PositionProfit: TThostFtdcMoneyType,
    pub PreSettlementPrice: TThostFtdcPriceType,
    pub SettlementPrice: TThostFtdcPriceType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub OpenCost: TThostFtdcMoneyType,
    pub ExchangeMargin: TThostFtdcMoneyType,
    pub CombPosition: TThostFtdcVolumeType,
    pub CombLongFrozen: TThostFtdcVolumeType,
    pub CombShortFrozen: TThostFtdcVolumeType,
    pub CloseProfitByDate: TThostFtdcMoneyType,
    pub CloseProfitByTrade: TThostFtdcMoneyType,
    pub TodayPosition: TThostFtdcVolumeType,
    pub MarginRateByMoney: TThostFtdcRatioType,
    pub MarginRateByVolume: TThostFtdcRatioType,
    pub StrikeFrozen: TThostFtdcVolumeType,
    pub StrikeFrozenAmount: TThostFtdcMoneyType,
    pub AbandonFrozen: TThostFtdcVolumeType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub YdStrikeFrozen: TThostFtdcVolumeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorPositionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorPositionField>(),
        360usize,
        concat!("Size of: ", stringify!(CThostFtdcInvestorPositionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorPositionField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcInvestorPositionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).BrokerID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).InvestorID as *const _
                as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).PosiDirection as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(PosiDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).HedgeFlag as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).PositionDate as *const _
                as usize
        },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(PositionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).YdPosition as *const _
                as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(YdPosition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).Position as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(Position)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).LongFrozen as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(LongFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).ShortFrozen as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(ShortFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).LongFrozenAmount as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(LongFrozenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).ShortFrozenAmount
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(ShortFrozenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).OpenVolume as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(OpenVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CloseVolume as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CloseVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).OpenAmount as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(OpenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CloseAmount as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CloseAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).PositionCost as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(PositionCost)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).PreMargin as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(PreMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).UseMargin as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(UseMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).FrozenMargin as *const _
                as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(FrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).FrozenCash as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(FrozenCash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).FrozenCommission as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(FrozenCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CashIn as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CashIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).Commission as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(Commission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CloseProfit as *const _
                as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).PositionProfit as *const _
                as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(PositionProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).PreSettlementPrice
                as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(PreSettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).SettlementPrice as *const _
                as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(SettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).TradingDay as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).SettlementID as *const _
                as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).OpenCost as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(OpenCost)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).ExchangeMargin as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(ExchangeMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CombPosition as *const _
                as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CombPosition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CombLongFrozen as *const _
                as usize
        },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CombLongFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CombShortFrozen as *const _
                as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CombShortFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CloseProfitByDate
                as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CloseProfitByDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).CloseProfitByTrade
                as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(CloseProfitByTrade)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).TodayPosition as *const _
                as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(TodayPosition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).MarginRateByMoney
                as *const _ as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(MarginRateByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).MarginRateByVolume
                as *const _ as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(MarginRateByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).StrikeFrozen as *const _
                as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(StrikeFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).StrikeFrozenAmount
                as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(StrikeFrozenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).AbandonFrozen as *const _
                as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(AbandonFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).ExchangeID as *const _
                as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).YdStrikeFrozen as *const _
                as usize
        },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(YdStrikeFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionField>())).InvestUnitID as *const _
                as usize
        },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentMarginRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub LongMarginRatioByMoney: TThostFtdcRatioType,
    pub LongMarginRatioByVolume: TThostFtdcMoneyType,
    pub ShortMarginRatioByMoney: TThostFtdcRatioType,
    pub ShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub IsRelative: TThostFtdcBoolType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentMarginRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentMarginRateField>(),
        128usize,
        concat!("Size of: ", stringify!(CThostFtdcInstrumentMarginRateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentMarginRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInstrumentMarginRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).InvestorID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).HedgeFlag as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).LongMarginRatioByMoney
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(LongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).LongMarginRatioByVolume
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(LongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).ShortMarginRatioByMoney
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(ShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).ShortMarginRatioByVolume
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(ShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).IsRelative as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(IsRelative)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).ExchangeID as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateField>())).InvestUnitID as *const _
                as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentCommissionRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OpenRatioByMoney: TThostFtdcRatioType,
    pub OpenRatioByVolume: TThostFtdcRatioType,
    pub CloseRatioByMoney: TThostFtdcRatioType,
    pub CloseRatioByVolume: TThostFtdcRatioType,
    pub CloseTodayRatioByMoney: TThostFtdcRatioType,
    pub CloseTodayRatioByVolume: TThostFtdcRatioType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub BizType: TThostFtdcBizTypeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentCommissionRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentCommissionRateField>(),
        136usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentCommissionRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).OpenRatioByMoney
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(OpenRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).OpenRatioByVolume
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(OpenRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).CloseRatioByMoney
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(CloseRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).CloseRatioByVolume
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(CloseRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>()))
                .CloseTodayRatioByMoney as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(CloseTodayRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>()))
                .CloseTodayRatioByVolume as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(CloseTodayRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).ExchangeID
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).BizType as *const _
                as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(BizType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentCommissionRateField>())).InvestUnitID
                as *const _ as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentCommissionRateField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcDepthMarketDataField {
    pub TradingDay: TThostFtdcDateType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub LastPrice: TThostFtdcPriceType,
    pub PreSettlementPrice: TThostFtdcPriceType,
    pub PreClosePrice: TThostFtdcPriceType,
    pub PreOpenInterest: TThostFtdcLargeVolumeType,
    pub OpenPrice: TThostFtdcPriceType,
    pub HighestPrice: TThostFtdcPriceType,
    pub LowestPrice: TThostFtdcPriceType,
    pub Volume: TThostFtdcVolumeType,
    pub Turnover: TThostFtdcMoneyType,
    pub OpenInterest: TThostFtdcLargeVolumeType,
    pub ClosePrice: TThostFtdcPriceType,
    pub SettlementPrice: TThostFtdcPriceType,
    pub UpperLimitPrice: TThostFtdcPriceType,
    pub LowerLimitPrice: TThostFtdcPriceType,
    pub PreDelta: TThostFtdcRatioType,
    pub CurrDelta: TThostFtdcRatioType,
    pub UpdateTime: TThostFtdcTimeType,
    pub UpdateMillisec: TThostFtdcMillisecType,
    pub BidPrice1: TThostFtdcPriceType,
    pub BidVolume1: TThostFtdcVolumeType,
    pub AskPrice1: TThostFtdcPriceType,
    pub AskVolume1: TThostFtdcVolumeType,
    pub BidPrice2: TThostFtdcPriceType,
    pub BidVolume2: TThostFtdcVolumeType,
    pub AskPrice2: TThostFtdcPriceType,
    pub AskVolume2: TThostFtdcVolumeType,
    pub BidPrice3: TThostFtdcPriceType,
    pub BidVolume3: TThostFtdcVolumeType,
    pub AskPrice3: TThostFtdcPriceType,
    pub AskVolume3: TThostFtdcVolumeType,
    pub BidPrice4: TThostFtdcPriceType,
    pub BidVolume4: TThostFtdcVolumeType,
    pub AskPrice4: TThostFtdcPriceType,
    pub AskVolume4: TThostFtdcVolumeType,
    pub BidPrice5: TThostFtdcPriceType,
    pub BidVolume5: TThostFtdcVolumeType,
    pub AskPrice5: TThostFtdcPriceType,
    pub AskVolume5: TThostFtdcVolumeType,
    pub AveragePrice: TThostFtdcPriceType,
    pub ActionDay: TThostFtdcDateType,
}
#[test]
fn bindgen_test_layout_CThostFtdcDepthMarketDataField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcDepthMarketDataField>(),
        408usize,
        concat!("Size of: ", stringify!(CThostFtdcDepthMarketDataField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcDepthMarketDataField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcDepthMarketDataField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).TradingDay as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).InstrumentID as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).ExchangeID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).ExchangeInstID as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).LastPrice as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(LastPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).PreSettlementPrice
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(PreSettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).PreClosePrice as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(PreClosePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).PreOpenInterest as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(PreOpenInterest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).OpenPrice as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(OpenPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).HighestPrice as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(HighestPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).LowestPrice as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(LowestPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).Volume as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).Turnover as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(Turnover)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).OpenInterest as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(OpenInterest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).ClosePrice as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(ClosePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).SettlementPrice as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(SettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).UpperLimitPrice as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(UpperLimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).LowerLimitPrice as *const _
                as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(LowerLimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).PreDelta as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(PreDelta)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).CurrDelta as *const _
                as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(CurrDelta)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).UpdateTime as *const _
                as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(UpdateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).UpdateMillisec as *const _
                as usize
        },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(UpdateMillisec)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidPrice1 as *const _
                as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidPrice1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidVolume1 as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidVolume1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskPrice1 as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskPrice1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskVolume1 as *const _
                as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskVolume1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidPrice2 as *const _
                as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidPrice2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidVolume2 as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidVolume2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskPrice2 as *const _
                as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskPrice2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskVolume2 as *const _
                as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskVolume2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidPrice3 as *const _
                as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidPrice3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidVolume3 as *const _
                as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidVolume3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskPrice3 as *const _
                as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskPrice3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskVolume3 as *const _
                as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskVolume3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidPrice4 as *const _
                as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidPrice4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidVolume4 as *const _
                as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidVolume4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskPrice4 as *const _
                as usize
        },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskPrice4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskVolume4 as *const _
                as usize
        },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskVolume4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidPrice5 as *const _
                as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidPrice5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).BidVolume5 as *const _
                as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(BidVolume5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskPrice5 as *const _
                as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskPrice5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AskVolume5 as *const _
                as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AskVolume5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).AveragePrice as *const _
                as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(AveragePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepthMarketDataField>())).ActionDay as *const _
                as usize
        },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepthMarketDataField),
            "::",
            stringify!(ActionDay)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentTradingRightField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub TradingRight: TThostFtdcTradingRightType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentTradingRightField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentTradingRightField>(),
        57usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInstrumentTradingRightField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentTradingRightField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInstrumentTradingRightField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentTradingRightField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentTradingRightField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentTradingRightField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentTradingRightField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentTradingRightField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentTradingRightField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentTradingRightField>())).InvestorID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentTradingRightField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentTradingRightField>())).TradingRight
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentTradingRightField),
            "::",
            stringify!(TradingRight)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcBrokerUserField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub UserName: TThostFtdcUserNameType,
    pub UserType: TThostFtdcUserTypeType,
    pub IsActive: TThostFtdcBoolType,
    pub IsUsingOTP: TThostFtdcBoolType,
    pub IsAuthForce: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerUserField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerUserField>(),
        124usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerUserField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerUserField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcBrokerUserField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserField>())).UserName as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserField),
            "::",
            stringify!(UserName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserField>())).UserType as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserField),
            "::",
            stringify!(UserType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserField>())).IsActive as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserField),
            "::",
            stringify!(IsActive)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserField>())).IsUsingOTP as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserField),
            "::",
            stringify!(IsUsingOTP)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserField>())).IsAuthForce as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserField),
            "::",
            stringify!(IsAuthForce)
        )
    );
}
impl Default for CThostFtdcBrokerUserField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcBrokerUserPasswordField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Password: TThostFtdcPasswordType,
    pub LastUpdateTime: TThostFtdcDateTimeType,
    pub LastLoginTime: TThostFtdcDateTimeType,
    pub ExpireDate: TThostFtdcDateType,
    pub WeakExpireDate: TThostFtdcDateType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerUserPasswordField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerUserPasswordField>(),
        120usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerUserPasswordField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerUserPasswordField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcBrokerUserPasswordField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserPasswordField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserPasswordField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserPasswordField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserPasswordField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserPasswordField>())).Password as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserPasswordField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserPasswordField>())).LastUpdateTime as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserPasswordField),
            "::",
            stringify!(LastUpdateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserPasswordField>())).LastLoginTime as *const _
                as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserPasswordField),
            "::",
            stringify!(LastLoginTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserPasswordField>())).ExpireDate as *const _
                as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserPasswordField),
            "::",
            stringify!(ExpireDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserPasswordField>())).WeakExpireDate as *const _
                as usize
        },
        111usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserPasswordField),
            "::",
            stringify!(WeakExpireDate)
        )
    );
}
impl Default for CThostFtdcBrokerUserPasswordField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcBrokerUserFunctionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub BrokerFunctionCode: TThostFtdcBrokerFunctionCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerUserFunctionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerUserFunctionField>(),
        28usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerUserFunctionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerUserFunctionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcBrokerUserFunctionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserFunctionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserFunctionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserFunctionField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserFunctionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserFunctionField>())).BrokerFunctionCode
                as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserFunctionField),
            "::",
            stringify!(BrokerFunctionCode)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTraderOfferField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub TraderConnectStatus: TThostFtdcTraderConnectStatusType,
    pub ConnectRequestDate: TThostFtdcDateType,
    pub ConnectRequestTime: TThostFtdcTimeType,
    pub LastReportDate: TThostFtdcDateType,
    pub LastReportTime: TThostFtdcTimeType,
    pub ConnectDate: TThostFtdcDateType,
    pub ConnectTime: TThostFtdcTimeType,
    pub StartDate: TThostFtdcDateType,
    pub StartTime: TThostFtdcTimeType,
    pub TradingDay: TThostFtdcDateType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub MaxTradeID: TThostFtdcTradeIDType,
    pub MaxOrderMessageReference: TThostFtdcReturnCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTraderOfferField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTraderOfferField>(),
        224usize,
        concat!("Size of: ", stringify!(CThostFtdcTraderOfferField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTraderOfferField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcTraderOfferField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).TraderID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).ParticipantID as *const _
                as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).Password as *const _ as usize
        },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).InstallID as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).OrderLocalID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).TraderConnectStatus as *const _
                as usize
        },
        101usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(TraderConnectStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).ConnectRequestDate as *const _
                as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(ConnectRequestDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).ConnectRequestTime as *const _
                as usize
        },
        111usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(ConnectRequestTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).LastReportDate as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(LastReportDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).LastReportTime as *const _
                as usize
        },
        129usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(LastReportTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).ConnectDate as *const _ as usize
        },
        138usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(ConnectDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).ConnectTime as *const _ as usize
        },
        147usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(ConnectTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).StartDate as *const _ as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(StartDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).StartTime as *const _ as usize
        },
        165usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(StartTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).TradingDay as *const _ as usize
        },
        174usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).BrokerID as *const _ as usize
        },
        183usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).MaxTradeID as *const _ as usize
        },
        194usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(MaxTradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTraderOfferField>())).MaxOrderMessageReference
                as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTraderOfferField),
            "::",
            stringify!(MaxOrderMessageReference)
        )
    );
}
impl Default for CThostFtdcTraderOfferField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcSettlementInfoField {
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub Content: TThostFtdcContentType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSettlementInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSettlementInfoField>(),
        564usize,
        concat!("Size of: ", stringify!(CThostFtdcSettlementInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSettlementInfoField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcSettlementInfoField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).TradingDay as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).SettlementID as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).InvestorID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).SequenceNo as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).Content as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(Content)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).AccountID as *const _ as usize
        },
        545usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoField>())).CurrencyID as *const _
                as usize
        },
        558usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
impl Default for CThostFtdcSettlementInfoField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentMarginRateAdjustField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub LongMarginRatioByMoney: TThostFtdcRatioType,
    pub LongMarginRatioByVolume: TThostFtdcMoneyType,
    pub ShortMarginRatioByMoney: TThostFtdcRatioType,
    pub ShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub IsRelative: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentMarginRateAdjustField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentMarginRateAdjustField>(),
        104usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentMarginRateAdjustField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>())).BrokerID
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>())).HedgeFlag
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>()))
                .LongMarginRatioByMoney as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(LongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>()))
                .LongMarginRatioByVolume as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(LongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>()))
                .ShortMarginRatioByMoney as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(ShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>()))
                .ShortMarginRatioByVolume as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(ShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateAdjustField>())).IsRelative
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateAdjustField),
            "::",
            stringify!(IsRelative)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeMarginRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub LongMarginRatioByMoney: TThostFtdcRatioType,
    pub LongMarginRatioByVolume: TThostFtdcMoneyType,
    pub ShortMarginRatioByMoney: TThostFtdcRatioType,
    pub ShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeMarginRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeMarginRateField>(),
        96usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeMarginRateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeMarginRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeMarginRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).InstrumentID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).HedgeFlag as *const _
                as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).LongMarginRatioByMoney
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(LongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).LongMarginRatioByVolume
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(LongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).ShortMarginRatioByMoney
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(ShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).ShortMarginRatioByVolume
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(ShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateField>())).ExchangeID as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeMarginRateAdjustField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub LongMarginRatioByMoney: TThostFtdcRatioType,
    pub LongMarginRatioByVolume: TThostFtdcMoneyType,
    pub ShortMarginRatioByMoney: TThostFtdcRatioType,
    pub ShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub ExchLongMarginRatioByMoney: TThostFtdcRatioType,
    pub ExchLongMarginRatioByVolume: TThostFtdcMoneyType,
    pub ExchShortMarginRatioByMoney: TThostFtdcRatioType,
    pub ExchShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub NoLongMarginRatioByMoney: TThostFtdcRatioType,
    pub NoLongMarginRatioByVolume: TThostFtdcMoneyType,
    pub NoShortMarginRatioByMoney: TThostFtdcRatioType,
    pub NoShortMarginRatioByVolume: TThostFtdcMoneyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeMarginRateAdjustField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeMarginRateAdjustField>(),
        144usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeMarginRateAdjustField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>())).InstrumentID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>())).HedgeFlag
                as *const _ as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .LongMarginRatioByMoney as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(LongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .LongMarginRatioByVolume as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(LongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .ShortMarginRatioByMoney as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(ShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .ShortMarginRatioByVolume as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(ShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .ExchLongMarginRatioByMoney as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(ExchLongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .ExchLongMarginRatioByVolume as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(ExchLongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .ExchShortMarginRatioByMoney as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(ExchShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .ExchShortMarginRatioByVolume as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(ExchShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .NoLongMarginRatioByMoney as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(NoLongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .NoLongMarginRatioByVolume as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(NoLongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .NoShortMarginRatioByMoney as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(NoShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeMarginRateAdjustField>()))
                .NoShortMarginRatioByVolume as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeMarginRateAdjustField),
            "::",
            stringify!(NoShortMarginRatioByVolume)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub FromCurrencyID: TThostFtdcCurrencyIDType,
    pub FromCurrencyUnit: TThostFtdcCurrencyUnitType,
    pub ToCurrencyID: TThostFtdcCurrencyIDType,
    pub ExchangeRate: TThostFtdcExchangeRateType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeRateField>(),
        40usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeRateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeRateField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcExchangeRateField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeRateField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeRateField>())).FromCurrencyID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeRateField),
            "::",
            stringify!(FromCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeRateField>())).FromCurrencyUnit as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeRateField),
            "::",
            stringify!(FromCurrencyUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeRateField>())).ToCurrencyID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeRateField),
            "::",
            stringify!(ToCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeRateField>())).ExchangeRate as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeRateField),
            "::",
            stringify!(ExchangeRate)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSettlementRefField {
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSettlementRefField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSettlementRefField>(),
        16usize,
        concat!("Size of: ", stringify!(CThostFtdcSettlementRefField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSettlementRefField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcSettlementRefField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementRefField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementRefField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementRefField>())).SettlementID as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementRefField),
            "::",
            stringify!(SettlementID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCurrentTimeField {
    pub CurrDate: TThostFtdcDateType,
    pub CurrTime: TThostFtdcTimeType,
    pub CurrMillisec: TThostFtdcMillisecType,
    pub ActionDay: TThostFtdcDateType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCurrentTimeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCurrentTimeField>(),
        36usize,
        concat!("Size of: ", stringify!(CThostFtdcCurrentTimeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCurrentTimeField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcCurrentTimeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCurrentTimeField>())).CurrDate as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCurrentTimeField),
            "::",
            stringify!(CurrDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCurrentTimeField>())).CurrTime as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCurrentTimeField),
            "::",
            stringify!(CurrTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCurrentTimeField>())).CurrMillisec as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCurrentTimeField),
            "::",
            stringify!(CurrMillisec)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCurrentTimeField>())).ActionDay as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCurrentTimeField),
            "::",
            stringify!(ActionDay)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCommPhaseField {
    pub TradingDay: TThostFtdcDateType,
    pub CommPhaseNo: TThostFtdcCommPhaseNoType,
    pub SystemID: TThostFtdcSystemIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCommPhaseField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCommPhaseField>(),
        34usize,
        concat!("Size of: ", stringify!(CThostFtdcCommPhaseField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCommPhaseField>(),
        2usize,
        concat!("Alignment of ", stringify!(CThostFtdcCommPhaseField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCommPhaseField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCommPhaseField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCommPhaseField>())).CommPhaseNo as *const _ as usize
        },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCommPhaseField),
            "::",
            stringify!(CommPhaseNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCommPhaseField>())).SystemID as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCommPhaseField),
            "::",
            stringify!(SystemID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcLoginInfoField {
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub LoginDate: TThostFtdcDateType,
    pub LoginTime: TThostFtdcTimeType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub InterfaceProductInfo: TThostFtdcProductInfoType,
    pub ProtocolInfo: TThostFtdcProtocolInfoType,
    pub SystemName: TThostFtdcSystemNameType,
    pub PasswordDeprecated: TThostFtdcPasswordType,
    pub MaxOrderRef: TThostFtdcOrderRefType,
    pub SHFETime: TThostFtdcTimeType,
    pub DCETime: TThostFtdcTimeType,
    pub CZCETime: TThostFtdcTimeType,
    pub FFEXTime: TThostFtdcTimeType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub OneTimePassword: TThostFtdcPasswordType,
    pub INETime: TThostFtdcTimeType,
    pub IsQryControl: TThostFtdcBoolType,
    pub LoginRemark: TThostFtdcLoginRemarkType,
    pub Password: TThostFtdcPasswordType,
}
#[test]
fn bindgen_test_layout_CThostFtdcLoginInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcLoginInfoField>(),
        388usize,
        concat!("Size of: ", stringify!(CThostFtdcLoginInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcLoginInfoField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcLoginInfoField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).FrontID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).SessionID as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).BrokerID as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).UserID as *const _ as usize },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).LoginDate as *const _ as usize
        },
        35usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(LoginDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).LoginTime as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(LoginTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).IPAddress as *const _ as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).UserProductInfo as *const _
                as usize
        },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).InterfaceProductInfo as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(InterfaceProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).ProtocolInfo as *const _ as usize
        },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(ProtocolInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).SystemName as *const _ as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(SystemName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).PasswordDeprecated as *const _
                as usize
        },
        143usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(PasswordDeprecated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).MaxOrderRef as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(MaxOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).SHFETime as *const _ as usize
        },
        197usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(SHFETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).DCETime as *const _ as usize
        },
        206usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(DCETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).CZCETime as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(CZCETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).FFEXTime as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(FFEXTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).MacAddress as *const _ as usize
        },
        233usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).OneTimePassword as *const _
                as usize
        },
        254usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(OneTimePassword)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).INETime as *const _ as usize
        },
        295usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(INETime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).IsQryControl as *const _ as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(IsQryControl)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).LoginRemark as *const _ as usize
        },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(LoginRemark)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginInfoField>())).Password as *const _ as usize
        },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginInfoField),
            "::",
            stringify!(Password)
        )
    );
}
impl Default for CThostFtdcLoginInfoField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcLogoutAllField {
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub SystemName: TThostFtdcSystemNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcLogoutAllField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcLogoutAllField>(),
        52usize,
        concat!("Size of: ", stringify!(CThostFtdcLogoutAllField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcLogoutAllField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcLogoutAllField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLogoutAllField>())).FrontID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLogoutAllField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLogoutAllField>())).SessionID as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLogoutAllField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLogoutAllField>())).SystemName as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLogoutAllField),
            "::",
            stringify!(SystemName)
        )
    );
}
impl Default for CThostFtdcLogoutAllField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcFrontStatusField {
    pub FrontID: TThostFtdcFrontIDType,
    pub LastReportDate: TThostFtdcDateType,
    pub LastReportTime: TThostFtdcTimeType,
    pub IsActive: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcFrontStatusField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcFrontStatusField>(),
        28usize,
        concat!("Size of: ", stringify!(CThostFtdcFrontStatusField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcFrontStatusField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcFrontStatusField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFrontStatusField>())).FrontID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFrontStatusField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFrontStatusField>())).LastReportDate as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFrontStatusField),
            "::",
            stringify!(LastReportDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFrontStatusField>())).LastReportTime as *const _
                as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFrontStatusField),
            "::",
            stringify!(LastReportTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFrontStatusField>())).IsActive as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFrontStatusField),
            "::",
            stringify!(IsActive)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcUserPasswordUpdateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub OldPassword: TThostFtdcPasswordType,
    pub NewPassword: TThostFtdcPasswordType,
}
#[test]
fn bindgen_test_layout_CThostFtdcUserPasswordUpdateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcUserPasswordUpdateField>(),
        109usize,
        concat!("Size of: ", stringify!(CThostFtdcUserPasswordUpdateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcUserPasswordUpdateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcUserPasswordUpdateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserPasswordUpdateField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserPasswordUpdateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserPasswordUpdateField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserPasswordUpdateField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserPasswordUpdateField>())).OldPassword as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserPasswordUpdateField),
            "::",
            stringify!(OldPassword)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserPasswordUpdateField>())).NewPassword as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserPasswordUpdateField),
            "::",
            stringify!(NewPassword)
        )
    );
}
impl Default for CThostFtdcUserPasswordUpdateField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub OrderPriceType: TThostFtdcOrderPriceTypeType,
    pub Direction: TThostFtdcDirectionType,
    pub CombOffsetFlag: TThostFtdcCombOffsetFlagType,
    pub CombHedgeFlag: TThostFtdcCombHedgeFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeTotalOriginal: TThostFtdcVolumeType,
    pub TimeCondition: TThostFtdcTimeConditionType,
    pub GTDDate: TThostFtdcDateType,
    pub VolumeCondition: TThostFtdcVolumeConditionType,
    pub MinVolume: TThostFtdcVolumeType,
    pub ContingentCondition: TThostFtdcContingentConditionType,
    pub StopPrice: TThostFtdcPriceType,
    pub ForceCloseReason: TThostFtdcForceCloseReasonType,
    pub IsAutoSuspend: TThostFtdcBoolType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub RequestID: TThostFtdcRequestIDType,
    pub UserForceClose: TThostFtdcBoolType,
    pub IsSwapOrder: TThostFtdcBoolType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputOrderField>(),
        272usize,
        concat!("Size of: ", stringify!(CThostFtdcInputOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputOrderField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcInputOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).OrderRef as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).OrderPriceType as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(OrderPriceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).Direction as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).CombOffsetFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(CombOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).CombHedgeFlag as *const _ as usize
        },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(CombHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).LimitPrice as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).VolumeTotalOriginal as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(VolumeTotalOriginal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).TimeCondition as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(TimeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).GTDDate as *const _ as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(GTDDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).VolumeCondition as *const _
                as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(VolumeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).MinVolume as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(MinVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).ContingentCondition as *const _
                as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(ContingentCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).StopPrice as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(StopPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).ForceCloseReason as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(ForceCloseReason)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).IsAutoSuspend as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(IsAutoSuspend)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).BusinessUnit as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).RequestID as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).UserForceClose as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(UserForceClose)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).IsSwapOrder as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(IsSwapOrder)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).ExchangeID as *const _ as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).InvestUnitID as *const _ as usize
        },
        189usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).AccountID as *const _ as usize
        },
        206usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).CurrencyID as *const _ as usize
        },
        219usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).ClientID as *const _ as usize
        },
        223usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).IPAddress as *const _ as usize
        },
        234usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderField>())).MacAddress as *const _ as usize
        },
        250usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub OrderPriceType: TThostFtdcOrderPriceTypeType,
    pub Direction: TThostFtdcDirectionType,
    pub CombOffsetFlag: TThostFtdcCombOffsetFlagType,
    pub CombHedgeFlag: TThostFtdcCombHedgeFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeTotalOriginal: TThostFtdcVolumeType,
    pub TimeCondition: TThostFtdcTimeConditionType,
    pub GTDDate: TThostFtdcDateType,
    pub VolumeCondition: TThostFtdcVolumeConditionType,
    pub MinVolume: TThostFtdcVolumeType,
    pub ContingentCondition: TThostFtdcContingentConditionType,
    pub StopPrice: TThostFtdcPriceType,
    pub ForceCloseReason: TThostFtdcForceCloseReasonType,
    pub IsAutoSuspend: TThostFtdcBoolType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub RequestID: TThostFtdcRequestIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub OrderSource: TThostFtdcOrderSourceType,
    pub OrderStatus: TThostFtdcOrderStatusType,
    pub OrderType: TThostFtdcOrderTypeType,
    pub VolumeTraded: TThostFtdcVolumeType,
    pub VolumeTotal: TThostFtdcVolumeType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub ActiveTime: TThostFtdcTimeType,
    pub SuspendTime: TThostFtdcTimeType,
    pub UpdateTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub ActiveTraderID: TThostFtdcTraderIDType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub UserForceClose: TThostFtdcBoolType,
    pub ActiveUserID: TThostFtdcUserIDType,
    pub BrokerOrderSeq: TThostFtdcSequenceNoType,
    pub RelativeOrderSysID: TThostFtdcOrderSysIDType,
    pub ZCETotalTradedVolume: TThostFtdcVolumeType,
    pub IsSwapOrder: TThostFtdcBoolType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOrderField>(),
        656usize,
        concat!("Size of: ", stringify!(CThostFtdcOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOrderField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcOrderField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).BrokerID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).InvestorID as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderRef as *const _ as usize },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).UserID as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderPriceType as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderPriceType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).Direction as *const _ as usize },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).CombOffsetFlag as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(CombOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).CombHedgeFlag as *const _ as usize
        },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(CombHedgeFlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).LimitPrice as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).VolumeTotalOriginal as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(VolumeTotalOriginal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).TimeCondition as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(TimeCondition)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).GTDDate as *const _ as usize },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(GTDDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).VolumeCondition as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(VolumeCondition)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).MinVolume as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(MinVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ContingentCondition as *const _
                as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ContingentCondition)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).StopPrice as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(StopPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ForceCloseReason as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ForceCloseReason)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).IsAutoSuspend as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(IsAutoSuspend)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).BusinessUnit as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).RequestID as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderLocalID as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).ExchangeID as *const _ as usize },
        185usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ParticipantID as *const _ as usize
        },
        194usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).ClientID as *const _ as usize },
        205usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ExchangeInstID as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).TraderID as *const _ as usize },
        247usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).InstallID as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderSubmitStatus as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).NotifySequence as *const _ as usize
        },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).TradingDay as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).SettlementID as *const _ as usize
        },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderSysID as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderSource as *const _ as usize
        },
        317usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderSource)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderStatus as *const _ as usize
        },
        318usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderStatus)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).OrderType as *const _ as usize },
        319usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(OrderType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).VolumeTraded as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(VolumeTraded)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).VolumeTotal as *const _ as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(VolumeTotal)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).InsertDate as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).InsertTime as *const _ as usize },
        337usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).ActiveTime as *const _ as usize },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ActiveTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).SuspendTime as *const _ as usize
        },
        355usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(SuspendTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).UpdateTime as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(UpdateTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).CancelTime as *const _ as usize },
        373usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ActiveTraderID as *const _ as usize
        },
        382usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ActiveTraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ClearingPartID as *const _ as usize
        },
        403usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).SequenceNo as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).FrontID as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).SessionID as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).UserProductInfo as *const _ as usize
        },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).StatusMsg as *const _ as usize },
        439usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).UserForceClose as *const _ as usize
        },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(UserForceClose)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ActiveUserID as *const _ as usize
        },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ActiveUserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).BrokerOrderSeq as *const _ as usize
        },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(BrokerOrderSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).RelativeOrderSysID as *const _ as usize
        },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(RelativeOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).ZCETotalTradedVolume as *const _
                as usize
        },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(ZCETotalTradedVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).IsSwapOrder as *const _ as usize
        },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(IsSwapOrder)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).BranchID as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderField>())).InvestUnitID as *const _ as usize
        },
        585usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).AccountID as *const _ as usize },
        602usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).CurrencyID as *const _ as usize },
        615usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).IPAddress as *const _ as usize },
        619usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOrderField>())).MacAddress as *const _ as usize },
        635usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcOrderField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeOrderField {
    pub OrderPriceType: TThostFtdcOrderPriceTypeType,
    pub Direction: TThostFtdcDirectionType,
    pub CombOffsetFlag: TThostFtdcCombOffsetFlagType,
    pub CombHedgeFlag: TThostFtdcCombHedgeFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeTotalOriginal: TThostFtdcVolumeType,
    pub TimeCondition: TThostFtdcTimeConditionType,
    pub GTDDate: TThostFtdcDateType,
    pub VolumeCondition: TThostFtdcVolumeConditionType,
    pub MinVolume: TThostFtdcVolumeType,
    pub ContingentCondition: TThostFtdcContingentConditionType,
    pub StopPrice: TThostFtdcPriceType,
    pub ForceCloseReason: TThostFtdcForceCloseReasonType,
    pub IsAutoSuspend: TThostFtdcBoolType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub RequestID: TThostFtdcRequestIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub OrderSource: TThostFtdcOrderSourceType,
    pub OrderStatus: TThostFtdcOrderStatusType,
    pub OrderType: TThostFtdcOrderTypeType,
    pub VolumeTraded: TThostFtdcVolumeType,
    pub VolumeTotal: TThostFtdcVolumeType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub ActiveTime: TThostFtdcTimeType,
    pub SuspendTime: TThostFtdcTimeType,
    pub UpdateTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub ActiveTraderID: TThostFtdcTraderIDType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub BranchID: TThostFtdcBranchIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeOrderField>(),
        392usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeOrderField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcExchangeOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).OrderPriceType as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(OrderPriceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).Direction as *const _ as usize
        },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).CombOffsetFlag as *const _
                as usize
        },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(CombOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).CombHedgeFlag as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(CombHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).LimitPrice as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).VolumeTotalOriginal as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(VolumeTotalOriginal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).TimeCondition as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(TimeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).GTDDate as *const _ as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(GTDDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).VolumeCondition as *const _
                as usize
        },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(VolumeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).MinVolume as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(MinVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ContingentCondition as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ContingentCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).StopPrice as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(StopPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ForceCloseReason as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ForceCloseReason)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).IsAutoSuspend as *const _
                as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(IsAutoSuspend)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).BusinessUnit as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).RequestID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).OrderLocalID as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ExchangeID as *const _ as usize
        },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ParticipantID as *const _
                as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ClientID as *const _ as usize
        },
        125usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ExchangeInstID as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).TraderID as *const _ as usize
        },
        167usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).InstallID as *const _ as usize
        },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).OrderSubmitStatus as *const _
                as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).NotifySequence as *const _
                as usize
        },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).TradingDay as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).SettlementID as *const _
                as usize
        },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).OrderSysID as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).OrderSource as *const _
                as usize
        },
        237usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(OrderSource)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).OrderStatus as *const _
                as usize
        },
        238usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(OrderStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).OrderType as *const _ as usize
        },
        239usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(OrderType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).VolumeTraded as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(VolumeTraded)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).VolumeTotal as *const _
                as usize
        },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(VolumeTotal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).InsertDate as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).InsertTime as *const _ as usize
        },
        257usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ActiveTime as *const _ as usize
        },
        266usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ActiveTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).SuspendTime as *const _
                as usize
        },
        275usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(SuspendTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).UpdateTime as *const _ as usize
        },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(UpdateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).CancelTime as *const _ as usize
        },
        293usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ActiveTraderID as *const _
                as usize
        },
        302usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ActiveTraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).ClearingPartID as *const _
                as usize
        },
        323usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).SequenceNo as *const _ as usize
        },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).BranchID as *const _ as usize
        },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).IPAddress as *const _ as usize
        },
        349usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderField>())).MacAddress as *const _ as usize
        },
        365usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcExchangeOrderInsertErrorField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeOrderInsertErrorField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeOrderInsertErrorField>(),
        152usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeOrderInsertErrorField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderInsertErrorField>())).ExchangeID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderInsertErrorField>())).ParticipantID
                as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderInsertErrorField>())).TraderID as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderInsertErrorField>())).InstallID
                as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderInsertErrorField>())).OrderLocalID
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderInsertErrorField>())).ErrorID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderInsertErrorField>())).ErrorMsg as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderInsertErrorField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcExchangeOrderInsertErrorField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OrderActionRef: TThostFtdcOrderActionRefType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeChange: TThostFtdcVolumeType,
    pub UserID: TThostFtdcUserIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputOrderActionField>(),
        208usize,
        concat!("Size of: ", stringify!(CThostFtdcInputOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputOrderActionField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcInputOrderActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).OrderActionRef as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(OrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).OrderRef as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).RequestID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).FrontID as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).SessionID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).OrderSysID as *const _
                as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).LimitPrice as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).VolumeChange as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(VolumeChange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).UserID as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).InstrumentID as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        147usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).IPAddress as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOrderActionField>())).MacAddress as *const _
                as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OrderActionRef: TThostFtdcOrderActionRefType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeChange: TThostFtdcVolumeType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOrderActionField>(),
        408usize,
        concat!("Size of: ", stringify!(CThostFtdcOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOrderActionField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcOrderActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).OrderActionRef as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(OrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).OrderRef as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).RequestID as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).FrontID as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).SessionID as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).ExchangeID as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).OrderSysID as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).ActionFlag as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).LimitPrice as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).VolumeChange as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(VolumeChange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).ActionDate as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).ActionTime as *const _ as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).TraderID as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).InstallID as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).OrderLocalID as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).ActionLocalID as *const _
                as usize
        },
        157usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).ParticipantID as *const _
                as usize
        },
        170usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).ClientID as *const _ as usize
        },
        181usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).BusinessUnit as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).OrderActionStatus as *const _
                as usize
        },
        213usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).UserID as *const _ as usize
        },
        214usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).StatusMsg as *const _ as usize
        },
        230usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).InstrumentID as *const _ as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).BranchID as *const _ as usize
        },
        342usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).InvestUnitID as *const _ as usize
        },
        351usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).IPAddress as *const _ as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOrderActionField>())).MacAddress as *const _ as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcOrderActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeOrderActionField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeChange: TThostFtdcVolumeType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeOrderActionField>(),
        224usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeOrderActionField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).OrderSysID as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).ActionFlag as *const _
                as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).LimitPrice as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).VolumeChange as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(VolumeChange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).ActionDate as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).ActionTime as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).TraderID as *const _
                as usize
        },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).InstallID as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).OrderLocalID as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).ActionLocalID as *const _
                as usize
        },
        101usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).ParticipantID as *const _
                as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).ClientID as *const _
                as usize
        },
        125usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).BusinessUnit as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).OrderActionStatus
                as *const _ as usize
        },
        157usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).UserID as *const _
                as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).BranchID as *const _
                as usize
        },
        174usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).IPAddress as *const _
                as usize
        },
        183usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionField>())).MacAddress as *const _
                as usize
        },
        199usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcExchangeOrderActionErrorField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeOrderActionErrorField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeOrderActionErrorField>(),
        172usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeOrderActionErrorField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeOrderActionErrorField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).ExchangeID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).OrderSysID
                as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).TraderID as *const _
                as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).InstallID
                as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).OrderLocalID
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).ActionLocalID
                as *const _ as usize
        },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).ErrorID as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOrderActionErrorField>())).ErrorMsg as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOrderActionErrorField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcExchangeOrderActionErrorField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeTradeField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TradeID: TThostFtdcTradeIDType,
    pub Direction: TThostFtdcDirectionType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub TradingRole: TThostFtdcTradingRoleType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub Price: TThostFtdcPriceType,
    pub Volume: TThostFtdcVolumeType,
    pub TradeDate: TThostFtdcDateType,
    pub TradeTime: TThostFtdcTimeType,
    pub TradeType: TThostFtdcTradeTypeType,
    pub PriceSource: TThostFtdcPriceSourceType,
    pub TraderID: TThostFtdcTraderIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub TradeSource: TThostFtdcTradeSourceType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeTradeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeTradeField>(),
        224usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeTradeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeTradeField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcExchangeTradeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).TradeID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(TradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).Direction as *const _ as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).OrderSysID as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).ParticipantID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).ClientID as *const _ as usize
        },
        63usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).TradingRole as *const _
                as usize
        },
        74usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(TradingRole)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).ExchangeInstID as *const _
                as usize
        },
        75usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).OffsetFlag as *const _ as usize
        },
        106usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).HedgeFlag as *const _ as usize
        },
        107usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).Price as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(Price)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).Volume as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).TradeDate as *const _ as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).TradeTime as *const _ as usize
        },
        133usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).TradeType as *const _ as usize
        },
        142usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(TradeType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).PriceSource as *const _
                as usize
        },
        143usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(PriceSource)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).TraderID as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).OrderLocalID as *const _
                as usize
        },
        165usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).ClearingPartID as *const _
                as usize
        },
        178usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).BusinessUnit as *const _
                as usize
        },
        189usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).SequenceNo as *const _ as usize
        },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeTradeField>())).TradeSource as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeTradeField),
            "::",
            stringify!(TradeSource)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTradeField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TradeID: TThostFtdcTradeIDType,
    pub Direction: TThostFtdcDirectionType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub TradingRole: TThostFtdcTradingRoleType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub Price: TThostFtdcPriceType,
    pub Volume: TThostFtdcVolumeType,
    pub TradeDate: TThostFtdcDateType,
    pub TradeTime: TThostFtdcTimeType,
    pub TradeType: TThostFtdcTradeTypeType,
    pub PriceSource: TThostFtdcPriceSourceType,
    pub TraderID: TThostFtdcTraderIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub BrokerOrderSeq: TThostFtdcSequenceNoType,
    pub TradeSource: TThostFtdcTradeSourceType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradeField>(),
        336usize,
        concat!("Size of: ", stringify!(CThostFtdcTradeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradeField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcTradeField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).BrokerID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).InvestorID as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).OrderRef as *const _ as usize },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).UserID as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).ExchangeID as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).TradeID as *const _ as usize },
        93usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TradeID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).Direction as *const _ as usize },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).OrderSysID as *const _ as usize },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).ParticipantID as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).ClientID as *const _ as usize },
        147usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).TradingRole as *const _ as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TradingRole)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).ExchangeInstID as *const _ as usize
        },
        159usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).OffsetFlag as *const _ as usize },
        190usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).HedgeFlag as *const _ as usize },
        191usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).Price as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(Price)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).Volume as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).TradeDate as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).TradeTime as *const _ as usize },
        213usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).TradeType as *const _ as usize },
        222usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TradeType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).PriceSource as *const _ as usize
        },
        223usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(PriceSource)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).TraderID as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).OrderLocalID as *const _ as usize
        },
        245usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).ClearingPartID as *const _ as usize
        },
        258usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).BusinessUnit as *const _ as usize
        },
        269usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).SequenceNo as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeField>())).TradingDay as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).SettlementID as *const _ as usize
        },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).BrokerOrderSeq as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(BrokerOrderSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).TradeSource as *const _ as usize
        },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(TradeSource)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeField>())).InvestUnitID as *const _ as usize
        },
        317usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcUserSessionField {
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub LoginDate: TThostFtdcDateType,
    pub LoginTime: TThostFtdcTimeType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub InterfaceProductInfo: TThostFtdcProductInfoType,
    pub ProtocolInfo: TThostFtdcProtocolInfoType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub LoginRemark: TThostFtdcLoginRemarkType,
}
#[test]
fn bindgen_test_layout_CThostFtdcUserSessionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcUserSessionField>(),
        160usize,
        concat!("Size of: ", stringify!(CThostFtdcUserSessionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcUserSessionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcUserSessionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).FrontID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).SessionID as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).BrokerID as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).UserID as *const _ as usize
        },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).LoginDate as *const _ as usize
        },
        35usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(LoginDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).LoginTime as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(LoginTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).IPAddress as *const _ as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).UserProductInfo as *const _
                as usize
        },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).InterfaceProductInfo as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(InterfaceProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).ProtocolInfo as *const _ as usize
        },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(ProtocolInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).MacAddress as *const _ as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserSessionField>())).LoginRemark as *const _ as usize
        },
        123usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserSessionField),
            "::",
            stringify!(LoginRemark)
        )
    );
}
impl Default for CThostFtdcUserSessionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQueryMaxOrderVolumeField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub Direction: TThostFtdcDirectionType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub MaxVolume: TThostFtdcVolumeType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQueryMaxOrderVolumeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQueryMaxOrderVolumeField>(),
        92usize,
        concat!("Size of: ", stringify!(CThostFtdcQueryMaxOrderVolumeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQueryMaxOrderVolumeField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).Direction as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).OffsetFlag as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).HedgeFlag as *const _
                as usize
        },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).MaxVolume as *const _
                as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(MaxVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).ExchangeID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeField>())).InvestUnitID as *const _
                as usize
        },
        73usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSettlementInfoConfirmField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ConfirmDate: TThostFtdcDateType,
    pub ConfirmTime: TThostFtdcTimeType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSettlementInfoConfirmField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSettlementInfoConfirmField>(),
        68usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcSettlementInfoConfirmField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSettlementInfoConfirmField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSettlementInfoConfirmField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoConfirmField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoConfirmField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoConfirmField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoConfirmField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoConfirmField>())).ConfirmDate as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoConfirmField),
            "::",
            stringify!(ConfirmDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoConfirmField>())).ConfirmTime as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoConfirmField),
            "::",
            stringify!(ConfirmTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoConfirmField>())).SettlementID
                as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoConfirmField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoConfirmField>())).AccountID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoConfirmField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSettlementInfoConfirmField>())).CurrencyID as *const _
                as usize
        },
        61usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSettlementInfoConfirmField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncDepositField {
    pub DepositSeqNo: TThostFtdcDepositSeqNoType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub Deposit: TThostFtdcMoneyType,
    pub IsForce: TThostFtdcBoolType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncDepositField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncDepositField>(),
        56usize,
        concat!("Size of: ", stringify!(CThostFtdcSyncDepositField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncDepositField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcSyncDepositField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDepositField>())).DepositSeqNo as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDepositField),
            "::",
            stringify!(DepositSeqNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDepositField>())).BrokerID as *const _ as usize
        },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDepositField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDepositField>())).InvestorID as *const _ as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDepositField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDepositField>())).Deposit as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDepositField),
            "::",
            stringify!(Deposit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDepositField>())).IsForce as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDepositField),
            "::",
            stringify!(IsForce)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDepositField>())).CurrencyID as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDepositField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncFundMortgageField {
    pub MortgageSeqNo: TThostFtdcDepositSeqNoType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub FromCurrencyID: TThostFtdcCurrencyIDType,
    pub MortgageAmount: TThostFtdcMoneyType,
    pub ToCurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncFundMortgageField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncFundMortgageField>(),
        64usize,
        concat!("Size of: ", stringify!(CThostFtdcSyncFundMortgageField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncFundMortgageField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcSyncFundMortgageField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncFundMortgageField>())).MortgageSeqNo as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncFundMortgageField),
            "::",
            stringify!(MortgageSeqNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncFundMortgageField>())).BrokerID as *const _
                as usize
        },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncFundMortgageField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncFundMortgageField>())).InvestorID as *const _
                as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncFundMortgageField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncFundMortgageField>())).FromCurrencyID as *const _
                as usize
        },
        39usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncFundMortgageField),
            "::",
            stringify!(FromCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncFundMortgageField>())).MortgageAmount as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncFundMortgageField),
            "::",
            stringify!(MortgageAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncFundMortgageField>())).ToCurrencyID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncFundMortgageField),
            "::",
            stringify!(ToCurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcBrokerSyncField {
    pub BrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerSyncField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerSyncField>(),
        11usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerSyncField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerSyncField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcBrokerSyncField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerSyncField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerSyncField),
            "::",
            stringify!(BrokerID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcSyncingInvestorField {
    pub InvestorID: TThostFtdcInvestorIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorGroupID: TThostFtdcInvestorIDType,
    pub InvestorName: TThostFtdcPartyNameType,
    pub IdentifiedCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub IsActive: TThostFtdcBoolType,
    pub Telephone: TThostFtdcTelephoneType,
    pub Address: TThostFtdcAddressType,
    pub OpenDate: TThostFtdcDateType,
    pub Mobile: TThostFtdcMobileType,
    pub CommModelID: TThostFtdcInvestorIDType,
    pub MarginModelID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingInvestorField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingInvestorField>(),
        396usize,
        concat!("Size of: ", stringify!(CThostFtdcSyncingInvestorField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingInvestorField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcSyncingInvestorField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).InvestorID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).BrokerID as *const _ as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).InvestorGroupID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(InvestorGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).InvestorName as *const _
                as usize
        },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(InvestorName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).IdentifiedCardType
                as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(IdentifiedCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).IdentifiedCardNo as *const _
                as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).IsActive as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(IsActive)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).Telephone as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).Address as *const _ as usize
        },
        217usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).OpenDate as *const _ as usize
        },
        318usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(OpenDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).Mobile as *const _ as usize
        },
        327usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(Mobile)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).CommModelID as *const _
                as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(CommModelID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorField>())).MarginModelID as *const _
                as usize
        },
        381usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorField),
            "::",
            stringify!(MarginModelID)
        )
    );
}
impl Default for CThostFtdcSyncingInvestorField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncingTradingCodeField {
    pub InvestorID: TThostFtdcInvestorIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IsActive: TThostFtdcBoolType,
    pub ClientIDType: TThostFtdcClientIDTypeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingTradingCodeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingTradingCodeField>(),
        52usize,
        concat!("Size of: ", stringify!(CThostFtdcSyncingTradingCodeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingTradingCodeField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSyncingTradingCodeField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingCodeField>())).InvestorID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingCodeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingCodeField>())).BrokerID as *const _
                as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingCodeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingCodeField>())).ExchangeID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingCodeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingCodeField>())).ClientID as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingCodeField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingCodeField>())).IsActive as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingCodeField),
            "::",
            stringify!(IsActive)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingCodeField>())).ClientIDType as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingCodeField),
            "::",
            stringify!(ClientIDType)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcSyncingInvestorGroupField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorGroupID: TThostFtdcInvestorIDType,
    pub InvestorGroupName: TThostFtdcInvestorGroupNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingInvestorGroupField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingInvestorGroupField>(),
        65usize,
        concat!("Size of: ", stringify!(CThostFtdcSyncingInvestorGroupField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingInvestorGroupField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSyncingInvestorGroupField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorGroupField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorGroupField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorGroupField>())).InvestorGroupID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorGroupField),
            "::",
            stringify!(InvestorGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorGroupField>())).InvestorGroupName
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorGroupField),
            "::",
            stringify!(InvestorGroupName)
        )
    );
}
impl Default for CThostFtdcSyncingInvestorGroupField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncingTradingAccountField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub PreMortgage: TThostFtdcMoneyType,
    pub PreCredit: TThostFtdcMoneyType,
    pub PreDeposit: TThostFtdcMoneyType,
    pub PreBalance: TThostFtdcMoneyType,
    pub PreMargin: TThostFtdcMoneyType,
    pub InterestBase: TThostFtdcMoneyType,
    pub Interest: TThostFtdcMoneyType,
    pub Deposit: TThostFtdcMoneyType,
    pub Withdraw: TThostFtdcMoneyType,
    pub FrozenMargin: TThostFtdcMoneyType,
    pub FrozenCash: TThostFtdcMoneyType,
    pub FrozenCommission: TThostFtdcMoneyType,
    pub CurrMargin: TThostFtdcMoneyType,
    pub CashIn: TThostFtdcMoneyType,
    pub Commission: TThostFtdcMoneyType,
    pub CloseProfit: TThostFtdcMoneyType,
    pub PositionProfit: TThostFtdcMoneyType,
    pub Balance: TThostFtdcMoneyType,
    pub Available: TThostFtdcMoneyType,
    pub WithdrawQuota: TThostFtdcMoneyType,
    pub Reserve: TThostFtdcMoneyType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub Credit: TThostFtdcMoneyType,
    pub Mortgage: TThostFtdcMoneyType,
    pub ExchangeMargin: TThostFtdcMoneyType,
    pub DeliveryMargin: TThostFtdcMoneyType,
    pub ExchangeDeliveryMargin: TThostFtdcMoneyType,
    pub ReserveBalance: TThostFtdcMoneyType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub PreFundMortgageIn: TThostFtdcMoneyType,
    pub PreFundMortgageOut: TThostFtdcMoneyType,
    pub FundMortgageIn: TThostFtdcMoneyType,
    pub FundMortgageOut: TThostFtdcMoneyType,
    pub FundMortgageAvailable: TThostFtdcMoneyType,
    pub MortgageableFund: TThostFtdcMoneyType,
    pub SpecProductMargin: TThostFtdcMoneyType,
    pub SpecProductFrozenMargin: TThostFtdcMoneyType,
    pub SpecProductCommission: TThostFtdcMoneyType,
    pub SpecProductFrozenCommission: TThostFtdcMoneyType,
    pub SpecProductPositionProfit: TThostFtdcMoneyType,
    pub SpecProductCloseProfit: TThostFtdcMoneyType,
    pub SpecProductPositionProfitByAlg: TThostFtdcMoneyType,
    pub SpecProductExchangeMargin: TThostFtdcMoneyType,
    pub FrozenSwap: TThostFtdcMoneyType,
    pub RemainSwap: TThostFtdcMoneyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingTradingAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingTradingAccountField>(),
        392usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcSyncingTradingAccountField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingTradingAccountField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSyncingTradingAccountField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).AccountID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PreMortgage as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PreMortgage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PreCredit as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PreCredit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PreDeposit as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PreDeposit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PreBalance as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PreBalance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PreMargin as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PreMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).InterestBase
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(InterestBase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Interest as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Interest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Deposit as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Deposit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Withdraw as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Withdraw)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).FrozenMargin
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(FrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).FrozenCash as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(FrozenCash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).FrozenCommission
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(FrozenCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).CurrMargin as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(CurrMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).CashIn as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(CashIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Commission as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Commission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).CloseProfit as *const _
                as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(CloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PositionProfit
                as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PositionProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Balance as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Balance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Available as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Available)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).WithdrawQuota
                as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(WithdrawQuota)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Reserve as *const _
                as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Reserve)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).TradingDay as *const _
                as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).SettlementID
                as *const _ as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Credit as *const _
                as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Credit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).Mortgage as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(Mortgage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).ExchangeMargin
                as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(ExchangeMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).DeliveryMargin
                as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(DeliveryMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).ExchangeDeliveryMargin
                as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(ExchangeDeliveryMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).ReserveBalance
                as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(ReserveBalance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).CurrencyID as *const _
                as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PreFundMortgageIn
                as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PreFundMortgageIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).PreFundMortgageOut
                as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(PreFundMortgageOut)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).FundMortgageIn
                as *const _ as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(FundMortgageIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).FundMortgageOut
                as *const _ as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(FundMortgageOut)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).FundMortgageAvailable
                as *const _ as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(FundMortgageAvailable)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).MortgageableFund
                as *const _ as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(MortgageableFund)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).SpecProductMargin
                as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).SpecProductFrozenMargin
                as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductFrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).SpecProductCommission
                as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>()))
                .SpecProductFrozenCommission as *const _ as usize
        },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductFrozenCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>()))
                .SpecProductPositionProfit as *const _ as usize
        },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductPositionProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).SpecProductCloseProfit
                as *const _ as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductCloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>()))
                .SpecProductPositionProfitByAlg as *const _ as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductPositionProfitByAlg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>()))
                .SpecProductExchangeMargin as *const _ as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(SpecProductExchangeMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).FrozenSwap as *const _
                as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(FrozenSwap)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingTradingAccountField>())).RemainSwap as *const _
                as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingTradingAccountField),
            "::",
            stringify!(RemainSwap)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncingInvestorPositionField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub PosiDirection: TThostFtdcPosiDirectionType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub PositionDate: TThostFtdcPositionDateType,
    pub YdPosition: TThostFtdcVolumeType,
    pub Position: TThostFtdcVolumeType,
    pub LongFrozen: TThostFtdcVolumeType,
    pub ShortFrozen: TThostFtdcVolumeType,
    pub LongFrozenAmount: TThostFtdcMoneyType,
    pub ShortFrozenAmount: TThostFtdcMoneyType,
    pub OpenVolume: TThostFtdcVolumeType,
    pub CloseVolume: TThostFtdcVolumeType,
    pub OpenAmount: TThostFtdcMoneyType,
    pub CloseAmount: TThostFtdcMoneyType,
    pub PositionCost: TThostFtdcMoneyType,
    pub PreMargin: TThostFtdcMoneyType,
    pub UseMargin: TThostFtdcMoneyType,
    pub FrozenMargin: TThostFtdcMoneyType,
    pub FrozenCash: TThostFtdcMoneyType,
    pub FrozenCommission: TThostFtdcMoneyType,
    pub CashIn: TThostFtdcMoneyType,
    pub Commission: TThostFtdcMoneyType,
    pub CloseProfit: TThostFtdcMoneyType,
    pub PositionProfit: TThostFtdcMoneyType,
    pub PreSettlementPrice: TThostFtdcPriceType,
    pub SettlementPrice: TThostFtdcPriceType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub OpenCost: TThostFtdcMoneyType,
    pub ExchangeMargin: TThostFtdcMoneyType,
    pub CombPosition: TThostFtdcVolumeType,
    pub CombLongFrozen: TThostFtdcVolumeType,
    pub CombShortFrozen: TThostFtdcVolumeType,
    pub CloseProfitByDate: TThostFtdcMoneyType,
    pub CloseProfitByTrade: TThostFtdcMoneyType,
    pub TodayPosition: TThostFtdcVolumeType,
    pub MarginRateByMoney: TThostFtdcRatioType,
    pub MarginRateByVolume: TThostFtdcRatioType,
    pub StrikeFrozen: TThostFtdcVolumeType,
    pub StrikeFrozenAmount: TThostFtdcMoneyType,
    pub AbandonFrozen: TThostFtdcVolumeType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub YdStrikeFrozen: TThostFtdcVolumeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingInvestorPositionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingInvestorPositionField>(),
        360usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcSyncingInvestorPositionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingInvestorPositionField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSyncingInvestorPositionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).BrokerID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).InvestorID
                as *const _ as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).PosiDirection
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(PosiDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).HedgeFlag as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).PositionDate
                as *const _ as usize
        },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(PositionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).YdPosition
                as *const _ as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(YdPosition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).Position as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(Position)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).LongFrozen
                as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(LongFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).ShortFrozen
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(ShortFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).LongFrozenAmount
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(LongFrozenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).ShortFrozenAmount
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(ShortFrozenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).OpenVolume
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(OpenVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CloseVolume
                as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CloseVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).OpenAmount
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(OpenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CloseAmount
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CloseAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).PositionCost
                as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(PositionCost)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).PreMargin as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(PreMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).UseMargin as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(UseMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).FrozenMargin
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(FrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).FrozenCash
                as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(FrozenCash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).FrozenCommission
                as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(FrozenCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CashIn as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CashIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).Commission
                as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(Commission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CloseProfit
                as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).PositionProfit
                as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(PositionProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).PreSettlementPrice
                as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(PreSettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).SettlementPrice
                as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(SettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).TradingDay
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).SettlementID
                as *const _ as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).OpenCost as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(OpenCost)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).ExchangeMargin
                as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(ExchangeMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CombPosition
                as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CombPosition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CombLongFrozen
                as *const _ as usize
        },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CombLongFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CombShortFrozen
                as *const _ as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CombShortFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CloseProfitByDate
                as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CloseProfitByDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).CloseProfitByTrade
                as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(CloseProfitByTrade)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).TodayPosition
                as *const _ as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(TodayPosition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).MarginRateByMoney
                as *const _ as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(MarginRateByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).MarginRateByVolume
                as *const _ as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(MarginRateByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).StrikeFrozen
                as *const _ as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(StrikeFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).StrikeFrozenAmount
                as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(StrikeFrozenAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).AbandonFrozen
                as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(AbandonFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).ExchangeID
                as *const _ as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).YdStrikeFrozen
                as *const _ as usize
        },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(YdStrikeFrozen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInvestorPositionField>())).InvestUnitID
                as *const _ as usize
        },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInvestorPositionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncingInstrumentMarginRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub LongMarginRatioByMoney: TThostFtdcRatioType,
    pub LongMarginRatioByVolume: TThostFtdcMoneyType,
    pub ShortMarginRatioByMoney: TThostFtdcRatioType,
    pub ShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub IsRelative: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingInstrumentMarginRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingInstrumentMarginRateField>(),
        104usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingInstrumentMarginRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>())).BrokerID
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>())).HedgeFlag
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>()))
                .LongMarginRatioByMoney as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(LongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>()))
                .LongMarginRatioByVolume as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(LongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>()))
                .ShortMarginRatioByMoney as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(ShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>()))
                .ShortMarginRatioByVolume as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(ShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentMarginRateField>())).IsRelative
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentMarginRateField),
            "::",
            stringify!(IsRelative)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncingInstrumentCommissionRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OpenRatioByMoney: TThostFtdcRatioType,
    pub OpenRatioByVolume: TThostFtdcRatioType,
    pub CloseRatioByMoney: TThostFtdcRatioType,
    pub CloseRatioByVolume: TThostFtdcRatioType,
    pub CloseTodayRatioByMoney: TThostFtdcRatioType,
    pub CloseTodayRatioByVolume: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingInstrumentCommissionRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingInstrumentCommissionRateField>(),
        104usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingInstrumentCommissionRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>())).BrokerID
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>()))
                .OpenRatioByMoney as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(OpenRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>()))
                .OpenRatioByVolume as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(OpenRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>()))
                .CloseRatioByMoney as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(CloseRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>()))
                .CloseRatioByVolume as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(CloseRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>()))
                .CloseTodayRatioByMoney as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(CloseTodayRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentCommissionRateField>()))
                .CloseTodayRatioByVolume as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentCommissionRateField),
            "::",
            stringify!(CloseTodayRatioByVolume)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncingInstrumentTradingRightField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub TradingRight: TThostFtdcTradingRightType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncingInstrumentTradingRightField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncingInstrumentTradingRightField>(),
        57usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcSyncingInstrumentTradingRightField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncingInstrumentTradingRightField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSyncingInstrumentTradingRightField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentTradingRightField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentTradingRightField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentTradingRightField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentTradingRightField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentTradingRightField>())).BrokerID
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentTradingRightField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentTradingRightField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentTradingRightField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncingInstrumentTradingRightField>())).TradingRight
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncingInstrumentTradingRightField),
            "::",
            stringify!(TradingRight)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub InsertTimeStart: TThostFtdcTimeType,
    pub InsertTimeEnd: TThostFtdcTimeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryOrderField>(),
        120usize,
        concat!("Size of: ", stringify!(CThostFtdcQryOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryOrderField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).ExchangeID as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).OrderSysID as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).InsertTimeStart as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(InsertTimeStart)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).InsertTimeEnd as *const _ as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(InsertTimeEnd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderField>())).InvestUnitID as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTradeField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TradeID: TThostFtdcTradeIDType,
    pub TradeTimeStart: TThostFtdcTimeType,
    pub TradeTimeEnd: TThostFtdcTimeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTradeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTradeField>(),
        120usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTradeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTradeField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryTradeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).ExchangeID as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).TradeID as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(TradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).TradeTimeStart as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(TradeTimeStart)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).TradeTimeEnd as *const _ as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(TradeTimeEnd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradeField>())).InvestUnitID as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradeField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInvestorPositionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInvestorPositionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInvestorPositionField>(),
        81usize,
        concat!("Size of: ", stringify!(CThostFtdcQryInvestorPositionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInvestorPositionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInvestorPositionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionField>())).ExchangeID as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionField>())).InvestUnitID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTradingAccountField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub BizType: TThostFtdcBizTypeType,
    pub AccountID: TThostFtdcAccountIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTradingAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTradingAccountField>(),
        42usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTradingAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTradingAccountField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryTradingAccountField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingAccountField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingAccountField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingAccountField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingAccountField>())).CurrencyID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingAccountField>())).BizType as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingAccountField),
            "::",
            stringify!(BizType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingAccountField>())).AccountID as *const _
                as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingAccountField),
            "::",
            stringify!(AccountID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInvestorField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInvestorField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInvestorField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryInvestorField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInvestorField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryInvestorField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorField),
            "::",
            stringify!(InvestorID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTradingCodeField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ClientIDType: TThostFtdcClientIDTypeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTradingCodeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTradingCodeField>(),
        62usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTradingCodeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTradingCodeField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryTradingCodeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingCodeField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingCodeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingCodeField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingCodeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingCodeField>())).ExchangeID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingCodeField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingCodeField>())).ClientID as *const _ as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingCodeField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingCodeField>())).ClientIDType as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingCodeField),
            "::",
            stringify!(ClientIDType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingCodeField>())).InvestUnitID as *const _
                as usize
        },
        45usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingCodeField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInvestorGroupField {
    pub BrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInvestorGroupField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInvestorGroupField>(),
        11usize,
        concat!("Size of: ", stringify!(CThostFtdcQryInvestorGroupField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInvestorGroupField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryInvestorGroupField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorGroupField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorGroupField),
            "::",
            stringify!(BrokerID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInstrumentMarginRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInstrumentMarginRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInstrumentMarginRateField>(),
        82usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryInstrumentMarginRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInstrumentMarginRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInstrumentMarginRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentMarginRateField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentMarginRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentMarginRateField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentMarginRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentMarginRateField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentMarginRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentMarginRateField>())).HedgeFlag as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentMarginRateField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentMarginRateField>())).ExchangeID
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentMarginRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentMarginRateField>())).InvestUnitID
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentMarginRateField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInstrumentCommissionRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInstrumentCommissionRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInstrumentCommissionRateField>(),
        81usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInstrumentCommissionRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentCommissionRateField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentCommissionRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentCommissionRateField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentCommissionRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentCommissionRateField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentCommissionRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentCommissionRateField>())).ExchangeID
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentCommissionRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentCommissionRateField>())).InvestUnitID
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentCommissionRateField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInstrumentTradingRightField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInstrumentTradingRightField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInstrumentTradingRightField>(),
        55usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryInstrumentTradingRightField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInstrumentTradingRightField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInstrumentTradingRightField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentTradingRightField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentTradingRightField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentTradingRightField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentTradingRightField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentTradingRightField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentTradingRightField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBrokerField {
    pub BrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBrokerField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBrokerField>(),
        11usize,
        concat!("Size of: ", stringify!(CThostFtdcQryBrokerField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBrokerField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryBrokerField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerField),
            "::",
            stringify!(BrokerID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTraderField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTraderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTraderField>(),
        41usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTraderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTraderField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryTraderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTraderField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTraderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTraderField>())).ParticipantID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTraderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTraderField>())).TraderID as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTraderField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySuperUserFunctionField {
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySuperUserFunctionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySuperUserFunctionField>(),
        16usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySuperUserFunctionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySuperUserFunctionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQrySuperUserFunctionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySuperUserFunctionField>())).UserID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySuperUserFunctionField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryUserSessionField {
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryUserSessionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryUserSessionField>(),
        36usize,
        concat!("Size of: ", stringify!(CThostFtdcQryUserSessionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryUserSessionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryUserSessionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryUserSessionField>())).FrontID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryUserSessionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryUserSessionField>())).SessionID as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryUserSessionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryUserSessionField>())).BrokerID as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryUserSessionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryUserSessionField>())).UserID as *const _ as usize
        },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryUserSessionField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryPartBrokerField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryPartBrokerField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryPartBrokerField>(),
        31usize,
        concat!("Size of: ", stringify!(CThostFtdcQryPartBrokerField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryPartBrokerField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryPartBrokerField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryPartBrokerField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryPartBrokerField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryPartBrokerField>())).BrokerID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryPartBrokerField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryPartBrokerField>())).ParticipantID as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryPartBrokerField),
            "::",
            stringify!(ParticipantID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryFrontStatusField {
    pub FrontID: TThostFtdcFrontIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryFrontStatusField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryFrontStatusField>(),
        4usize,
        concat!("Size of: ", stringify!(CThostFtdcQryFrontStatusField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryFrontStatusField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryFrontStatusField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryFrontStatusField>())).FrontID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryFrontStatusField),
            "::",
            stringify!(FrontID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeOrderField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeOrderField>(),
        83usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExchangeOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeOrderField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryExchangeOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderField>())).ParticipantID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderField>())).ClientID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderField>())).ExchangeInstID as *const _
                as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderField>())).ExchangeID as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderField>())).TraderID as *const _
                as usize
        },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryOrderActionField>(),
        33usize,
        concat!("Size of: ", stringify!(CThostFtdcQryOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryOrderActionField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryOrderActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOrderActionField>())).ExchangeID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeOrderActionField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeOrderActionField>(),
        52usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryExchangeOrderActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderActionField>())).ParticipantID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderActionField>())).ClientID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderActionField>())).ExchangeID as *const _
                as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeOrderActionField>())).TraderID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySuperUserField {
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySuperUserField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySuperUserField>(),
        16usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySuperUserField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySuperUserField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQrySuperUserField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySuperUserField>())).UserID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySuperUserField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeField {
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeField>(),
        9usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExchangeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryExchangeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryProductField {
    pub ProductID: TThostFtdcInstrumentIDType,
    pub ProductClass: TThostFtdcProductClassType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryProductField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryProductField>(),
        41usize,
        concat!("Size of: ", stringify!(CThostFtdcQryProductField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryProductField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryProductField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryProductField>())).ProductID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryProductField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryProductField>())).ProductClass as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryProductField),
            "::",
            stringify!(ProductClass)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryProductField>())).ExchangeID as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryProductField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInstrumentField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub ProductID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInstrumentField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInstrumentField>(),
        102usize,
        concat!("Size of: ", stringify!(CThostFtdcQryInstrumentField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInstrumentField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryInstrumentField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentField>())).ExchangeID as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentField>())).ExchangeInstID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentField>())).ProductID as *const _ as usize
        },
        71usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentField),
            "::",
            stringify!(ProductID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryDepthMarketDataField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryDepthMarketDataField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryDepthMarketDataField>(),
        40usize,
        concat!("Size of: ", stringify!(CThostFtdcQryDepthMarketDataField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryDepthMarketDataField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryDepthMarketDataField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryDepthMarketDataField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryDepthMarketDataField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryDepthMarketDataField>())).ExchangeID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryDepthMarketDataField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBrokerUserField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBrokerUserField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBrokerUserField>(),
        27usize,
        concat!("Size of: ", stringify!(CThostFtdcQryBrokerUserField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBrokerUserField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryBrokerUserField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerUserField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerUserField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerUserField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerUserField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBrokerUserFunctionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBrokerUserFunctionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBrokerUserFunctionField>(),
        27usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryBrokerUserFunctionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBrokerUserFunctionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryBrokerUserFunctionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerUserFunctionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerUserFunctionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerUserFunctionField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerUserFunctionField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTraderOfferField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTraderOfferField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTraderOfferField>(),
        41usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTraderOfferField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTraderOfferField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryTraderOfferField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTraderOfferField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTraderOfferField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTraderOfferField>())).ParticipantID as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTraderOfferField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTraderOfferField>())).TraderID as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTraderOfferField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySyncDepositField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub DepositSeqNo: TThostFtdcDepositSeqNoType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySyncDepositField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySyncDepositField>(),
        26usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySyncDepositField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySyncDepositField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQrySyncDepositField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySyncDepositField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySyncDepositField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySyncDepositField>())).DepositSeqNo as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySyncDepositField),
            "::",
            stringify!(DepositSeqNo)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySettlementInfoField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub TradingDay: TThostFtdcDateType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySettlementInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySettlementInfoField>(),
        50usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySettlementInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySettlementInfoField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQrySettlementInfoField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoField>())).TradingDay as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoField>())).AccountID as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoField>())).CurrencyID as *const _
                as usize
        },
        46usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeMarginRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeMarginRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeMarginRateField>(),
        52usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryExchangeMarginRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeMarginRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeMarginRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeMarginRateField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeMarginRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeMarginRateField>())).InstrumentID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeMarginRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeMarginRateField>())).HedgeFlag as *const _
                as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeMarginRateField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeMarginRateField>())).ExchangeID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeMarginRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeMarginRateAdjustField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeMarginRateAdjustField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeMarginRateAdjustField>(),
        43usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryExchangeMarginRateAdjustField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeMarginRateAdjustField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeMarginRateAdjustField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeMarginRateAdjustField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeMarginRateAdjustField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeMarginRateAdjustField>())).InstrumentID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeMarginRateAdjustField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeMarginRateAdjustField>())).HedgeFlag
                as *const _ as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeMarginRateAdjustField),
            "::",
            stringify!(HedgeFlag)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub FromCurrencyID: TThostFtdcCurrencyIDType,
    pub ToCurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeRateField>(),
        19usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExchangeRateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeRateField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryExchangeRateField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeRateField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeRateField>())).FromCurrencyID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeRateField),
            "::",
            stringify!(FromCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeRateField>())).ToCurrencyID as *const _
                as usize
        },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeRateField),
            "::",
            stringify!(ToCurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySyncFundMortgageField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub MortgageSeqNo: TThostFtdcDepositSeqNoType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySyncFundMortgageField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySyncFundMortgageField>(),
        26usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySyncFundMortgageField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySyncFundMortgageField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQrySyncFundMortgageField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySyncFundMortgageField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySyncFundMortgageField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySyncFundMortgageField>())).MortgageSeqNo as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySyncFundMortgageField),
            "::",
            stringify!(MortgageSeqNo)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryHisOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub InsertTimeStart: TThostFtdcTimeType,
    pub InsertTimeEnd: TThostFtdcTimeType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryHisOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryHisOrderField>(),
        116usize,
        concat!("Size of: ", stringify!(CThostFtdcQryHisOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryHisOrderField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryHisOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).ExchangeID as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).OrderSysID as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).InsertTimeStart as *const _
                as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(InsertTimeStart)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).InsertTimeEnd as *const _
                as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(InsertTimeEnd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).TradingDay as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryHisOrderField>())).SettlementID as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryHisOrderField),
            "::",
            stringify!(SettlementID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcOptionInstrMiniMarginField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub MinMargin: TThostFtdcMoneyType,
    pub ValueMethod: TThostFtdcValueMethodType,
    pub IsRelative: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionInstrMiniMarginField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionInstrMiniMarginField>(),
        72usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionInstrMiniMarginField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcOptionInstrMiniMarginField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMiniMarginField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMiniMarginField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMiniMarginField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMiniMarginField>())).InvestorID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMiniMarginField>())).MinMargin as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField),
            "::",
            stringify!(MinMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMiniMarginField>())).ValueMethod as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField),
            "::",
            stringify!(ValueMethod)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMiniMarginField>())).IsRelative as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMiniMarginField),
            "::",
            stringify!(IsRelative)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcOptionInstrMarginAdjustField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub SShortMarginRatioByMoney: TThostFtdcRatioType,
    pub SShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub HShortMarginRatioByMoney: TThostFtdcRatioType,
    pub HShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub AShortMarginRatioByMoney: TThostFtdcRatioType,
    pub AShortMarginRatioByVolume: TThostFtdcMoneyType,
    pub IsRelative: TThostFtdcBoolType,
    pub MShortMarginRatioByMoney: TThostFtdcRatioType,
    pub MShortMarginRatioByVolume: TThostFtdcMoneyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionInstrMarginAdjustField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionInstrMarginAdjustField>(),
        128usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionInstrMarginAdjustField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .SShortMarginRatioByMoney as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(SShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .SShortMarginRatioByVolume as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(SShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .HShortMarginRatioByMoney as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(HShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .HShortMarginRatioByVolume as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(HShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .AShortMarginRatioByMoney as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(AShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .AShortMarginRatioByVolume as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(AShortMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>())).IsRelative
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(IsRelative)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .MShortMarginRatioByMoney as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(MShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrMarginAdjustField>()))
                .MShortMarginRatioByVolume as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrMarginAdjustField),
            "::",
            stringify!(MShortMarginRatioByVolume)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcOptionInstrCommRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OpenRatioByMoney: TThostFtdcRatioType,
    pub OpenRatioByVolume: TThostFtdcRatioType,
    pub CloseRatioByMoney: TThostFtdcRatioType,
    pub CloseRatioByVolume: TThostFtdcRatioType,
    pub CloseTodayRatioByMoney: TThostFtdcRatioType,
    pub CloseTodayRatioByVolume: TThostFtdcRatioType,
    pub StrikeRatioByMoney: TThostFtdcRatioType,
    pub StrikeRatioByVolume: TThostFtdcRatioType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionInstrCommRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionInstrCommRateField>(),
        152usize,
        concat!("Size of: ", stringify!(CThostFtdcOptionInstrCommRateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionInstrCommRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcOptionInstrCommRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).InvestorRange as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).InvestorID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).OpenRatioByMoney
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(OpenRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).OpenRatioByVolume
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(OpenRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).CloseRatioByMoney
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(CloseRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).CloseRatioByVolume
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(CloseRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).CloseTodayRatioByMoney
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(CloseTodayRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).CloseTodayRatioByVolume
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(CloseTodayRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).StrikeRatioByMoney
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(StrikeRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).StrikeRatioByVolume
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(StrikeRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).ExchangeID as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrCommRateField>())).InvestUnitID as *const _
                as usize
        },
        129usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrCommRateField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcOptionInstrTradeCostField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub FixedMargin: TThostFtdcMoneyType,
    pub MiniMargin: TThostFtdcMoneyType,
    pub Royalty: TThostFtdcMoneyType,
    pub ExchFixedMargin: TThostFtdcMoneyType,
    pub ExchMiniMargin: TThostFtdcMoneyType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionInstrTradeCostField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionInstrTradeCostField>(),
        128usize,
        concat!("Size of: ", stringify!(CThostFtdcOptionInstrTradeCostField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionInstrTradeCostField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcOptionInstrTradeCostField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).HedgeFlag as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).FixedMargin as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(FixedMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).MiniMargin as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(MiniMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).Royalty as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(Royalty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).ExchFixedMargin
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(ExchFixedMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).ExchMiniMargin
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(ExchMiniMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).ExchangeID as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradeCostField>())).InvestUnitID as *const _
                as usize
        },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradeCostField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryOptionInstrTradeCostField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub InputPrice: TThostFtdcPriceType,
    pub UnderlyingPrice: TThostFtdcPriceType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryOptionInstrTradeCostField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryOptionInstrTradeCostField>(),
        104usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryOptionInstrTradeCostField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).HedgeFlag as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).InputPrice
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(InputPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).UnderlyingPrice
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(UnderlyingPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).ExchangeID
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradeCostField>())).InvestUnitID
                as *const _ as usize
        },
        81usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradeCostField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryOptionInstrCommRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryOptionInstrCommRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryOptionInstrCommRateField>(),
        81usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryOptionInstrCommRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryOptionInstrCommRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryOptionInstrCommRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrCommRateField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrCommRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrCommRateField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrCommRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrCommRateField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrCommRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrCommRateField>())).ExchangeID as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrCommRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrCommRateField>())).InvestUnitID
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrCommRateField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcIndexPriceField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ClosePrice: TThostFtdcPriceType,
}
#[test]
fn bindgen_test_layout_CThostFtdcIndexPriceField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcIndexPriceField>(),
        56usize,
        concat!("Size of: ", stringify!(CThostFtdcIndexPriceField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcIndexPriceField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcIndexPriceField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcIndexPriceField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcIndexPriceField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcIndexPriceField>())).InstrumentID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcIndexPriceField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcIndexPriceField>())).ClosePrice as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcIndexPriceField),
            "::",
            stringify!(ClosePrice)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputExecOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExecOrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub Volume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ActionType: TThostFtdcActionTypeType,
    pub PosiDirection: TThostFtdcPosiDirectionType,
    pub ReservePositionFlag: TThostFtdcExecOrderPositionFlagType,
    pub CloseFlag: TThostFtdcExecOrderCloseFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputExecOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputExecOrderField>(),
        212usize,
        concat!("Size of: ", stringify!(CThostFtdcInputExecOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputExecOrderField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcInputExecOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).ExecOrderRef as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(ExecOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).Volume as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).RequestID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).BusinessUnit as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).OffsetFlag as *const _
                as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).HedgeFlag as *const _ as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).ActionType as *const _
                as usize
        },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(ActionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).PosiDirection as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(PosiDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).ReservePositionFlag
                as *const _ as usize
        },
        117usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(ReservePositionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).CloseFlag as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(CloseFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).ExchangeID as *const _
                as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).InvestUnitID as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).AccountID as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).CurrencyID as *const _
                as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).ClientID as *const _ as usize
        },
        162usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).IPAddress as *const _ as usize
        },
        173usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderField>())).MacAddress as *const _
                as usize
        },
        189usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputExecOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExecOrderActionRef: TThostFtdcOrderActionRefType,
    pub ExecOrderRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExecOrderSysID: TThostFtdcExecOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub UserID: TThostFtdcUserIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputExecOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputExecOrderActionField>(),
        188usize,
        concat!("Size of: ", stringify!(CThostFtdcInputExecOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputExecOrderActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInputExecOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).ExecOrderActionRef
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(ExecOrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).ExecOrderRef as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(ExecOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).RequestID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).FrontID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).SessionID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).ExecOrderSysID
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(ExecOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).UserID as *const _
                as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).InstrumentID as *const _
                as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).IPAddress as *const _
                as usize
        },
        151usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputExecOrderActionField>())).MacAddress as *const _
                as usize
        },
        167usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputExecOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcExecOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExecOrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub Volume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ActionType: TThostFtdcActionTypeType,
    pub PosiDirection: TThostFtdcPosiDirectionType,
    pub ReservePositionFlag: TThostFtdcExecOrderPositionFlagType,
    pub CloseFlag: TThostFtdcExecOrderCloseFlagType,
    pub ExecOrderLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub ExecOrderSysID: TThostFtdcExecOrderSysIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub ExecResult: TThostFtdcExecResultType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub ActiveUserID: TThostFtdcUserIDType,
    pub BrokerExecOrderSeq: TThostFtdcSequenceNoType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExecOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExecOrderField>(),
        508usize,
        concat!("Size of: ", stringify!(CThostFtdcExecOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExecOrderField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcExecOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ExecOrderRef as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ExecOrderRef)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).UserID as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).Volume as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).RequestID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).BusinessUnit as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).OffsetFlag as *const _ as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).HedgeFlag as *const _ as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ActionType as *const _ as usize
        },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ActionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).PosiDirection as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(PosiDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ReservePositionFlag as *const _
                as usize
        },
        117usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ReservePositionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).CloseFlag as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(CloseFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ExecOrderLocalID as *const _
                as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ExecOrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ExchangeID as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ParticipantID as *const _ as usize
        },
        141usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ClientID as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ExchangeInstID as *const _ as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).TraderID as *const _ as usize
        },
        194usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).InstallID as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).OrderSubmitStatus as *const _
                as usize
        },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).NotifySequence as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).TradingDay as *const _ as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).SettlementID as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ExecOrderSysID as *const _ as usize
        },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ExecOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).InsertDate as *const _ as usize
        },
        265usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).InsertTime as *const _ as usize
        },
        274usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).CancelTime as *const _ as usize
        },
        283usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ExecResult as *const _ as usize
        },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ExecResult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ClearingPartID as *const _ as usize
        },
        293usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).SequenceNo as *const _ as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).FrontID as *const _ as usize
        },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).SessionID as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).UserProductInfo as *const _
                as usize
        },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).StatusMsg as *const _ as usize
        },
        327usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).ActiveUserID as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(ActiveUserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).BrokerExecOrderSeq as *const _
                as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(BrokerExecOrderSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).BranchID as *const _ as usize
        },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).InvestUnitID as *const _ as usize
        },
        437usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).AccountID as *const _ as usize
        },
        454usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).CurrencyID as *const _ as usize
        },
        467usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).IPAddress as *const _ as usize
        },
        471usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderField>())).MacAddress as *const _ as usize
        },
        487usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcExecOrderField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcExecOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExecOrderActionRef: TThostFtdcOrderActionRefType,
    pub ExecOrderRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExecOrderSysID: TThostFtdcExecOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub ExecOrderLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub ActionType: TThostFtdcActionTypeType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExecOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExecOrderActionField>(),
        396usize,
        concat!("Size of: ", stringify!(CThostFtdcExecOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExecOrderActionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcExecOrderActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ExecOrderActionRef
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ExecOrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ExecOrderRef as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ExecOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).RequestID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).FrontID as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).SessionID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ExecOrderSysID as *const _
                as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ExecOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ActionDate as *const _
                as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ActionTime as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).TraderID as *const _ as usize
        },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).InstallID as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ExecOrderLocalID as *const _
                as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ExecOrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ActionLocalID as *const _
                as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ParticipantID as *const _
                as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ClientID as *const _ as usize
        },
        169usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).BusinessUnit as *const _
                as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).OrderActionStatus as *const _
                as usize
        },
        201usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).UserID as *const _ as usize
        },
        202usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).ActionType as *const _
                as usize
        },
        218usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(ActionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).StatusMsg as *const _
                as usize
        },
        219usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).InstrumentID as *const _
                as usize
        },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).BranchID as *const _ as usize
        },
        331usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).IPAddress as *const _
                as usize
        },
        357usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExecOrderActionField>())).MacAddress as *const _
                as usize
        },
        373usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExecOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcExecOrderActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExecOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExecOrderSysID: TThostFtdcExecOrderSysIDType,
    pub InsertTimeStart: TThostFtdcTimeType,
    pub InsertTimeEnd: TThostFtdcTimeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExecOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExecOrderField>(),
        103usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExecOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExecOrderField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryExecOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderField>())).ExchangeID as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderField>())).ExecOrderSysID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderField),
            "::",
            stringify!(ExecOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderField>())).InsertTimeStart as *const _
                as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderField),
            "::",
            stringify!(InsertTimeStart)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderField>())).InsertTimeEnd as *const _
                as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderField),
            "::",
            stringify!(InsertTimeEnd)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeExecOrderField {
    pub Volume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ActionType: TThostFtdcActionTypeType,
    pub PosiDirection: TThostFtdcPosiDirectionType,
    pub ReservePositionFlag: TThostFtdcExecOrderPositionFlagType,
    pub CloseFlag: TThostFtdcExecOrderCloseFlagType,
    pub ExecOrderLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub ExecOrderSysID: TThostFtdcExecOrderSysIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub ExecResult: TThostFtdcExecResultType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub BranchID: TThostFtdcBranchIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeExecOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeExecOrderField>(),
        272usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeExecOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeExecOrderField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeExecOrderField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).Volume as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).RequestID as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).BusinessUnit as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).OffsetFlag as *const _
                as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).HedgeFlag as *const _
                as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ActionType as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ActionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).PosiDirection as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(PosiDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ReservePositionFlag
                as *const _ as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ReservePositionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).CloseFlag as *const _
                as usize
        },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(CloseFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ExecOrderLocalID
                as *const _ as usize
        },
        35usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ExecOrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ExchangeID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ParticipantID as *const _
                as usize
        },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ClientID as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ExchangeInstID as *const _
                as usize
        },
        79usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).TraderID as *const _
                as usize
        },
        110usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).InstallID as *const _
                as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).OrderSubmitStatus
                as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).NotifySequence as *const _
                as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).TradingDay as *const _
                as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).SettlementID as *const _
                as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ExecOrderSysID as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ExecOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).InsertDate as *const _
                as usize
        },
        181usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).InsertTime as *const _
                as usize
        },
        190usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).CancelTime as *const _
                as usize
        },
        199usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ExecResult as *const _
                as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ExecResult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).ClearingPartID as *const _
                as usize
        },
        209usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).SequenceNo as *const _
                as usize
        },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).BranchID as *const _
                as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).IPAddress as *const _
                as usize
        },
        233usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderField>())).MacAddress as *const _
                as usize
        },
        249usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeExecOrderField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeExecOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeExecOrderField>(),
        83usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExchangeExecOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeExecOrderField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeExecOrderField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderField>())).ParticipantID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderField>())).ClientID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderField>())).ExchangeInstID
                as *const _ as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderField>())).ExchangeID as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderField>())).TraderID as *const _
                as usize
        },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExecOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExecOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExecOrderActionField>(),
        33usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExecOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExecOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExecOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExecOrderActionField>())).ExchangeID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExecOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeExecOrderActionField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExecOrderSysID: TThostFtdcExecOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub ExecOrderLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub ActionType: TThostFtdcActionTypeType,
    pub BranchID: TThostFtdcBranchIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeExecOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeExecOrderActionField>(),
        212usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcExchangeExecOrderActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeExecOrderActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeExecOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ExchangeID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ExecOrderSysID
                as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ExecOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ActionFlag
                as *const _ as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ActionDate
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ActionTime
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).TraderID as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).InstallID as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ExecOrderLocalID
                as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ExecOrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ActionLocalID
                as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ParticipantID
                as *const _ as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ClientID as *const _
                as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).BusinessUnit
                as *const _ as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).OrderActionStatus
                as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).UserID as *const _
                as usize
        },
        146usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).ActionType
                as *const _ as usize
        },
        162usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(ActionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).BranchID as *const _
                as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).IPAddress as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeExecOrderActionField>())).MacAddress
                as *const _ as usize
        },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeExecOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeExecOrderActionField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeExecOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeExecOrderActionField>(),
        52usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryExchangeExecOrderActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeExecOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeExecOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderActionField>())).ParticipantID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderActionField>())).ClientID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderActionField>())).ExchangeID
                as *const _ as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeExecOrderActionField>())).TraderID
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeExecOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcErrExecOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExecOrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub Volume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ActionType: TThostFtdcActionTypeType,
    pub PosiDirection: TThostFtdcPosiDirectionType,
    pub ReservePositionFlag: TThostFtdcExecOrderPositionFlagType,
    pub CloseFlag: TThostFtdcExecOrderCloseFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcErrExecOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcErrExecOrderField>(),
        300usize,
        concat!("Size of: ", stringify!(CThostFtdcErrExecOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcErrExecOrderField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcErrExecOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).ExecOrderRef as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(ExecOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).Volume as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).RequestID as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).BusinessUnit as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).OffsetFlag as *const _ as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).HedgeFlag as *const _ as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).ActionType as *const _ as usize
        },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(ActionType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).PosiDirection as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(PosiDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).ReservePositionFlag as *const _
                as usize
        },
        117usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(ReservePositionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).CloseFlag as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(CloseFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).ExchangeID as *const _ as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).InvestUnitID as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).AccountID as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).CurrencyID as *const _ as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).ClientID as *const _ as usize
        },
        162usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).IPAddress as *const _ as usize
        },
        173usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).MacAddress as *const _ as usize
        },
        189usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).ErrorID as *const _ as usize
        },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderField>())).ErrorMsg as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcErrExecOrderField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryErrExecOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryErrExecOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryErrExecOrderField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryErrExecOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryErrExecOrderField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryErrExecOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrExecOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrExecOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrExecOrderField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrExecOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcErrExecOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExecOrderActionRef: TThostFtdcOrderActionRefType,
    pub ExecOrderRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExecOrderSysID: TThostFtdcExecOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub UserID: TThostFtdcUserIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcErrExecOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcErrExecOrderActionField>(),
        276usize,
        concat!("Size of: ", stringify!(CThostFtdcErrExecOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcErrExecOrderActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcErrExecOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).ExecOrderActionRef
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(ExecOrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).ExecOrderRef as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(ExecOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).RequestID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).FrontID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).SessionID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).ExecOrderSysID as *const _
                as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(ExecOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).UserID as *const _
                as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).InstrumentID as *const _
                as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).IPAddress as *const _
                as usize
        },
        151usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).MacAddress as *const _
                as usize
        },
        167usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).ErrorID as *const _
                as usize
        },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrExecOrderActionField>())).ErrorMsg as *const _
                as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrExecOrderActionField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcErrExecOrderActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryErrExecOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryErrExecOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryErrExecOrderActionField>(),
        24usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryErrExecOrderActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryErrExecOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryErrExecOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrExecOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrExecOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrExecOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrExecOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcOptionInstrTradingRightField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub Direction: TThostFtdcDirectionType,
    pub TradingRight: TThostFtdcTradingRightType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionInstrTradingRightField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionInstrTradingRightField>(),
        58usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcOptionInstrTradingRightField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionInstrTradingRightField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcOptionInstrTradingRightField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradingRightField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradingRightField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradingRightField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradingRightField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradingRightField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradingRightField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradingRightField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradingRightField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradingRightField>())).Direction as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradingRightField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrTradingRightField>())).TradingRight
                as *const _ as usize
        },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrTradingRightField),
            "::",
            stringify!(TradingRight)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryOptionInstrTradingRightField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub Direction: TThostFtdcDirectionType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryOptionInstrTradingRightField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryOptionInstrTradingRightField>(),
        56usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryOptionInstrTradingRightField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryOptionInstrTradingRightField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryOptionInstrTradingRightField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradingRightField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradingRightField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradingRightField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradingRightField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradingRightField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradingRightField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionInstrTradingRightField>())).Direction
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionInstrTradingRightField),
            "::",
            stringify!(Direction)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputForQuoteField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ForQuoteRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputForQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputForQuoteField>(),
        147usize,
        concat!("Size of: ", stringify!(CThostFtdcInputForQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputForQuoteField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcInputForQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).ForQuoteRef as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(ForQuoteRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).ExchangeID as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).InvestUnitID as *const _
                as usize
        },
        93usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).IPAddress as *const _ as usize
        },
        110usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputForQuoteField>())).MacAddress as *const _ as usize
        },
        126usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputForQuoteField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcForQuoteField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ForQuoteRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub ForQuoteLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub ForQuoteStatus: TThostFtdcForQuoteStatusType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub ActiveUserID: TThostFtdcUserIDType,
    pub BrokerForQutoSeq: TThostFtdcSequenceNoType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcForQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcForQuoteField>(),
        372usize,
        concat!("Size of: ", stringify!(CThostFtdcForQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcForQuoteField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcForQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ForQuoteRef as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ForQuoteRef)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).UserID as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ForQuoteLocalID as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ForQuoteLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ExchangeID as *const _ as usize
        },
        97usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ParticipantID as *const _ as usize
        },
        106usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ClientID as *const _ as usize
        },
        117usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ExchangeInstID as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).TraderID as *const _ as usize
        },
        159usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).InstallID as *const _ as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).InsertDate as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).InsertTime as *const _ as usize
        },
        193usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ForQuoteStatus as *const _ as usize
        },
        202usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ForQuoteStatus)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).FrontID as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).SessionID as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).StatusMsg as *const _ as usize
        },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).ActiveUserID as *const _ as usize
        },
        293usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(ActiveUserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).BrokerForQutoSeq as *const _
                as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(BrokerForQutoSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).InvestUnitID as *const _ as usize
        },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).IPAddress as *const _ as usize
        },
        333usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteField>())).MacAddress as *const _ as usize
        },
        349usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcForQuoteField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryForQuoteField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InsertTimeStart: TThostFtdcTimeType,
    pub InsertTimeEnd: TThostFtdcTimeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryForQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryForQuoteField>(),
        99usize,
        concat!("Size of: ", stringify!(CThostFtdcQryForQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryForQuoteField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryForQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteField>())).ExchangeID as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteField>())).InsertTimeStart as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteField),
            "::",
            stringify!(InsertTimeStart)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteField>())).InsertTimeEnd as *const _
                as usize
        },
        73usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteField),
            "::",
            stringify!(InsertTimeEnd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteField>())).InvestUnitID as *const _ as usize
        },
        82usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeForQuoteField {
    pub ForQuoteLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub ForQuoteStatus: TThostFtdcForQuoteStatusType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeForQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeForQuoteField>(),
        156usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeForQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeForQuoteField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcExchangeForQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).ForQuoteLocalID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(ForQuoteLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).ExchangeID as *const _
                as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).ParticipantID as *const _
                as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).ClientID as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).ExchangeInstID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).TraderID as *const _
                as usize
        },
        75usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).InstallID as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).InsertDate as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).InsertTime as *const _
                as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).ForQuoteStatus as *const _
                as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(ForQuoteStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).IPAddress as *const _
                as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeForQuoteField>())).MacAddress as *const _
                as usize
        },
        135usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeForQuoteField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeForQuoteField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeForQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeForQuoteField>(),
        83usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExchangeForQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeForQuoteField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeForQuoteField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeForQuoteField>())).ParticipantID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeForQuoteField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeForQuoteField>())).ClientID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeForQuoteField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeForQuoteField>())).ExchangeInstID
                as *const _ as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeForQuoteField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeForQuoteField>())).ExchangeID as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeForQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeForQuoteField>())).TraderID as *const _
                as usize
        },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeForQuoteField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputQuoteField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub QuoteRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub AskPrice: TThostFtdcPriceType,
    pub BidPrice: TThostFtdcPriceType,
    pub AskVolume: TThostFtdcVolumeType,
    pub BidVolume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub AskOffsetFlag: TThostFtdcOffsetFlagType,
    pub BidOffsetFlag: TThostFtdcOffsetFlagType,
    pub AskHedgeFlag: TThostFtdcHedgeFlagType,
    pub BidHedgeFlag: TThostFtdcHedgeFlagType,
    pub AskOrderRef: TThostFtdcOrderRefType,
    pub BidOrderRef: TThostFtdcOrderRefType,
    pub ForQuoteSysID: TThostFtdcOrderSysIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputQuoteField>(),
        264usize,
        concat!("Size of: ", stringify!(CThostFtdcInputQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputQuoteField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcInputQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).QuoteRef as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(QuoteRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).AskPrice as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(AskPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).BidPrice as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(BidPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).AskVolume as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(AskVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).BidVolume as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(BidVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).RequestID as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).BusinessUnit as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).AskOffsetFlag as *const _ as usize
        },
        137usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(AskOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).BidOffsetFlag as *const _ as usize
        },
        138usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(BidOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).AskHedgeFlag as *const _ as usize
        },
        139usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(AskHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).BidHedgeFlag as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(BidHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).AskOrderRef as *const _ as usize
        },
        141usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(AskOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).BidOrderRef as *const _ as usize
        },
        154usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(BidOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).ForQuoteSysID as *const _ as usize
        },
        167usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(ForQuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).ExchangeID as *const _ as usize
        },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).InvestUnitID as *const _ as usize
        },
        197usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).ClientID as *const _ as usize
        },
        214usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).IPAddress as *const _ as usize
        },
        225usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteField>())).MacAddress as *const _ as usize
        },
        241usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputQuoteActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub QuoteActionRef: TThostFtdcOrderActionRefType,
    pub QuoteRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub QuoteSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub UserID: TThostFtdcUserIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputQuoteActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputQuoteActionField>(),
        200usize,
        concat!("Size of: ", stringify!(CThostFtdcInputQuoteActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputQuoteActionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcInputQuoteActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).QuoteActionRef as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(QuoteActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).QuoteRef as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(QuoteRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).RequestID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).FrontID as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).SessionID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).QuoteSysID as *const _
                as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(QuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).UserID as *const _ as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).InstrumentID as *const _
                as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).InvestUnitID as *const _
                as usize
        },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).ClientID as *const _
                as usize
        },
        151usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).IPAddress as *const _
                as usize
        },
        162usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputQuoteActionField>())).MacAddress as *const _
                as usize
        },
        178usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputQuoteActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcQuoteField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub QuoteRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub AskPrice: TThostFtdcPriceType,
    pub BidPrice: TThostFtdcPriceType,
    pub AskVolume: TThostFtdcVolumeType,
    pub BidVolume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub AskOffsetFlag: TThostFtdcOffsetFlagType,
    pub BidOffsetFlag: TThostFtdcOffsetFlagType,
    pub AskHedgeFlag: TThostFtdcHedgeFlagType,
    pub BidHedgeFlag: TThostFtdcHedgeFlagType,
    pub QuoteLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub QuoteSysID: TThostFtdcOrderSysIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub QuoteStatus: TThostFtdcOrderStatusType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub AskOrderSysID: TThostFtdcOrderSysIDType,
    pub BidOrderSysID: TThostFtdcOrderSysIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub ActiveUserID: TThostFtdcUserIDType,
    pub BrokerQuoteSeq: TThostFtdcSequenceNoType,
    pub AskOrderRef: TThostFtdcOrderRefType,
    pub BidOrderRef: TThostFtdcOrderRefType,
    pub ForQuoteSysID: TThostFtdcOrderSysIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQuoteField>(),
        624usize,
        concat!("Size of: ", stringify!(CThostFtdcQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQuoteField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcQuoteField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BrokerID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).InvestorID as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).QuoteRef as *const _ as usize },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(QuoteRef)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).UserID as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).AskPrice as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(AskPrice)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BidPrice as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BidPrice)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).AskVolume as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(AskVolume)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BidVolume as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BidVolume)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).RequestID as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BusinessUnit as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).AskOffsetFlag as *const _ as usize
        },
        137usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(AskOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BidOffsetFlag as *const _ as usize
        },
        138usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BidOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).AskHedgeFlag as *const _ as usize
        },
        139usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(AskHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BidHedgeFlag as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BidHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).QuoteLocalID as *const _ as usize
        },
        141usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(QuoteLocalID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).ExchangeID as *const _ as usize },
        154usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).ParticipantID as *const _ as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).ClientID as *const _ as usize },
        174usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).ExchangeInstID as *const _ as usize
        },
        185usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).TraderID as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).InstallID as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).NotifySequence as *const _ as usize
        },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).OrderSubmitStatus as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).TradingDay as *const _ as usize },
        249usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).SettlementID as *const _ as usize
        },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).QuoteSysID as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(QuoteSysID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).InsertDate as *const _ as usize },
        285usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).InsertTime as *const _ as usize },
        294usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).CancelTime as *const _ as usize },
        303usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).QuoteStatus as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(QuoteStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).ClearingPartID as *const _ as usize
        },
        313usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).SequenceNo as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).AskOrderSysID as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(AskOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BidOrderSysID as *const _ as usize
        },
        349usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BidOrderSysID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).FrontID as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).SessionID as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).UserProductInfo as *const _ as usize
        },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).StatusMsg as *const _ as usize },
        391usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).ActiveUserID as *const _ as usize
        },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(ActiveUserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BrokerQuoteSeq as *const _ as usize
        },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BrokerQuoteSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).AskOrderRef as *const _ as usize
        },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(AskOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BidOrderRef as *const _ as usize
        },
        505usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BidOrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).ForQuoteSysID as *const _ as usize
        },
        518usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(ForQuoteSysID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).BranchID as *const _ as usize },
        539usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteField>())).InvestUnitID as *const _ as usize
        },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).AccountID as *const _ as usize },
        565usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).CurrencyID as *const _ as usize },
        578usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).IPAddress as *const _ as usize },
        582usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcQuoteField>())).MacAddress as *const _ as usize },
        598usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcQuoteField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcQuoteActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub QuoteActionRef: TThostFtdcOrderActionRefType,
    pub QuoteRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub QuoteSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub QuoteLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQuoteActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQuoteActionField>(),
        396usize,
        concat!("Size of: ", stringify!(CThostFtdcQuoteActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQuoteActionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcQuoteActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).QuoteActionRef as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(QuoteActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).QuoteRef as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(QuoteRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).RequestID as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).FrontID as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).SessionID as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).ExchangeID as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).QuoteSysID as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(QuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).ActionFlag as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).ActionDate as *const _ as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).ActionTime as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).TraderID as *const _ as usize
        },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).InstallID as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).QuoteLocalID as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(QuoteLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).ActionLocalID as *const _
                as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).ParticipantID as *const _
                as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).ClientID as *const _ as usize
        },
        169usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).BusinessUnit as *const _ as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).OrderActionStatus as *const _
                as usize
        },
        201usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).UserID as *const _ as usize
        },
        202usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).StatusMsg as *const _ as usize
        },
        218usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).InstrumentID as *const _ as usize
        },
        299usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).BranchID as *const _ as usize
        },
        330usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).InvestUnitID as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).IPAddress as *const _ as usize
        },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQuoteActionField>())).MacAddress as *const _ as usize
        },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQuoteActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcQuoteActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryQuoteField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub QuoteSysID: TThostFtdcOrderSysIDType,
    pub InsertTimeStart: TThostFtdcTimeType,
    pub InsertTimeEnd: TThostFtdcTimeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryQuoteField>(),
        120usize,
        concat!("Size of: ", stringify!(CThostFtdcQryQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryQuoteField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).ExchangeID as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).QuoteSysID as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(QuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).InsertTimeStart as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(InsertTimeStart)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).InsertTimeEnd as *const _ as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(InsertTimeEnd)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteField>())).InvestUnitID as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeQuoteField {
    pub AskPrice: TThostFtdcPriceType,
    pub BidPrice: TThostFtdcPriceType,
    pub AskVolume: TThostFtdcVolumeType,
    pub BidVolume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub AskOffsetFlag: TThostFtdcOffsetFlagType,
    pub BidOffsetFlag: TThostFtdcOffsetFlagType,
    pub AskHedgeFlag: TThostFtdcHedgeFlagType,
    pub BidHedgeFlag: TThostFtdcHedgeFlagType,
    pub QuoteLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub QuoteSysID: TThostFtdcOrderSysIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub QuoteStatus: TThostFtdcOrderStatusType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub AskOrderSysID: TThostFtdcOrderSysIDType,
    pub BidOrderSysID: TThostFtdcOrderSysIDType,
    pub ForQuoteSysID: TThostFtdcOrderSysIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeQuoteField>(),
        352usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeQuoteField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcExchangeQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).AskPrice as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(AskPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).BidPrice as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(BidPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).AskVolume as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(AskVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).BidVolume as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(BidVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).RequestID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).BusinessUnit as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).AskOffsetFlag as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(AskOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).BidOffsetFlag as *const _
                as usize
        },
        50usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(BidOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).AskHedgeFlag as *const _
                as usize
        },
        51usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(AskHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).BidHedgeFlag as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(BidHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).QuoteLocalID as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(QuoteLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).ExchangeID as *const _ as usize
        },
        66usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).ParticipantID as *const _
                as usize
        },
        75usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).ClientID as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).ExchangeInstID as *const _
                as usize
        },
        97usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).TraderID as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).InstallID as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).NotifySequence as *const _
                as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).OrderSubmitStatus as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).TradingDay as *const _ as usize
        },
        161usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).SettlementID as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).QuoteSysID as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(QuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).InsertDate as *const _ as usize
        },
        197usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).InsertTime as *const _ as usize
        },
        206usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).CancelTime as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).QuoteStatus as *const _
                as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(QuoteStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).ClearingPartID as *const _
                as usize
        },
        225usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).SequenceNo as *const _ as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).AskOrderSysID as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(AskOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).BidOrderSysID as *const _
                as usize
        },
        261usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(BidOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).ForQuoteSysID as *const _
                as usize
        },
        282usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(ForQuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).BranchID as *const _ as usize
        },
        303usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).IPAddress as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteField>())).MacAddress as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeQuoteField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeQuoteField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeQuoteField>(),
        83usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExchangeQuoteField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeQuoteField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryExchangeQuoteField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteField>())).ParticipantID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteField>())).ClientID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteField>())).ExchangeInstID as *const _
                as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteField>())).ExchangeID as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteField>())).TraderID as *const _
                as usize
        },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryQuoteActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryQuoteActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryQuoteActionField>(),
        33usize,
        concat!("Size of: ", stringify!(CThostFtdcQryQuoteActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryQuoteActionField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryQuoteActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryQuoteActionField>())).ExchangeID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryQuoteActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeQuoteActionField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub QuoteSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub QuoteLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeQuoteActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeQuoteActionField>(),
        200usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeQuoteActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeQuoteActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeQuoteActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).QuoteSysID as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(QuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).ActionFlag as *const _
                as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).ActionDate as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).ActionTime as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).TraderID as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).InstallID as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).QuoteLocalID as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(QuoteLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).ActionLocalID as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).ParticipantID as *const _
                as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).ClientID as *const _
                as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).BusinessUnit as *const _
                as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).OrderActionStatus
                as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).UserID as *const _
                as usize
        },
        146usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).IPAddress as *const _
                as usize
        },
        162usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeQuoteActionField>())).MacAddress as *const _
                as usize
        },
        178usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeQuoteActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeQuoteActionField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeQuoteActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeQuoteActionField>(),
        52usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryExchangeQuoteActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeQuoteActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeQuoteActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteActionField>())).ParticipantID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteActionField>())).ClientID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteActionField>())).ExchangeID as *const _
                as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeQuoteActionField>())).TraderID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeQuoteActionField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcOptionInstrDeltaField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub Delta: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionInstrDeltaField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionInstrDeltaField>(),
        64usize,
        concat!("Size of: ", stringify!(CThostFtdcOptionInstrDeltaField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionInstrDeltaField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcOptionInstrDeltaField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrDeltaField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrDeltaField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrDeltaField>())).InvestorRange as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrDeltaField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrDeltaField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrDeltaField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrDeltaField>())).InvestorID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrDeltaField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionInstrDeltaField>())).Delta as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionInstrDeltaField),
            "::",
            stringify!(Delta)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcForQuoteRspField {
    pub TradingDay: TThostFtdcDateType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ForQuoteSysID: TThostFtdcOrderSysIDType,
    pub ForQuoteTime: TThostFtdcTimeType,
    pub ActionDay: TThostFtdcDateType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcForQuoteRspField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcForQuoteRspField>(),
        88usize,
        concat!("Size of: ", stringify!(CThostFtdcForQuoteRspField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcForQuoteRspField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcForQuoteRspField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteRspField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteRspField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteRspField>())).InstrumentID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteRspField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteRspField>())).ForQuoteSysID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteRspField),
            "::",
            stringify!(ForQuoteSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteRspField>())).ForQuoteTime as *const _ as usize
        },
        61usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteRspField),
            "::",
            stringify!(ForQuoteTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteRspField>())).ActionDay as *const _ as usize
        },
        70usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteRspField),
            "::",
            stringify!(ActionDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteRspField>())).ExchangeID as *const _ as usize
        },
        79usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteRspField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcStrikeOffsetField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub Offset: TThostFtdcMoneyType,
    pub OffsetType: TThostFtdcStrikeOffsetTypeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcStrikeOffsetField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcStrikeOffsetField>(),
        72usize,
        concat!("Size of: ", stringify!(CThostFtdcStrikeOffsetField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcStrikeOffsetField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcStrikeOffsetField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcStrikeOffsetField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcStrikeOffsetField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcStrikeOffsetField>())).InvestorRange as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcStrikeOffsetField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcStrikeOffsetField>())).BrokerID as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcStrikeOffsetField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcStrikeOffsetField>())).InvestorID as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcStrikeOffsetField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcStrikeOffsetField>())).Offset as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcStrikeOffsetField),
            "::",
            stringify!(Offset)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcStrikeOffsetField>())).OffsetType as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcStrikeOffsetField),
            "::",
            stringify!(OffsetType)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryStrikeOffsetField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryStrikeOffsetField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryStrikeOffsetField>(),
        55usize,
        concat!("Size of: ", stringify!(CThostFtdcQryStrikeOffsetField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryStrikeOffsetField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryStrikeOffsetField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryStrikeOffsetField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryStrikeOffsetField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryStrikeOffsetField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryStrikeOffsetField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryStrikeOffsetField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryStrikeOffsetField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputBatchOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OrderActionRef: TThostFtdcOrderActionRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub UserID: TThostFtdcUserIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputBatchOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputBatchOrderActionField>(),
        120usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInputBatchOrderActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputBatchOrderActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInputBatchOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).OrderActionRef
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(OrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).RequestID as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).FrontID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).SessionID as *const _
                as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).ExchangeID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).UserID as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).InvestUnitID
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).IPAddress as *const _
                as usize
        },
        82usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputBatchOrderActionField>())).MacAddress as *const _
                as usize
        },
        98usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputBatchOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcBatchOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OrderActionRef: TThostFtdcOrderActionRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBatchOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBatchOrderActionField>(),
        300usize,
        concat!("Size of: ", stringify!(CThostFtdcBatchOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBatchOrderActionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcBatchOrderActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).OrderActionRef as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(OrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).RequestID as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).FrontID as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).SessionID as *const _
                as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).ExchangeID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).ActionDate as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).ActionTime as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).TraderID as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).InstallID as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).ActionLocalID as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).ParticipantID as *const _
                as usize
        },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).ClientID as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).BusinessUnit as *const _
                as usize
        },
        127usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).OrderActionStatus
                as *const _ as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).UserID as *const _ as usize
        },
        149usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).StatusMsg as *const _
                as usize
        },
        165usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        246usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).IPAddress as *const _
                as usize
        },
        263usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBatchOrderActionField>())).MacAddress as *const _
                as usize
        },
        279usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBatchOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcBatchOrderActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeBatchOrderActionField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeBatchOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeBatchOrderActionField>(),
        164usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeBatchOrderActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeBatchOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).ExchangeID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).ActionDate
                as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).ActionTime
                as *const _ as usize
        },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).TraderID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).InstallID
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).ActionLocalID
                as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).ParticipantID
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).ClientID as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).BusinessUnit
                as *const _ as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).OrderActionStatus
                as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).UserID as *const _
                as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).IPAddress
                as *const _ as usize
        },
        125usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeBatchOrderActionField>())).MacAddress
                as *const _ as usize
        },
        141usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeBatchOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBatchOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBatchOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBatchOrderActionField>(),
        33usize,
        concat!("Size of: ", stringify!(CThostFtdcQryBatchOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBatchOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryBatchOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBatchOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBatchOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBatchOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBatchOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBatchOrderActionField>())).ExchangeID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBatchOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCombInstrumentGuardField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub GuarantRatio: TThostFtdcRatioType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCombInstrumentGuardField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCombInstrumentGuardField>(),
        72usize,
        concat!("Size of: ", stringify!(CThostFtdcCombInstrumentGuardField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCombInstrumentGuardField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcCombInstrumentGuardField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombInstrumentGuardField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombInstrumentGuardField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombInstrumentGuardField>())).InstrumentID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombInstrumentGuardField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombInstrumentGuardField>())).GuarantRatio as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombInstrumentGuardField),
            "::",
            stringify!(GuarantRatio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombInstrumentGuardField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombInstrumentGuardField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryCombInstrumentGuardField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryCombInstrumentGuardField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryCombInstrumentGuardField>(),
        51usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryCombInstrumentGuardField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryCombInstrumentGuardField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryCombInstrumentGuardField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombInstrumentGuardField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombInstrumentGuardField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombInstrumentGuardField>())).InstrumentID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombInstrumentGuardField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombInstrumentGuardField>())).ExchangeID as *const _
                as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombInstrumentGuardField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputCombActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub CombActionRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub Direction: TThostFtdcDirectionType,
    pub Volume: TThostFtdcVolumeType,
    pub CombDirection: TThostFtdcCombDirectionType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputCombActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputCombActionField>(),
        160usize,
        concat!("Size of: ", stringify!(CThostFtdcInputCombActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputCombActionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcInputCombActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).CombActionRef as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(CombActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).Direction as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).Volume as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).CombDirection as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(CombDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).HedgeFlag as *const _
                as usize
        },
        93usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).ExchangeID as *const _
                as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).IPAddress as *const _
                as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).MacAddress as *const _
                as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputCombActionField>())).InvestUnitID as *const _
                as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputCombActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcCombActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub CombActionRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub Direction: TThostFtdcDirectionType,
    pub Volume: TThostFtdcVolumeType,
    pub CombDirection: TThostFtdcCombDirectionType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub ActionStatus: TThostFtdcOrderActionStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub ComTradeID: TThostFtdcTradeIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCombActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCombActionField>(),
        408usize,
        concat!("Size of: ", stringify!(CThostFtdcCombActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCombActionField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcCombActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).CombActionRef as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(CombActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).Direction as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).Volume as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).CombDirection as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(CombDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).HedgeFlag as *const _ as usize
        },
        93usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).ActionLocalID as *const _ as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).ExchangeID as *const _ as usize
        },
        107usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).ParticipantID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).ClientID as *const _ as usize
        },
        127usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).ExchangeInstID as *const _
                as usize
        },
        138usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).TraderID as *const _ as usize
        },
        169usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).InstallID as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).ActionStatus as *const _ as usize
        },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(ActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).NotifySequence as *const _
                as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).TradingDay as *const _ as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).SettlementID as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).SequenceNo as *const _ as usize
        },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).FrontID as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).SessionID as *const _ as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).UserProductInfo as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).StatusMsg as *const _ as usize
        },
        243usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).IPAddress as *const _ as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).MacAddress as *const _ as usize
        },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).ComTradeID as *const _ as usize
        },
        361usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(ComTradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).BranchID as *const _ as usize
        },
        382usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombActionField>())).InvestUnitID as *const _ as usize
        },
        391usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
impl Default for CThostFtdcCombActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryCombActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryCombActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryCombActionField>(),
        81usize,
        concat!("Size of: ", stringify!(CThostFtdcQryCombActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryCombActionField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryCombActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombActionField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombActionField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombActionField>())).ExchangeID as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombActionField>())).InvestUnitID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeCombActionField {
    pub Direction: TThostFtdcDirectionType,
    pub Volume: TThostFtdcVolumeType,
    pub CombDirection: TThostFtdcCombDirectionType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub ActionStatus: TThostFtdcOrderActionStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub ComTradeID: TThostFtdcTradeIDType,
    pub BranchID: TThostFtdcBranchIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeCombActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeCombActionField>(),
        208usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeCombActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeCombActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeCombActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).Direction as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).Volume as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).CombDirection as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(CombDirection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).HedgeFlag as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).ActionLocalID as *const _
                as usize
        },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).ExchangeID as *const _
                as usize
        },
        23usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).ParticipantID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).ClientID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).ExchangeInstID as *const _
                as usize
        },
        54usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).TraderID as *const _
                as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).InstallID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).ActionStatus as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(ActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).NotifySequence as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).TradingDay as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).SettlementID as *const _
                as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).SequenceNo as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).IPAddress as *const _
                as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).MacAddress as *const _
                as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).ComTradeID as *const _
                as usize
        },
        177usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(ComTradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeCombActionField>())).BranchID as *const _
                as usize
        },
        198usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeCombActionField),
            "::",
            stringify!(BranchID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeCombActionField {
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeCombActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeCombActionField>(),
        83usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryExchangeCombActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeCombActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeCombActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeCombActionField>())).ParticipantID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeCombActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeCombActionField>())).ClientID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeCombActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeCombActionField>())).ExchangeInstID
                as *const _ as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeCombActionField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeCombActionField>())).ExchangeID as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeCombActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeCombActionField>())).TraderID as *const _
                as usize
        },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeCombActionField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcProductExchRateField {
    pub ProductID: TThostFtdcInstrumentIDType,
    pub QuoteCurrencyID: TThostFtdcCurrencyIDType,
    pub ExchangeRate: TThostFtdcExchangeRateType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcProductExchRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcProductExchRateField>(),
        64usize,
        concat!("Size of: ", stringify!(CThostFtdcProductExchRateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcProductExchRateField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcProductExchRateField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductExchRateField>())).ProductID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductExchRateField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductExchRateField>())).QuoteCurrencyID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductExchRateField),
            "::",
            stringify!(QuoteCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductExchRateField>())).ExchangeRate as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductExchRateField),
            "::",
            stringify!(ExchangeRate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductExchRateField>())).ExchangeID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductExchRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryProductExchRateField {
    pub ProductID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryProductExchRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryProductExchRateField>(),
        40usize,
        concat!("Size of: ", stringify!(CThostFtdcQryProductExchRateField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryProductExchRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryProductExchRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryProductExchRateField>())).ProductID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryProductExchRateField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryProductExchRateField>())).ExchangeID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryProductExchRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryForQuoteParamField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryForQuoteParamField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryForQuoteParamField>(),
        51usize,
        concat!("Size of: ", stringify!(CThostFtdcQryForQuoteParamField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryForQuoteParamField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryForQuoteParamField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteParamField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteParamField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteParamField>())).InstrumentID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteParamField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryForQuoteParamField>())).ExchangeID as *const _
                as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryForQuoteParamField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcForQuoteParamField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub LastPrice: TThostFtdcPriceType,
    pub PriceInterval: TThostFtdcPriceType,
}
#[test]
fn bindgen_test_layout_CThostFtdcForQuoteParamField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcForQuoteParamField>(),
        72usize,
        concat!("Size of: ", stringify!(CThostFtdcForQuoteParamField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcForQuoteParamField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcForQuoteParamField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteParamField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteParamField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteParamField>())).InstrumentID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteParamField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteParamField>())).ExchangeID as *const _ as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteParamField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteParamField>())).LastPrice as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteParamField),
            "::",
            stringify!(LastPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcForQuoteParamField>())).PriceInterval as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcForQuoteParamField),
            "::",
            stringify!(PriceInterval)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMMOptionInstrCommRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OpenRatioByMoney: TThostFtdcRatioType,
    pub OpenRatioByVolume: TThostFtdcRatioType,
    pub CloseRatioByMoney: TThostFtdcRatioType,
    pub CloseRatioByVolume: TThostFtdcRatioType,
    pub CloseTodayRatioByMoney: TThostFtdcRatioType,
    pub CloseTodayRatioByVolume: TThostFtdcRatioType,
    pub StrikeRatioByMoney: TThostFtdcRatioType,
    pub StrikeRatioByVolume: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMMOptionInstrCommRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMMOptionInstrCommRateField>(),
        120usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMMOptionInstrCommRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMMOptionInstrCommRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).InvestorID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).OpenRatioByMoney
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(OpenRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).OpenRatioByVolume
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(OpenRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).CloseRatioByMoney
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(CloseRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).CloseRatioByVolume
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(CloseRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).CloseTodayRatioByMoney
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(CloseTodayRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).CloseTodayRatioByVolume
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(CloseTodayRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).StrikeRatioByMoney
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(StrikeRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMOptionInstrCommRateField>())).StrikeRatioByVolume
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMOptionInstrCommRateField),
            "::",
            stringify!(StrikeRatioByVolume)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryMMOptionInstrCommRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryMMOptionInstrCommRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryMMOptionInstrCommRateField>(),
        55usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryMMOptionInstrCommRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryMMOptionInstrCommRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryMMOptionInstrCommRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMMOptionInstrCommRateField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMMOptionInstrCommRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMMOptionInstrCommRateField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMMOptionInstrCommRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMMOptionInstrCommRateField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMMOptionInstrCommRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMMInstrumentCommissionRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OpenRatioByMoney: TThostFtdcRatioType,
    pub OpenRatioByVolume: TThostFtdcRatioType,
    pub CloseRatioByMoney: TThostFtdcRatioType,
    pub CloseRatioByVolume: TThostFtdcRatioType,
    pub CloseTodayRatioByMoney: TThostFtdcRatioType,
    pub CloseTodayRatioByVolume: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMMInstrumentCommissionRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMMInstrumentCommissionRateField>(),
        104usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMMInstrumentCommissionRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).BrokerID
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).OpenRatioByMoney
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(OpenRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).OpenRatioByVolume
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(OpenRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).CloseRatioByMoney
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(CloseRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>())).CloseRatioByVolume
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(CloseRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>()))
                .CloseTodayRatioByMoney as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(CloseTodayRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMMInstrumentCommissionRateField>()))
                .CloseTodayRatioByVolume as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMMInstrumentCommissionRateField),
            "::",
            stringify!(CloseTodayRatioByVolume)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryMMInstrumentCommissionRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryMMInstrumentCommissionRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryMMInstrumentCommissionRateField>(),
        55usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryMMInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryMMInstrumentCommissionRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryMMInstrumentCommissionRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMMInstrumentCommissionRateField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMMInstrumentCommissionRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMMInstrumentCommissionRateField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMMInstrumentCommissionRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMMInstrumentCommissionRateField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMMInstrumentCommissionRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentOrderCommRateField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub OrderCommByVolume: TThostFtdcRatioType,
    pub OrderActionCommByVolume: TThostFtdcRatioType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentOrderCommRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentOrderCommRateField>(),
        112usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentOrderCommRateField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInstrumentOrderCommRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).HedgeFlag as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).OrderCommByVolume
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(OrderCommByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>()))
                .OrderActionCommByVolume as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(OrderActionCommByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).ExchangeID
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentOrderCommRateField>())).InvestUnitID
                as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentOrderCommRateField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInstrumentOrderCommRateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInstrumentOrderCommRateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInstrumentOrderCommRateField>(),
        55usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryInstrumentOrderCommRateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInstrumentOrderCommRateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInstrumentOrderCommRateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentOrderCommRateField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentOrderCommRateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentOrderCommRateField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentOrderCommRateField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentOrderCommRateField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentOrderCommRateField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTradeParamField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub TradeParamID: TThostFtdcTradeParamIDType,
    pub TradeParamValue: TThostFtdcSettlementParamValueType,
    pub Memo: TThostFtdcMemoType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradeParamField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradeParamField>(),
        429usize,
        concat!("Size of: ", stringify!(CThostFtdcTradeParamField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradeParamField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcTradeParamField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeParamField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeParamField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeParamField>())).TradeParamID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeParamField),
            "::",
            stringify!(TradeParamID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradeParamField>())).TradeParamValue as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeParamField),
            "::",
            stringify!(TradeParamValue)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcTradeParamField>())).Memo as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradeParamField),
            "::",
            stringify!(Memo)
        )
    );
}
impl Default for CThostFtdcTradeParamField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentMarginRateULField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub LongMarginRatioByMoney: TThostFtdcRatioType,
    pub LongMarginRatioByVolume: TThostFtdcMoneyType,
    pub ShortMarginRatioByMoney: TThostFtdcRatioType,
    pub ShortMarginRatioByVolume: TThostFtdcMoneyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentMarginRateULField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentMarginRateULField>(),
        96usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInstrumentMarginRateULField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentMarginRateULField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInstrumentMarginRateULField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>())).InvestorRange
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>())).BrokerID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>())).InvestorID as *const _
                as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>())).HedgeFlag as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>())).LongMarginRatioByMoney
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(LongMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>()))
                .LongMarginRatioByVolume as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(LongMarginRatioByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>()))
                .ShortMarginRatioByMoney as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(ShortMarginRatioByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentMarginRateULField>()))
                .ShortMarginRatioByVolume as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentMarginRateULField),
            "::",
            stringify!(ShortMarginRatioByVolume)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcFutureLimitPosiParamField {
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ProductID: TThostFtdcInstrumentIDType,
    pub SpecOpenVolume: TThostFtdcVolumeType,
    pub ArbiOpenVolume: TThostFtdcVolumeType,
    pub OpenVolume: TThostFtdcVolumeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcFutureLimitPosiParamField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcFutureLimitPosiParamField>(),
        68usize,
        concat!("Size of: ", stringify!(CThostFtdcFutureLimitPosiParamField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcFutureLimitPosiParamField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcFutureLimitPosiParamField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureLimitPosiParamField>())).InvestorRange
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureLimitPosiParamField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureLimitPosiParamField>())).BrokerID as *const _
                as usize
        },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureLimitPosiParamField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureLimitPosiParamField>())).InvestorID as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureLimitPosiParamField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureLimitPosiParamField>())).ProductID as *const _
                as usize
        },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureLimitPosiParamField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureLimitPosiParamField>())).SpecOpenVolume
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureLimitPosiParamField),
            "::",
            stringify!(SpecOpenVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureLimitPosiParamField>())).ArbiOpenVolume
                as *const _ as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureLimitPosiParamField),
            "::",
            stringify!(ArbiOpenVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureLimitPosiParamField>())).OpenVolume as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureLimitPosiParamField),
            "::",
            stringify!(OpenVolume)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcLoginForbiddenIPField {
    pub IPAddress: TThostFtdcIPAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcLoginForbiddenIPField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcLoginForbiddenIPField>(),
        16usize,
        concat!("Size of: ", stringify!(CThostFtdcLoginForbiddenIPField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcLoginForbiddenIPField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcLoginForbiddenIPField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginForbiddenIPField>())).IPAddress as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginForbiddenIPField),
            "::",
            stringify!(IPAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcIPListField {
    pub IPAddress: TThostFtdcIPAddressType,
    pub IsWhite: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcIPListField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcIPListField>(),
        20usize,
        concat!("Size of: ", stringify!(CThostFtdcIPListField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcIPListField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcIPListField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcIPListField>())).IPAddress as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcIPListField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcIPListField>())).IsWhite as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcIPListField),
            "::",
            stringify!(IsWhite)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputOptionSelfCloseField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OptionSelfCloseRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub Volume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub OptSelfCloseFlag: TThostFtdcOptSelfCloseFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputOptionSelfCloseField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputOptionSelfCloseField>(),
        208usize,
        concat!("Size of: ", stringify!(CThostFtdcInputOptionSelfCloseField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputOptionSelfCloseField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInputOptionSelfCloseField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).OptionSelfCloseRef
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(OptionSelfCloseRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).UserID as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).Volume as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).RequestID as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).BusinessUnit as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).HedgeFlag as *const _
                as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).OptSelfCloseFlag
                as *const _ as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(OptSelfCloseFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).ExchangeID as *const _
                as usize
        },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).InvestUnitID as *const _
                as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).AccountID as *const _
                as usize
        },
        141usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).CurrencyID as *const _
                as usize
        },
        154usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).ClientID as *const _
                as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).IPAddress as *const _
                as usize
        },
        169usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseField>())).MacAddress as *const _
                as usize
        },
        185usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInputOptionSelfCloseActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OptionSelfCloseActionRef: TThostFtdcOrderActionRefType,
    pub OptionSelfCloseRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OptionSelfCloseSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub UserID: TThostFtdcUserIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInputOptionSelfCloseActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInputOptionSelfCloseActionField>(),
        188usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInputOptionSelfCloseActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>()))
                .OptionSelfCloseActionRef as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).OptionSelfCloseRef
                as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).RequestID
                as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).FrontID
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).SessionID
                as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).ExchangeID
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>()))
                .OptionSelfCloseSysID as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).ActionFlag
                as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).UserID as *const _
                as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).InstrumentID
                as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).InvestUnitID
                as *const _ as usize
        },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).IPAddress
                as *const _ as usize
        },
        151usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInputOptionSelfCloseActionField>())).MacAddress
                as *const _ as usize
        },
        167usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInputOptionSelfCloseActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcOptionSelfCloseField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OptionSelfCloseRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub Volume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub OptSelfCloseFlag: TThostFtdcOptSelfCloseFlagType,
    pub OptionSelfCloseLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub OptionSelfCloseSysID: TThostFtdcOrderSysIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub ExecResult: TThostFtdcExecResultType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub ActiveUserID: TThostFtdcUserIDType,
    pub BrokerOptionSelfCloseSeq: TThostFtdcSequenceNoType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionSelfCloseField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionSelfCloseField>(),
        504usize,
        concat!("Size of: ", stringify!(CThostFtdcOptionSelfCloseField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionSelfCloseField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcOptionSelfCloseField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).OptionSelfCloseRef
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(OptionSelfCloseRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).Volume as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).RequestID as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).BusinessUnit as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).HedgeFlag as *const _
                as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).OptSelfCloseFlag as *const _
                as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(OptSelfCloseFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).OptionSelfCloseLocalID
                as *const _ as usize
        },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(OptionSelfCloseLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).ExchangeID as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).ParticipantID as *const _
                as usize
        },
        137usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).ClientID as *const _ as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).ExchangeInstID as *const _
                as usize
        },
        159usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).TraderID as *const _ as usize
        },
        190usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).InstallID as *const _
                as usize
        },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).OrderSubmitStatus as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).NotifySequence as *const _
                as usize
        },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).TradingDay as *const _
                as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).SettlementID as *const _
                as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).OptionSelfCloseSysID
                as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(OptionSelfCloseSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).InsertDate as *const _
                as usize
        },
        261usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).InsertTime as *const _
                as usize
        },
        270usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).CancelTime as *const _
                as usize
        },
        279usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).ExecResult as *const _
                as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(ExecResult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).ClearingPartID as *const _
                as usize
        },
        289usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).SequenceNo as *const _
                as usize
        },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).FrontID as *const _ as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).SessionID as *const _
                as usize
        },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).UserProductInfo as *const _
                as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).StatusMsg as *const _
                as usize
        },
        323usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).ActiveUserID as *const _
                as usize
        },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(ActiveUserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).BrokerOptionSelfCloseSeq
                as *const _ as usize
        },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(BrokerOptionSelfCloseSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).BranchID as *const _ as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).InvestUnitID as *const _
                as usize
        },
        433usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).AccountID as *const _
                as usize
        },
        450usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).CurrencyID as *const _
                as usize
        },
        463usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).IPAddress as *const _
                as usize
        },
        467usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseField>())).MacAddress as *const _
                as usize
        },
        483usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcOptionSelfCloseField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcOptionSelfCloseActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OptionSelfCloseActionRef: TThostFtdcOrderActionRefType,
    pub OptionSelfCloseRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OptionSelfCloseSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OptionSelfCloseLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOptionSelfCloseActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOptionSelfCloseActionField>(),
        396usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOptionSelfCloseActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>()))
                .OptionSelfCloseActionRef as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).OptionSelfCloseRef
                as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).RequestID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).FrontID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).SessionID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).OptionSelfCloseSysID
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).ActionDate as *const _
                as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).ActionTime as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).TraderID as *const _
                as usize
        },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).InstallID as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).OptionSelfCloseLocalID
                as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).ActionLocalID
                as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).ParticipantID
                as *const _ as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).ClientID as *const _
                as usize
        },
        169usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).BusinessUnit
                as *const _ as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).OrderActionStatus
                as *const _ as usize
        },
        201usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).UserID as *const _
                as usize
        },
        202usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).StatusMsg as *const _
                as usize
        },
        218usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).InstrumentID
                as *const _ as usize
        },
        299usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).BranchID as *const _
                as usize
        },
        330usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).InvestUnitID
                as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).IPAddress as *const _
                as usize
        },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOptionSelfCloseActionField>())).MacAddress as *const _
                as usize
        },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOptionSelfCloseActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcOptionSelfCloseActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryOptionSelfCloseField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OptionSelfCloseSysID: TThostFtdcOrderSysIDType,
    pub InsertTimeStart: TThostFtdcTimeType,
    pub InsertTimeEnd: TThostFtdcTimeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryOptionSelfCloseField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryOptionSelfCloseField>(),
        103usize,
        concat!("Size of: ", stringify!(CThostFtdcQryOptionSelfCloseField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryOptionSelfCloseField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryOptionSelfCloseField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseField>())).ExchangeID as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseField>())).OptionSelfCloseSysID
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseField),
            "::",
            stringify!(OptionSelfCloseSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseField>())).InsertTimeStart
                as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseField),
            "::",
            stringify!(InsertTimeStart)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseField>())).InsertTimeEnd as *const _
                as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseField),
            "::",
            stringify!(InsertTimeEnd)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeOptionSelfCloseField {
    pub Volume: TThostFtdcVolumeType,
    pub RequestID: TThostFtdcRequestIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub OptSelfCloseFlag: TThostFtdcOptSelfCloseFlagType,
    pub OptionSelfCloseLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub OptionSelfCloseSysID: TThostFtdcOrderSysIDType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub ExecResult: TThostFtdcExecResultType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub BranchID: TThostFtdcBranchIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeOptionSelfCloseField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeOptionSelfCloseField>(),
        268usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeOptionSelfCloseField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).Volume as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).RequestID as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).BusinessUnit
                as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).HedgeFlag as *const _
                as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).OptSelfCloseFlag
                as *const _ as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(OptSelfCloseFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>()))
                .OptionSelfCloseLocalID as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(OptionSelfCloseLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).ExchangeID
                as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).ParticipantID
                as *const _ as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).ClientID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).ExchangeInstID
                as *const _ as usize
        },
        75usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).TraderID as *const _
                as usize
        },
        106usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).InstallID as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).OrderSubmitStatus
                as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).NotifySequence
                as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).TradingDay
                as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).SettlementID
                as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).OptionSelfCloseSysID
                as *const _ as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(OptionSelfCloseSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).InsertDate
                as *const _ as usize
        },
        177usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).InsertTime
                as *const _ as usize
        },
        186usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).CancelTime
                as *const _ as usize
        },
        195usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).ExecResult
                as *const _ as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(ExecResult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).ClearingPartID
                as *const _ as usize
        },
        205usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).SequenceNo
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).BranchID as *const _
                as usize
        },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).IPAddress as *const _
                as usize
        },
        229usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseField>())).MacAddress
                as *const _ as usize
        },
        245usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryOptionSelfCloseActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryOptionSelfCloseActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryOptionSelfCloseActionField>(),
        33usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryOptionSelfCloseActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseActionField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryOptionSelfCloseActionField>())).ExchangeID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryOptionSelfCloseActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeOptionSelfCloseActionField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OptionSelfCloseSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OptionSelfCloseLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeOptionSelfCloseActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeOptionSelfCloseActionField>(),
        208usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeOptionSelfCloseActionField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).ExchangeID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>()))
                .OptionSelfCloseSysID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).ActionFlag
                as *const _ as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).ActionDate
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).ActionTime
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).TraderID
                as *const _ as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).InstallID
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>()))
                .OptionSelfCloseLocalID as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(OptionSelfCloseLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).ActionLocalID
                as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).ParticipantID
                as *const _ as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).ClientID
                as *const _ as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).BusinessUnit
                as *const _ as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>()))
                .OrderActionStatus as *const _ as usize
        },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).UserID
                as *const _ as usize
        },
        146usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).BranchID
                as *const _ as usize
        },
        162usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).IPAddress
                as *const _ as usize
        },
        171usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeOptionSelfCloseActionField>())).MacAddress
                as *const _ as usize
        },
        187usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeOptionSelfCloseActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncDelaySwapField {
    pub DelaySwapSeqNo: TThostFtdcDepositSeqNoType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub FromCurrencyID: TThostFtdcCurrencyIDType,
    pub FromAmount: TThostFtdcMoneyType,
    pub FromFrozenSwap: TThostFtdcMoneyType,
    pub FromRemainSwap: TThostFtdcMoneyType,
    pub ToCurrencyID: TThostFtdcCurrencyIDType,
    pub ToAmount: TThostFtdcMoneyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncDelaySwapField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncDelaySwapField>(),
        88usize,
        concat!("Size of: ", stringify!(CThostFtdcSyncDelaySwapField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncDelaySwapField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcSyncDelaySwapField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).DelaySwapSeqNo as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(DelaySwapSeqNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).BrokerID as *const _ as usize
        },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).InvestorID as *const _ as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).FromCurrencyID as *const _
                as usize
        },
        39usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(FromCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).FromAmount as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(FromAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).FromFrozenSwap as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(FromFrozenSwap)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).FromRemainSwap as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(FromRemainSwap)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).ToCurrencyID as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(ToCurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncDelaySwapField>())).ToAmount as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncDelaySwapField),
            "::",
            stringify!(ToAmount)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySyncDelaySwapField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub DelaySwapSeqNo: TThostFtdcDepositSeqNoType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySyncDelaySwapField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySyncDelaySwapField>(),
        26usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySyncDelaySwapField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySyncDelaySwapField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQrySyncDelaySwapField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySyncDelaySwapField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySyncDelaySwapField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySyncDelaySwapField>())).DelaySwapSeqNo as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySyncDelaySwapField),
            "::",
            stringify!(DelaySwapSeqNo)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcInvestUnitField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub InvestorUnitName: TThostFtdcPartyNameType,
    pub InvestorGroupID: TThostFtdcInvestorIDType,
    pub CommModelID: TThostFtdcInvestorIDType,
    pub MarginModelID: TThostFtdcInvestorIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestUnitField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestUnitField>(),
        178usize,
        concat!("Size of: ", stringify!(CThostFtdcInvestUnitField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestUnitField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcInvestUnitField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).InvestUnitID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).InvestorUnitName as *const _
                as usize
        },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(InvestorUnitName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).InvestorGroupID as *const _
                as usize
        },
        122usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(InvestorGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).CommModelID as *const _ as usize
        },
        135usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(CommModelID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).MarginModelID as *const _ as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(MarginModelID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).AccountID as *const _ as usize
        },
        161usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestUnitField>())).CurrencyID as *const _ as usize
        },
        174usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestUnitField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
impl Default for CThostFtdcInvestUnitField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInvestUnitField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInvestUnitField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInvestUnitField>(),
        41usize,
        concat!("Size of: ", stringify!(CThostFtdcQryInvestUnitField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInvestUnitField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryInvestUnitField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestUnitField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestUnitField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestUnitField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestUnitField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestUnitField>())).InvestUnitID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestUnitField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataField {
    pub TradingDay: TThostFtdcDateType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub LastPrice: TThostFtdcPriceType,
    pub PreSettlementPrice: TThostFtdcPriceType,
    pub PreClosePrice: TThostFtdcPriceType,
    pub PreOpenInterest: TThostFtdcLargeVolumeType,
    pub OpenPrice: TThostFtdcPriceType,
    pub HighestPrice: TThostFtdcPriceType,
    pub LowestPrice: TThostFtdcPriceType,
    pub Volume: TThostFtdcVolumeType,
    pub Turnover: TThostFtdcMoneyType,
    pub OpenInterest: TThostFtdcLargeVolumeType,
    pub ClosePrice: TThostFtdcPriceType,
    pub SettlementPrice: TThostFtdcPriceType,
    pub UpperLimitPrice: TThostFtdcPriceType,
    pub LowerLimitPrice: TThostFtdcPriceType,
    pub PreDelta: TThostFtdcRatioType,
    pub CurrDelta: TThostFtdcRatioType,
    pub UpdateTime: TThostFtdcTimeType,
    pub UpdateMillisec: TThostFtdcMillisecType,
    pub ActionDay: TThostFtdcDateType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataField>(),
        240usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarketDataField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).InstrumentID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).ExchangeID as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).ExchangeInstID as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).LastPrice as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(LastPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).PreSettlementPrice as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(PreSettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).PreClosePrice as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(PreClosePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).PreOpenInterest as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(PreOpenInterest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).OpenPrice as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(OpenPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).HighestPrice as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(HighestPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).LowestPrice as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(LowestPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).Volume as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).Turnover as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(Turnover)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).OpenInterest as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(OpenInterest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).ClosePrice as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(ClosePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).SettlementPrice as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(SettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).UpperLimitPrice as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(UpperLimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).LowerLimitPrice as *const _
                as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(LowerLimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).PreDelta as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(PreDelta)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).CurrDelta as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(CurrDelta)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).UpdateTime as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(UpdateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).UpdateMillisec as *const _
                as usize
        },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(UpdateMillisec)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataField>())).ActionDay as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataField),
            "::",
            stringify!(ActionDay)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataBaseField {
    pub TradingDay: TThostFtdcDateType,
    pub PreSettlementPrice: TThostFtdcPriceType,
    pub PreClosePrice: TThostFtdcPriceType,
    pub PreOpenInterest: TThostFtdcLargeVolumeType,
    pub PreDelta: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataBaseField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataBaseField>(),
        48usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataBaseField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataBaseField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarketDataBaseField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBaseField>())).TradingDay as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBaseField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBaseField>())).PreSettlementPrice as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBaseField),
            "::",
            stringify!(PreSettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBaseField>())).PreClosePrice as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBaseField),
            "::",
            stringify!(PreClosePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBaseField>())).PreOpenInterest as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBaseField),
            "::",
            stringify!(PreOpenInterest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBaseField>())).PreDelta as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBaseField),
            "::",
            stringify!(PreDelta)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataStaticField {
    pub OpenPrice: TThostFtdcPriceType,
    pub HighestPrice: TThostFtdcPriceType,
    pub LowestPrice: TThostFtdcPriceType,
    pub ClosePrice: TThostFtdcPriceType,
    pub UpperLimitPrice: TThostFtdcPriceType,
    pub LowerLimitPrice: TThostFtdcPriceType,
    pub SettlementPrice: TThostFtdcPriceType,
    pub CurrDelta: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataStaticField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataStaticField>(),
        64usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataStaticField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataStaticField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarketDataStaticField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).OpenPrice as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(OpenPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).HighestPrice as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(HighestPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).LowestPrice as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(LowestPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).ClosePrice as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(ClosePrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).UpperLimitPrice as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(UpperLimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).LowerLimitPrice as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(LowerLimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).SettlementPrice as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(SettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataStaticField>())).CurrDelta as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataStaticField),
            "::",
            stringify!(CurrDelta)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataLastMatchField {
    pub LastPrice: TThostFtdcPriceType,
    pub Volume: TThostFtdcVolumeType,
    pub Turnover: TThostFtdcMoneyType,
    pub OpenInterest: TThostFtdcLargeVolumeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataLastMatchField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataLastMatchField>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataLastMatchField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataLastMatchField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMarketDataLastMatchField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataLastMatchField>())).LastPrice as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataLastMatchField),
            "::",
            stringify!(LastPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataLastMatchField>())).Volume as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataLastMatchField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataLastMatchField>())).Turnover as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataLastMatchField),
            "::",
            stringify!(Turnover)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataLastMatchField>())).OpenInterest as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataLastMatchField),
            "::",
            stringify!(OpenInterest)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataBestPriceField {
    pub BidPrice1: TThostFtdcPriceType,
    pub BidVolume1: TThostFtdcVolumeType,
    pub AskPrice1: TThostFtdcPriceType,
    pub AskVolume1: TThostFtdcVolumeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataBestPriceField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataBestPriceField>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataBestPriceField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataBestPriceField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMarketDataBestPriceField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBestPriceField>())).BidPrice1 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBestPriceField),
            "::",
            stringify!(BidPrice1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBestPriceField>())).BidVolume1 as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBestPriceField),
            "::",
            stringify!(BidVolume1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBestPriceField>())).AskPrice1 as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBestPriceField),
            "::",
            stringify!(AskPrice1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBestPriceField>())).AskVolume1 as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBestPriceField),
            "::",
            stringify!(AskVolume1)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataBid23Field {
    pub BidPrice2: TThostFtdcPriceType,
    pub BidVolume2: TThostFtdcVolumeType,
    pub BidPrice3: TThostFtdcPriceType,
    pub BidVolume3: TThostFtdcVolumeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataBid23Field() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataBid23Field>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataBid23Field))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataBid23Field>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarketDataBid23Field))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid23Field>())).BidPrice2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid23Field),
            "::",
            stringify!(BidPrice2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid23Field>())).BidVolume2 as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid23Field),
            "::",
            stringify!(BidVolume2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid23Field>())).BidPrice3 as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid23Field),
            "::",
            stringify!(BidPrice3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid23Field>())).BidVolume3 as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid23Field),
            "::",
            stringify!(BidVolume3)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataAsk23Field {
    pub AskPrice2: TThostFtdcPriceType,
    pub AskVolume2: TThostFtdcVolumeType,
    pub AskPrice3: TThostFtdcPriceType,
    pub AskVolume3: TThostFtdcVolumeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataAsk23Field() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataAsk23Field>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataAsk23Field))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataAsk23Field>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarketDataAsk23Field))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk23Field>())).AskPrice2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk23Field),
            "::",
            stringify!(AskPrice2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk23Field>())).AskVolume2 as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk23Field),
            "::",
            stringify!(AskVolume2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk23Field>())).AskPrice3 as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk23Field),
            "::",
            stringify!(AskPrice3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk23Field>())).AskVolume3 as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk23Field),
            "::",
            stringify!(AskVolume3)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataBid45Field {
    pub BidPrice4: TThostFtdcPriceType,
    pub BidVolume4: TThostFtdcVolumeType,
    pub BidPrice5: TThostFtdcPriceType,
    pub BidVolume5: TThostFtdcVolumeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataBid45Field() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataBid45Field>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataBid45Field))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataBid45Field>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarketDataBid45Field))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid45Field>())).BidPrice4 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid45Field),
            "::",
            stringify!(BidPrice4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid45Field>())).BidVolume4 as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid45Field),
            "::",
            stringify!(BidVolume4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid45Field>())).BidPrice5 as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid45Field),
            "::",
            stringify!(BidPrice5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataBid45Field>())).BidVolume5 as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataBid45Field),
            "::",
            stringify!(BidVolume5)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataAsk45Field {
    pub AskPrice4: TThostFtdcPriceType,
    pub AskVolume4: TThostFtdcVolumeType,
    pub AskPrice5: TThostFtdcPriceType,
    pub AskVolume5: TThostFtdcVolumeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataAsk45Field() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataAsk45Field>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataAsk45Field))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataAsk45Field>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarketDataAsk45Field))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk45Field>())).AskPrice4 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk45Field),
            "::",
            stringify!(AskPrice4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk45Field>())).AskVolume4 as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk45Field),
            "::",
            stringify!(AskVolume4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk45Field>())).AskPrice5 as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk45Field),
            "::",
            stringify!(AskPrice5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAsk45Field>())).AskVolume5 as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAsk45Field),
            "::",
            stringify!(AskVolume5)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataUpdateTimeField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub UpdateTime: TThostFtdcTimeType,
    pub UpdateMillisec: TThostFtdcMillisecType,
    pub ActionDay: TThostFtdcDateType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataUpdateTimeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataUpdateTimeField>(),
        56usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataUpdateTimeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataUpdateTimeField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMarketDataUpdateTimeField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataUpdateTimeField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataUpdateTimeField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataUpdateTimeField>())).UpdateTime as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataUpdateTimeField),
            "::",
            stringify!(UpdateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataUpdateTimeField>())).UpdateMillisec
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataUpdateTimeField),
            "::",
            stringify!(UpdateMillisec)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataUpdateTimeField>())).ActionDay as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataUpdateTimeField),
            "::",
            stringify!(ActionDay)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataExchangeField {
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataExchangeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataExchangeField>(),
        9usize,
        concat!("Size of: ", stringify!(CThostFtdcMarketDataExchangeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataExchangeField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMarketDataExchangeField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataExchangeField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataExchangeField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSpecificInstrumentField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSpecificInstrumentField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSpecificInstrumentField>(),
        31usize,
        concat!("Size of: ", stringify!(CThostFtdcSpecificInstrumentField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSpecificInstrumentField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcSpecificInstrumentField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSpecificInstrumentField>())).InstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSpecificInstrumentField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInstrumentStatusField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub SettlementGroupID: TThostFtdcSettlementGroupIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InstrumentStatus: TThostFtdcInstrumentStatusType,
    pub TradingSegmentSN: TThostFtdcTradingSegmentSNType,
    pub EnterTime: TThostFtdcTimeType,
    pub EnterReason: TThostFtdcInstStatusEnterReasonType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInstrumentStatusField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInstrumentStatusField>(),
        100usize,
        concat!("Size of: ", stringify!(CThostFtdcInstrumentStatusField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInstrumentStatusField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcInstrumentStatusField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).ExchangeInstID as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).SettlementGroupID
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(SettlementGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).InstrumentID as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).InstrumentStatus as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(InstrumentStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).TradingSegmentSN as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(TradingSegmentSN)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).EnterTime as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(EnterTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInstrumentStatusField>())).EnterReason as *const _
                as usize
        },
        97usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInstrumentStatusField),
            "::",
            stringify!(EnterReason)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInstrumentStatusField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInstrumentStatusField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInstrumentStatusField>(),
        40usize,
        concat!("Size of: ", stringify!(CThostFtdcQryInstrumentStatusField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInstrumentStatusField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInstrumentStatusField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentStatusField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentStatusField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInstrumentStatusField>())).ExchangeInstID
                as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInstrumentStatusField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInvestorAccountField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorAccountField>(),
        41usize,
        concat!("Size of: ", stringify!(CThostFtdcInvestorAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorAccountField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcInvestorAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorAccountField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorAccountField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorAccountField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorAccountField>())).AccountID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorAccountField>())).CurrencyID as *const _
                as usize
        },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcPositionProfitAlgorithmField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Algorithm: TThostFtdcAlgorithmType,
    pub Memo: TThostFtdcMemoType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcPositionProfitAlgorithmField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcPositionProfitAlgorithmField>(),
        190usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcPositionProfitAlgorithmField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcPositionProfitAlgorithmField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcPositionProfitAlgorithmField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPositionProfitAlgorithmField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPositionProfitAlgorithmField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPositionProfitAlgorithmField>())).AccountID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPositionProfitAlgorithmField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPositionProfitAlgorithmField>())).Algorithm as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPositionProfitAlgorithmField),
            "::",
            stringify!(Algorithm)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPositionProfitAlgorithmField>())).Memo as *const _
                as usize
        },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPositionProfitAlgorithmField),
            "::",
            stringify!(Memo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcPositionProfitAlgorithmField>())).CurrencyID
                as *const _ as usize
        },
        186usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcPositionProfitAlgorithmField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
impl Default for CThostFtdcPositionProfitAlgorithmField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcDiscountField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub Discount: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcDiscountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcDiscountField>(),
        40usize,
        concat!("Size of: ", stringify!(CThostFtdcDiscountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcDiscountField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcDiscountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDiscountField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDiscountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDiscountField>())).InvestorRange as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDiscountField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDiscountField>())).InvestorID as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDiscountField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDiscountField>())).Discount as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDiscountField),
            "::",
            stringify!(Discount)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTransferBankField {
    pub BankID: TThostFtdcBankIDType,
    pub BankBrchID: TThostFtdcBankBrchIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTransferBankField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTransferBankField>(),
        9usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTransferBankField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTransferBankField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryTransferBankField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTransferBankField>())).BankID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTransferBankField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTransferBankField>())).BankBrchID as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTransferBankField),
            "::",
            stringify!(BankBrchID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTransferBankField {
    pub BankID: TThostFtdcBankIDType,
    pub BankBrchID: TThostFtdcBankBrchIDType,
    pub BankName: TThostFtdcBankNameType,
    pub IsActive: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferBankField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferBankField>(),
        116usize,
        concat!("Size of: ", stringify!(CThostFtdcTransferBankField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferBankField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcTransferBankField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankField>())).BankID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankField>())).BankBrchID as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankField),
            "::",
            stringify!(BankBrchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankField>())).BankName as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankField),
            "::",
            stringify!(BankName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferBankField>())).IsActive as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferBankField),
            "::",
            stringify!(IsActive)
        )
    );
}
impl Default for CThostFtdcTransferBankField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInvestorPositionDetailField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInvestorPositionDetailField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInvestorPositionDetailField>(),
        81usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryInvestorPositionDetailField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInvestorPositionDetailField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInvestorPositionDetailField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionDetailField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionDetailField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionDetailField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionDetailField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionDetailField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionDetailField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionDetailField>())).ExchangeID
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionDetailField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionDetailField>())).InvestUnitID
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionDetailField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInvestorPositionDetailField {
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub Direction: TThostFtdcDirectionType,
    pub OpenDate: TThostFtdcDateType,
    pub TradeID: TThostFtdcTradeIDType,
    pub Volume: TThostFtdcVolumeType,
    pub OpenPrice: TThostFtdcPriceType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub TradeType: TThostFtdcTradeTypeType,
    pub CombInstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub CloseProfitByDate: TThostFtdcMoneyType,
    pub CloseProfitByTrade: TThostFtdcMoneyType,
    pub PositionProfitByDate: TThostFtdcMoneyType,
    pub PositionProfitByTrade: TThostFtdcMoneyType,
    pub Margin: TThostFtdcMoneyType,
    pub ExchMargin: TThostFtdcMoneyType,
    pub MarginRateByMoney: TThostFtdcRatioType,
    pub MarginRateByVolume: TThostFtdcRatioType,
    pub LastSettlementPrice: TThostFtdcPriceType,
    pub SettlementPrice: TThostFtdcPriceType,
    pub CloseVolume: TThostFtdcVolumeType,
    pub CloseAmount: TThostFtdcMoneyType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorPositionDetailField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorPositionDetailField>(),
        288usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInvestorPositionDetailField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorPositionDetailField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInvestorPositionDetailField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).InstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).BrokerID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).InvestorID as *const _
                as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).HedgeFlag as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).Direction as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).OpenDate as *const _
                as usize
        },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(OpenDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).TradeID as *const _
                as usize
        },
        66usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(TradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).Volume as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).OpenPrice as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(OpenPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).TradingDay as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).SettlementID
                as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).TradeType as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(TradeType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).CombInstrumentID
                as *const _ as usize
        },
        121usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(CombInstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).ExchangeID as *const _
                as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).CloseProfitByDate
                as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(CloseProfitByDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).CloseProfitByTrade
                as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(CloseProfitByTrade)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).PositionProfitByDate
                as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(PositionProfitByDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).PositionProfitByTrade
                as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(PositionProfitByTrade)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).Margin as *const _
                as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(Margin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).ExchMargin as *const _
                as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(ExchMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).MarginRateByMoney
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(MarginRateByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).MarginRateByVolume
                as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(MarginRateByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).LastSettlementPrice
                as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(LastSettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).SettlementPrice
                as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(SettlementPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).CloseVolume
                as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(CloseVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).CloseAmount
                as *const _ as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(CloseAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionDetailField>())).InvestUnitID
                as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionDetailField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTradingAccountPasswordField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingAccountPasswordField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingAccountPasswordField>(),
        69usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTradingAccountPasswordField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingAccountPasswordField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTradingAccountPasswordField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordField>())).AccountID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordField>())).Password as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordField>())).CurrencyID as *const _
                as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
impl Default for CThostFtdcTradingAccountPasswordField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcMDTraderOfferField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub TraderConnectStatus: TThostFtdcTraderConnectStatusType,
    pub ConnectRequestDate: TThostFtdcDateType,
    pub ConnectRequestTime: TThostFtdcTimeType,
    pub LastReportDate: TThostFtdcDateType,
    pub LastReportTime: TThostFtdcTimeType,
    pub ConnectDate: TThostFtdcDateType,
    pub ConnectTime: TThostFtdcTimeType,
    pub StartDate: TThostFtdcDateType,
    pub StartTime: TThostFtdcTimeType,
    pub TradingDay: TThostFtdcDateType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub MaxTradeID: TThostFtdcTradeIDType,
    pub MaxOrderMessageReference: TThostFtdcReturnCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMDTraderOfferField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMDTraderOfferField>(),
        224usize,
        concat!("Size of: ", stringify!(CThostFtdcMDTraderOfferField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMDTraderOfferField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcMDTraderOfferField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).TraderID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).ParticipantID as *const _
                as usize
        },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).Password as *const _ as usize
        },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).InstallID as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).OrderLocalID as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).TraderConnectStatus as *const _
                as usize
        },
        101usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(TraderConnectStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).ConnectRequestDate as *const _
                as usize
        },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(ConnectRequestDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).ConnectRequestTime as *const _
                as usize
        },
        111usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(ConnectRequestTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).LastReportDate as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(LastReportDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).LastReportTime as *const _
                as usize
        },
        129usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(LastReportTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).ConnectDate as *const _
                as usize
        },
        138usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(ConnectDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).ConnectTime as *const _
                as usize
        },
        147usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(ConnectTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).StartDate as *const _ as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(StartDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).StartTime as *const _ as usize
        },
        165usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(StartTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).TradingDay as *const _ as usize
        },
        174usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).BrokerID as *const _ as usize
        },
        183usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).MaxTradeID as *const _ as usize
        },
        194usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(MaxTradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMDTraderOfferField>())).MaxOrderMessageReference
                as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMDTraderOfferField),
            "::",
            stringify!(MaxOrderMessageReference)
        )
    );
}
impl Default for CThostFtdcMDTraderOfferField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryMDTraderOfferField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub TraderID: TThostFtdcTraderIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryMDTraderOfferField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryMDTraderOfferField>(),
        41usize,
        concat!("Size of: ", stringify!(CThostFtdcQryMDTraderOfferField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryMDTraderOfferField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryMDTraderOfferField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMDTraderOfferField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMDTraderOfferField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMDTraderOfferField>())).ParticipantID as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMDTraderOfferField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMDTraderOfferField>())).TraderID as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMDTraderOfferField),
            "::",
            stringify!(TraderID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryNoticeField {
    pub BrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryNoticeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryNoticeField>(),
        11usize,
        concat!("Size of: ", stringify!(CThostFtdcQryNoticeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryNoticeField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryNoticeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryNoticeField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryNoticeField),
            "::",
            stringify!(BrokerID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcNoticeField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub Content: TThostFtdcContentType,
    pub SequenceLabel: TThostFtdcSequenceLabelType,
}
#[test]
fn bindgen_test_layout_CThostFtdcNoticeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcNoticeField>(),
        514usize,
        concat!("Size of: ", stringify!(CThostFtdcNoticeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcNoticeField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcNoticeField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcNoticeField>())).BrokerID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNoticeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcNoticeField>())).Content as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNoticeField),
            "::",
            stringify!(Content)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNoticeField>())).SequenceLabel as *const _ as usize
        },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNoticeField),
            "::",
            stringify!(SequenceLabel)
        )
    );
}
impl Default for CThostFtdcNoticeField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcUserRightField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub UserRightType: TThostFtdcUserRightTypeType,
    pub IsForbidden: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcUserRightField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcUserRightField>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcUserRightField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcUserRightField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcUserRightField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserRightField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserRightField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcUserRightField>())).UserID as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserRightField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserRightField>())).UserRightType as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserRightField),
            "::",
            stringify!(UserRightType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserRightField>())).IsForbidden as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserRightField),
            "::",
            stringify!(IsForbidden)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySettlementInfoConfirmField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySettlementInfoConfirmField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySettlementInfoConfirmField>(),
        41usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQrySettlementInfoConfirmField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySettlementInfoConfirmField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQrySettlementInfoConfirmField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoConfirmField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoConfirmField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoConfirmField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoConfirmField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoConfirmField>())).AccountID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoConfirmField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySettlementInfoConfirmField>())).CurrencyID
                as *const _ as usize
        },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySettlementInfoConfirmField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcLoadSettlementInfoField {
    pub BrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcLoadSettlementInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcLoadSettlementInfoField>(),
        11usize,
        concat!("Size of: ", stringify!(CThostFtdcLoadSettlementInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcLoadSettlementInfoField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcLoadSettlementInfoField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoadSettlementInfoField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoadSettlementInfoField),
            "::",
            stringify!(BrokerID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcBrokerWithdrawAlgorithmField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub WithdrawAlgorithm: TThostFtdcAlgorithmType,
    pub UsingRatio: TThostFtdcRatioType,
    pub IncludeCloseProfit: TThostFtdcIncludeCloseProfitType,
    pub AllWithoutTrade: TThostFtdcAllWithoutTradeType,
    pub AvailIncludeCloseProfit: TThostFtdcIncludeCloseProfitType,
    pub IsBrokerUserEvent: TThostFtdcBoolType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub FundMortgageRatio: TThostFtdcRatioType,
    pub BalanceAlgorithm: TThostFtdcBalanceAlgorithmType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerWithdrawAlgorithmField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerWithdrawAlgorithmField>(),
        56usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerWithdrawAlgorithmField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).WithdrawAlgorithm
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(WithdrawAlgorithm)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).UsingRatio
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(UsingRatio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).IncludeCloseProfit
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(IncludeCloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).AllWithoutTrade
                as *const _ as usize
        },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(AllWithoutTrade)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>()))
                .AvailIncludeCloseProfit as *const _ as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(AvailIncludeCloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).IsBrokerUserEvent
                as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(IsBrokerUserEvent)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).CurrencyID
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).FundMortgageRatio
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(FundMortgageRatio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerWithdrawAlgorithmField>())).BalanceAlgorithm
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerWithdrawAlgorithmField),
            "::",
            stringify!(BalanceAlgorithm)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTradingAccountPasswordUpdateV1Field {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OldPassword: TThostFtdcPasswordType,
    pub NewPassword: TThostFtdcPasswordType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingAccountPasswordUpdateV1Field() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingAccountPasswordUpdateV1Field>(),
        106usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateV1Field)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingAccountPasswordUpdateV1Field>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateV1Field)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateV1Field>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateV1Field),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateV1Field>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateV1Field),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateV1Field>())).OldPassword
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateV1Field),
            "::",
            stringify!(OldPassword)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateV1Field>())).NewPassword
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateV1Field),
            "::",
            stringify!(NewPassword)
        )
    );
}
impl Default for CThostFtdcTradingAccountPasswordUpdateV1Field {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTradingAccountPasswordUpdateField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub OldPassword: TThostFtdcPasswordType,
    pub NewPassword: TThostFtdcPasswordType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingAccountPasswordUpdateField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingAccountPasswordUpdateField>(),
        110usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingAccountPasswordUpdateField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateField>())).AccountID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateField>())).OldPassword
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateField),
            "::",
            stringify!(OldPassword)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateField>())).NewPassword
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateField),
            "::",
            stringify!(NewPassword)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountPasswordUpdateField>())).CurrencyID
                as *const _ as usize
        },
        106usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountPasswordUpdateField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
impl Default for CThostFtdcTradingAccountPasswordUpdateField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryCombinationLegField {
    pub CombInstrumentID: TThostFtdcInstrumentIDType,
    pub LegID: TThostFtdcLegIDType,
    pub LegInstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryCombinationLegField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryCombinationLegField>(),
        68usize,
        concat!("Size of: ", stringify!(CThostFtdcQryCombinationLegField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryCombinationLegField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryCombinationLegField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombinationLegField>())).CombInstrumentID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombinationLegField),
            "::",
            stringify!(CombInstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombinationLegField>())).LegID as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombinationLegField),
            "::",
            stringify!(LegID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCombinationLegField>())).LegInstrumentID as *const _
                as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCombinationLegField),
            "::",
            stringify!(LegInstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySyncStatusField {
    pub TradingDay: TThostFtdcDateType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySyncStatusField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySyncStatusField>(),
        9usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySyncStatusField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySyncStatusField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQrySyncStatusField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySyncStatusField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySyncStatusField),
            "::",
            stringify!(TradingDay)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCombinationLegField {
    pub CombInstrumentID: TThostFtdcInstrumentIDType,
    pub LegID: TThostFtdcLegIDType,
    pub LegInstrumentID: TThostFtdcInstrumentIDType,
    pub Direction: TThostFtdcDirectionType,
    pub LegMultiple: TThostFtdcLegMultipleType,
    pub ImplyLevel: TThostFtdcImplyLevelType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCombinationLegField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCombinationLegField>(),
        76usize,
        concat!("Size of: ", stringify!(CThostFtdcCombinationLegField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCombinationLegField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcCombinationLegField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombinationLegField>())).CombInstrumentID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombinationLegField),
            "::",
            stringify!(CombInstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombinationLegField>())).LegID as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombinationLegField),
            "::",
            stringify!(LegID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombinationLegField>())).LegInstrumentID as *const _
                as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombinationLegField),
            "::",
            stringify!(LegInstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombinationLegField>())).Direction as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombinationLegField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombinationLegField>())).LegMultiple as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombinationLegField),
            "::",
            stringify!(LegMultiple)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCombinationLegField>())).ImplyLevel as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCombinationLegField),
            "::",
            stringify!(ImplyLevel)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSyncStatusField {
    pub TradingDay: TThostFtdcDateType,
    pub DataSyncStatus: TThostFtdcDataSyncStatusType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSyncStatusField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSyncStatusField>(),
        10usize,
        concat!("Size of: ", stringify!(CThostFtdcSyncStatusField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSyncStatusField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcSyncStatusField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncStatusField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncStatusField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSyncStatusField>())).DataSyncStatus as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSyncStatusField),
            "::",
            stringify!(DataSyncStatus)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryLinkManField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryLinkManField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryLinkManField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryLinkManField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryLinkManField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryLinkManField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryLinkManField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryLinkManField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryLinkManField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryLinkManField),
            "::",
            stringify!(InvestorID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcLinkManField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub PersonType: TThostFtdcPersonTypeType,
    pub IdentifiedCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub PersonName: TThostFtdcPartyNameType,
    pub Telephone: TThostFtdcTelephoneType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Priority: TThostFtdcPriorityType,
    pub UOAZipCode: TThostFtdcUOAZipCodeType,
    pub PersonFullName: TThostFtdcInvestorFullNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcLinkManField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcLinkManField>(),
        424usize,
        concat!("Size of: ", stringify!(CThostFtdcLinkManField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcLinkManField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcLinkManField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcLinkManField>())).BrokerID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).PersonType as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(PersonType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).IdentifiedCardType as *const _
                as usize
        },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(IdentifiedCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).IdentifiedCardNo as *const _ as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).PersonName as *const _ as usize
        },
        77usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(PersonName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).Telephone as *const _ as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcLinkManField>())).Address as *const _ as usize },
        199usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcLinkManField>())).ZipCode as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcLinkManField>())).Priority as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(Priority)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).UOAZipCode as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(UOAZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLinkManField>())).PersonFullName as *const _ as usize
        },
        323usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLinkManField),
            "::",
            stringify!(PersonFullName)
        )
    );
}
impl Default for CThostFtdcLinkManField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBrokerUserEventField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub UserEventType: TThostFtdcUserEventTypeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBrokerUserEventField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBrokerUserEventField>(),
        28usize,
        concat!("Size of: ", stringify!(CThostFtdcQryBrokerUserEventField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBrokerUserEventField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryBrokerUserEventField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerUserEventField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerUserEventField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerUserEventField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerUserEventField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerUserEventField>())).UserEventType as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerUserEventField),
            "::",
            stringify!(UserEventType)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcBrokerUserEventField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub UserEventType: TThostFtdcUserEventTypeType,
    pub EventSequenceNo: TThostFtdcSequenceNoType,
    pub EventDate: TThostFtdcDateType,
    pub EventTime: TThostFtdcTimeType,
    pub UserEventInfo: TThostFtdcUserEventInfoType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerUserEventField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerUserEventField>(),
        1120usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerUserEventField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerUserEventField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcBrokerUserEventField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).UserEventType as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(UserEventType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).EventSequenceNo as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(EventSequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).EventDate as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(EventDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).EventTime as *const _
                as usize
        },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(EventTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).UserEventInfo as *const _
                as usize
        },
        50usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(UserEventInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).InvestorID as *const _
                as usize
        },
        1075usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserEventField>())).InstrumentID as *const _
                as usize
        },
        1088usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserEventField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
impl Default for CThostFtdcBrokerUserEventField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryContractBankField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBrchID: TThostFtdcBankBrchIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryContractBankField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryContractBankField>(),
        20usize,
        concat!("Size of: ", stringify!(CThostFtdcQryContractBankField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryContractBankField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryContractBankField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryContractBankField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryContractBankField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryContractBankField>())).BankID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryContractBankField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryContractBankField>())).BankBrchID as *const _
                as usize
        },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryContractBankField),
            "::",
            stringify!(BankBrchID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcContractBankField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBrchID: TThostFtdcBankBrchIDType,
    pub BankName: TThostFtdcBankNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcContractBankField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcContractBankField>(),
        121usize,
        concat!("Size of: ", stringify!(CThostFtdcContractBankField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcContractBankField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcContractBankField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcContractBankField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcContractBankField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcContractBankField>())).BankID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcContractBankField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcContractBankField>())).BankBrchID as *const _ as usize
        },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcContractBankField),
            "::",
            stringify!(BankBrchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcContractBankField>())).BankName as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcContractBankField),
            "::",
            stringify!(BankName)
        )
    );
}
impl Default for CThostFtdcContractBankField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInvestorPositionCombineDetailField {
    pub TradingDay: TThostFtdcDateType,
    pub OpenDate: TThostFtdcDateType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ComTradeID: TThostFtdcTradeIDType,
    pub TradeID: TThostFtdcTradeIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub Direction: TThostFtdcDirectionType,
    pub TotalAmt: TThostFtdcVolumeType,
    pub Margin: TThostFtdcMoneyType,
    pub ExchMargin: TThostFtdcMoneyType,
    pub MarginRateByMoney: TThostFtdcRatioType,
    pub MarginRateByVolume: TThostFtdcRatioType,
    pub LegID: TThostFtdcLegIDType,
    pub LegMultiple: TThostFtdcLegMultipleType,
    pub CombInstrumentID: TThostFtdcInstrumentIDType,
    pub TradeGroupID: TThostFtdcTradeGroupIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorPositionCombineDetailField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorPositionCombineDetailField>(),
        232usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorPositionCombineDetailField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).TradingDay
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).OpenDate
                as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(OpenDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).ExchangeID
                as *const _ as usize
        },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).SettlementID
                as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).BrokerID
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).InvestorID
                as *const _ as usize
        },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).ComTradeID
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(ComTradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).TradeID
                as *const _ as usize
        },
        77usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(TradeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).InstrumentID
                as *const _ as usize
        },
        98usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).HedgeFlag
                as *const _ as usize
        },
        129usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).Direction
                as *const _ as usize
        },
        130usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).TotalAmt
                as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(TotalAmt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).Margin
                as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(Margin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).ExchMargin
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(ExchMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>()))
                .MarginRateByMoney as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(MarginRateByMoney)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>()))
                .MarginRateByVolume as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(MarginRateByVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).LegID
                as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(LegID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).LegMultiple
                as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(LegMultiple)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>()))
                .CombInstrumentID as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(CombInstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).TradeGroupID
                as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(TradeGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorPositionCombineDetailField>())).InvestUnitID
                as *const _ as usize
        },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorPositionCombineDetailField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcParkedOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub OrderPriceType: TThostFtdcOrderPriceTypeType,
    pub Direction: TThostFtdcDirectionType,
    pub CombOffsetFlag: TThostFtdcCombOffsetFlagType,
    pub CombHedgeFlag: TThostFtdcCombHedgeFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeTotalOriginal: TThostFtdcVolumeType,
    pub TimeCondition: TThostFtdcTimeConditionType,
    pub GTDDate: TThostFtdcDateType,
    pub VolumeCondition: TThostFtdcVolumeConditionType,
    pub MinVolume: TThostFtdcVolumeType,
    pub ContingentCondition: TThostFtdcContingentConditionType,
    pub StopPrice: TThostFtdcPriceType,
    pub ForceCloseReason: TThostFtdcForceCloseReasonType,
    pub IsAutoSuspend: TThostFtdcBoolType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub RequestID: TThostFtdcRequestIDType,
    pub UserForceClose: TThostFtdcBoolType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParkedOrderID: TThostFtdcParkedOrderIDType,
    pub UserType: TThostFtdcUserTypeType,
    pub Status: TThostFtdcParkedOrderStatusType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub IsSwapOrder: TThostFtdcBoolType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcParkedOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcParkedOrderField>(),
        376usize,
        concat!("Size of: ", stringify!(CThostFtdcParkedOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcParkedOrderField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcParkedOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).OrderRef as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).UserID as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).OrderPriceType as *const _
                as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(OrderPriceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).Direction as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).CombOffsetFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(CombOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).CombHedgeFlag as *const _
                as usize
        },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(CombHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).LimitPrice as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).VolumeTotalOriginal as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(VolumeTotalOriginal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).TimeCondition as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(TimeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).GTDDate as *const _ as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(GTDDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).VolumeCondition as *const _
                as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(VolumeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).MinVolume as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(MinVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).ContingentCondition as *const _
                as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(ContingentCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).StopPrice as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(StopPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).ForceCloseReason as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(ForceCloseReason)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).IsAutoSuspend as *const _
                as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(IsAutoSuspend)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).BusinessUnit as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).RequestID as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).UserForceClose as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(UserForceClose)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).ExchangeID as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).ParkedOrderID as *const _
                as usize
        },
        185usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(ParkedOrderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).UserType as *const _ as usize
        },
        198usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(UserType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).Status as *const _ as usize
        },
        199usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(Status)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).ErrorID as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).ErrorMsg as *const _ as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).IsSwapOrder as *const _ as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(IsSwapOrder)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).AccountID as *const _ as usize
        },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).CurrencyID as *const _ as usize
        },
        305usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).ClientID as *const _ as usize
        },
        309usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).InvestUnitID as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).IPAddress as *const _ as usize
        },
        337usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderField>())).MacAddress as *const _ as usize
        },
        353usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcParkedOrderField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcParkedOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OrderActionRef: TThostFtdcOrderActionRefType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeChange: TThostFtdcVolumeType,
    pub UserID: TThostFtdcUserIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ParkedOrderActionID: TThostFtdcParkedOrderActionIDType,
    pub UserType: TThostFtdcUserTypeType,
    pub Status: TThostFtdcParkedOrderStatusType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcParkedOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcParkedOrderActionField>(),
        304usize,
        concat!("Size of: ", stringify!(CThostFtdcParkedOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcParkedOrderActionField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcParkedOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).OrderActionRef as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(OrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).OrderRef as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).RequestID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).FrontID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).SessionID as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).OrderSysID as *const _
                as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).LimitPrice as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).VolumeChange as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(VolumeChange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).UserID as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).InstrumentID as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).ParkedOrderActionID
                as *const _ as usize
        },
        147usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(ParkedOrderActionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).UserType as *const _
                as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(UserType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).Status as *const _ as usize
        },
        161usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(Status)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).ErrorID as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).ErrorMsg as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        249usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).IPAddress as *const _
                as usize
        },
        266usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcParkedOrderActionField>())).MacAddress as *const _
                as usize
        },
        282usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcParkedOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcParkedOrderActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryParkedOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryParkedOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryParkedOrderField>(),
        81usize,
        concat!("Size of: ", stringify!(CThostFtdcQryParkedOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryParkedOrderField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryParkedOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderField>())).ExchangeID as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderField>())).InvestUnitID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryParkedOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryParkedOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryParkedOrderActionField>(),
        81usize,
        concat!("Size of: ", stringify!(CThostFtdcQryParkedOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryParkedOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryParkedOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderActionField>())).InstrumentID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderActionField>())).ExchangeID as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryParkedOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryParkedOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcRemoveParkedOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ParkedOrderID: TThostFtdcParkedOrderIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRemoveParkedOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRemoveParkedOrderField>(),
        54usize,
        concat!("Size of: ", stringify!(CThostFtdcRemoveParkedOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRemoveParkedOrderField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcRemoveParkedOrderField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderField>())).ParkedOrderID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderField),
            "::",
            stringify!(ParkedOrderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderField>())).InvestUnitID as *const _
                as usize
        },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcRemoveParkedOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ParkedOrderActionID: TThostFtdcParkedOrderActionIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRemoveParkedOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRemoveParkedOrderActionField>(),
        54usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcRemoveParkedOrderActionField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRemoveParkedOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcRemoveParkedOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderActionField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderActionField>())).ParkedOrderActionID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderActionField),
            "::",
            stringify!(ParkedOrderActionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRemoveParkedOrderActionField>())).InvestUnitID
                as *const _ as usize
        },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRemoveParkedOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInvestorWithdrawAlgorithmField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub UsingRatio: TThostFtdcRatioType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub FundMortgageRatio: TThostFtdcRatioType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorWithdrawAlgorithmField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorWithdrawAlgorithmField>(),
        56usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorWithdrawAlgorithmField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorWithdrawAlgorithmField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorWithdrawAlgorithmField>())).InvestorRange
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorWithdrawAlgorithmField>())).InvestorID
                as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorWithdrawAlgorithmField>())).UsingRatio
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField),
            "::",
            stringify!(UsingRatio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorWithdrawAlgorithmField>())).CurrencyID
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorWithdrawAlgorithmField>())).FundMortgageRatio
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorWithdrawAlgorithmField),
            "::",
            stringify!(FundMortgageRatio)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInvestorPositionCombineDetailField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub CombInstrumentID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInvestorPositionCombineDetailField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInvestorPositionCombineDetailField>(),
        81usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryInvestorPositionCombineDetailField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInvestorPositionCombineDetailField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInvestorPositionCombineDetailField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionCombineDetailField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionCombineDetailField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionCombineDetailField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionCombineDetailField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionCombineDetailField>()))
                .CombInstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionCombineDetailField),
            "::",
            stringify!(CombInstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionCombineDetailField>())).ExchangeID
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionCombineDetailField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorPositionCombineDetailField>())).InvestUnitID
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorPositionCombineDetailField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMarketDataAveragePriceField {
    pub AveragePrice: TThostFtdcPriceType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarketDataAveragePriceField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarketDataAveragePriceField>(),
        8usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcMarketDataAveragePriceField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarketDataAveragePriceField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMarketDataAveragePriceField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarketDataAveragePriceField>())).AveragePrice
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarketDataAveragePriceField),
            "::",
            stringify!(AveragePrice)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcVerifyInvestorPasswordField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub Password: TThostFtdcPasswordType,
}
#[test]
fn bindgen_test_layout_CThostFtdcVerifyInvestorPasswordField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcVerifyInvestorPasswordField>(),
        65usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcVerifyInvestorPasswordField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcVerifyInvestorPasswordField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcVerifyInvestorPasswordField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyInvestorPasswordField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyInvestorPasswordField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyInvestorPasswordField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyInvestorPasswordField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyInvestorPasswordField>())).Password as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyInvestorPasswordField),
            "::",
            stringify!(Password)
        )
    );
}
impl Default for CThostFtdcVerifyInvestorPasswordField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcUserIPField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub IPMask: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcUserIPField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcUserIPField>(),
        80usize,
        concat!("Size of: ", stringify!(CThostFtdcUserIPField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcUserIPField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcUserIPField))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcUserIPField>())).BrokerID as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserIPField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcUserIPField>())).UserID as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserIPField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcUserIPField>())).IPAddress as *const _ as usize },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserIPField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcUserIPField>())).IPMask as *const _ as usize },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserIPField),
            "::",
            stringify!(IPMask)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserIPField>())).MacAddress as *const _ as usize
        },
        59usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserIPField),
            "::",
            stringify!(MacAddress)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTradingNoticeInfoField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub SendTime: TThostFtdcTimeType,
    pub FieldContent: TThostFtdcContentType,
    pub SequenceSeries: TThostFtdcSequenceSeriesType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingNoticeInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingNoticeInfoField>(),
        560usize,
        concat!("Size of: ", stringify!(CThostFtdcTradingNoticeInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingNoticeInfoField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTradingNoticeInfoField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeInfoField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeInfoField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeInfoField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeInfoField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeInfoField>())).SendTime as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeInfoField),
            "::",
            stringify!(SendTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeInfoField>())).FieldContent as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeInfoField),
            "::",
            stringify!(FieldContent)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeInfoField>())).SequenceSeries as *const _
                as usize
        },
        534usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeInfoField),
            "::",
            stringify!(SequenceSeries)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeInfoField>())).SequenceNo as *const _
                as usize
        },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeInfoField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeInfoField>())).InvestUnitID as *const _
                as usize
        },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeInfoField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
impl Default for CThostFtdcTradingNoticeInfoField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTradingNoticeField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorRange: TThostFtdcInvestorRangeType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub SequenceSeries: TThostFtdcSequenceSeriesType,
    pub UserID: TThostFtdcUserIDType,
    pub SendTime: TThostFtdcTimeType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub FieldContent: TThostFtdcContentType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingNoticeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingNoticeField>(),
        580usize,
        concat!("Size of: ", stringify!(CThostFtdcTradingNoticeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingNoticeField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcTradingNoticeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).InvestorRange as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(InvestorRange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).InvestorID as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).SequenceSeries as *const _
                as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(SequenceSeries)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).UserID as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).SendTime as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(SendTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).SequenceNo as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).FieldContent as *const _
                as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(FieldContent)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingNoticeField>())).InvestUnitID as *const _
                as usize
        },
        561usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingNoticeField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
impl Default for CThostFtdcTradingNoticeField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTradingNoticeField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTradingNoticeField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTradingNoticeField>(),
        41usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTradingNoticeField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTradingNoticeField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryTradingNoticeField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingNoticeField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingNoticeField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingNoticeField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingNoticeField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTradingNoticeField>())).InvestUnitID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTradingNoticeField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryErrOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryErrOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryErrOrderField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryErrOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryErrOrderField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryErrOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcErrOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub OrderPriceType: TThostFtdcOrderPriceTypeType,
    pub Direction: TThostFtdcDirectionType,
    pub CombOffsetFlag: TThostFtdcCombOffsetFlagType,
    pub CombHedgeFlag: TThostFtdcCombHedgeFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeTotalOriginal: TThostFtdcVolumeType,
    pub TimeCondition: TThostFtdcTimeConditionType,
    pub GTDDate: TThostFtdcDateType,
    pub VolumeCondition: TThostFtdcVolumeConditionType,
    pub MinVolume: TThostFtdcVolumeType,
    pub ContingentCondition: TThostFtdcContingentConditionType,
    pub StopPrice: TThostFtdcPriceType,
    pub ForceCloseReason: TThostFtdcForceCloseReasonType,
    pub IsAutoSuspend: TThostFtdcBoolType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub RequestID: TThostFtdcRequestIDType,
    pub UserForceClose: TThostFtdcBoolType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub IsSwapOrder: TThostFtdcBoolType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcErrOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcErrOrderField>(),
        360usize,
        concat!("Size of: ", stringify!(CThostFtdcErrOrderField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcErrOrderField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcErrOrderField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).InvestorID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).InstrumentID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).OrderRef as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).UserID as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).OrderPriceType as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(OrderPriceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).Direction as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).CombOffsetFlag as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(CombOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).CombHedgeFlag as *const _ as usize
        },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(CombHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).LimitPrice as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).VolumeTotalOriginal as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(VolumeTotalOriginal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).TimeCondition as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(TimeCondition)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).GTDDate as *const _ as usize },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(GTDDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).VolumeCondition as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(VolumeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).MinVolume as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(MinVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).ContingentCondition as *const _
                as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(ContingentCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).StopPrice as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(StopPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).ForceCloseReason as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(ForceCloseReason)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).IsAutoSuspend as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(IsAutoSuspend)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).BusinessUnit as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).RequestID as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).UserForceClose as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(UserForceClose)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).ErrorID as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).ErrorMsg as *const _ as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).IsSwapOrder as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(IsSwapOrder)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).ExchangeID as *const _ as usize
        },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).InvestUnitID as *const _ as usize
        },
        277usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).AccountID as *const _ as usize
        },
        294usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).CurrencyID as *const _ as usize
        },
        307usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).ClientID as *const _ as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).IPAddress as *const _ as usize
        },
        322usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderField>())).MacAddress as *const _ as usize
        },
        338usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcErrOrderField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcErrorConditionalOrderField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub UserID: TThostFtdcUserIDType,
    pub OrderPriceType: TThostFtdcOrderPriceTypeType,
    pub Direction: TThostFtdcDirectionType,
    pub CombOffsetFlag: TThostFtdcCombOffsetFlagType,
    pub CombHedgeFlag: TThostFtdcCombHedgeFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeTotalOriginal: TThostFtdcVolumeType,
    pub TimeCondition: TThostFtdcTimeConditionType,
    pub GTDDate: TThostFtdcDateType,
    pub VolumeCondition: TThostFtdcVolumeConditionType,
    pub MinVolume: TThostFtdcVolumeType,
    pub ContingentCondition: TThostFtdcContingentConditionType,
    pub StopPrice: TThostFtdcPriceType,
    pub ForceCloseReason: TThostFtdcForceCloseReasonType,
    pub IsAutoSuspend: TThostFtdcBoolType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub RequestID: TThostFtdcRequestIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub ExchangeInstID: TThostFtdcExchangeInstIDType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderSubmitStatus: TThostFtdcOrderSubmitStatusType,
    pub NotifySequence: TThostFtdcSequenceNoType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub OrderSource: TThostFtdcOrderSourceType,
    pub OrderStatus: TThostFtdcOrderStatusType,
    pub OrderType: TThostFtdcOrderTypeType,
    pub VolumeTraded: TThostFtdcVolumeType,
    pub VolumeTotal: TThostFtdcVolumeType,
    pub InsertDate: TThostFtdcDateType,
    pub InsertTime: TThostFtdcTimeType,
    pub ActiveTime: TThostFtdcTimeType,
    pub SuspendTime: TThostFtdcTimeType,
    pub UpdateTime: TThostFtdcTimeType,
    pub CancelTime: TThostFtdcTimeType,
    pub ActiveTraderID: TThostFtdcTraderIDType,
    pub ClearingPartID: TThostFtdcParticipantIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub UserProductInfo: TThostFtdcProductInfoType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub UserForceClose: TThostFtdcBoolType,
    pub ActiveUserID: TThostFtdcUserIDType,
    pub BrokerOrderSeq: TThostFtdcSequenceNoType,
    pub RelativeOrderSysID: TThostFtdcOrderSysIDType,
    pub ZCETotalTradedVolume: TThostFtdcVolumeType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub IsSwapOrder: TThostFtdcBoolType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcErrorConditionalOrderField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcErrorConditionalOrderField>(),
        744usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcErrorConditionalOrderField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcErrorConditionalOrderField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcErrorConditionalOrderField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderRef as *const _
                as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).UserID as *const _
                as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderPriceType
                as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderPriceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).Direction as *const _
                as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).CombOffsetFlag
                as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(CombOffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).CombHedgeFlag
                as *const _ as usize
        },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(CombHedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).LimitPrice as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).VolumeTotalOriginal
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(VolumeTotalOriginal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).TimeCondition
                as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(TimeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).GTDDate as *const _
                as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(GTDDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).VolumeCondition
                as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(VolumeCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).MinVolume as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(MinVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ContingentCondition
                as *const _ as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ContingentCondition)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).StopPrice as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(StopPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ForceCloseReason
                as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ForceCloseReason)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).IsAutoSuspend
                as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(IsAutoSuspend)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).BusinessUnit
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).RequestID as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderLocalID
                as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ExchangeID as *const _
                as usize
        },
        185usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ParticipantID
                as *const _ as usize
        },
        194usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ClientID as *const _
                as usize
        },
        205usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ExchangeInstID
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ExchangeInstID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).TraderID as *const _
                as usize
        },
        247usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).InstallID as *const _
                as usize
        },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderSubmitStatus
                as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderSubmitStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).NotifySequence
                as *const _ as usize
        },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(NotifySequence)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).TradingDay as *const _
                as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).SettlementID
                as *const _ as usize
        },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderSysID as *const _
                as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderSource as *const _
                as usize
        },
        317usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderSource)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderStatus as *const _
                as usize
        },
        318usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).OrderType as *const _
                as usize
        },
        319usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(OrderType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).VolumeTraded
                as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(VolumeTraded)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).VolumeTotal as *const _
                as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(VolumeTotal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).InsertDate as *const _
                as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(InsertDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).InsertTime as *const _
                as usize
        },
        337usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(InsertTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ActiveTime as *const _
                as usize
        },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ActiveTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).SuspendTime as *const _
                as usize
        },
        355usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(SuspendTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).UpdateTime as *const _
                as usize
        },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(UpdateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).CancelTime as *const _
                as usize
        },
        373usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(CancelTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ActiveTraderID
                as *const _ as usize
        },
        382usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ActiveTraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ClearingPartID
                as *const _ as usize
        },
        403usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ClearingPartID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).SequenceNo as *const _
                as usize
        },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).FrontID as *const _
                as usize
        },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).SessionID as *const _
                as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).UserProductInfo
                as *const _ as usize
        },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(UserProductInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).StatusMsg as *const _
                as usize
        },
        439usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).UserForceClose
                as *const _ as usize
        },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(UserForceClose)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ActiveUserID
                as *const _ as usize
        },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ActiveUserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).BrokerOrderSeq
                as *const _ as usize
        },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(BrokerOrderSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).RelativeOrderSysID
                as *const _ as usize
        },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(RelativeOrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ZCETotalTradedVolume
                as *const _ as usize
        },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ZCETotalTradedVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ErrorID as *const _
                as usize
        },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).ErrorMsg as *const _
                as usize
        },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).IsSwapOrder as *const _
                as usize
        },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(IsSwapOrder)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).BranchID as *const _
                as usize
        },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).InvestUnitID
                as *const _ as usize
        },
        673usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).AccountID as *const _
                as usize
        },
        690usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).CurrencyID as *const _
                as usize
        },
        703usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).IPAddress as *const _
                as usize
        },
        707usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrorConditionalOrderField>())).MacAddress as *const _
                as usize
        },
        723usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrorConditionalOrderField),
            "::",
            stringify!(MacAddress)
        )
    );
}
impl Default for CThostFtdcErrorConditionalOrderField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryErrOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryErrOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryErrOrderActionField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryErrOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryErrOrderActionField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryErrOrderActionField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrOrderActionField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryErrOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryErrOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcErrOrderActionField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub OrderActionRef: TThostFtdcOrderActionRefType,
    pub OrderRef: TThostFtdcOrderRefType,
    pub RequestID: TThostFtdcRequestIDType,
    pub FrontID: TThostFtdcFrontIDType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub OrderSysID: TThostFtdcOrderSysIDType,
    pub ActionFlag: TThostFtdcActionFlagType,
    pub LimitPrice: TThostFtdcPriceType,
    pub VolumeChange: TThostFtdcVolumeType,
    pub ActionDate: TThostFtdcDateType,
    pub ActionTime: TThostFtdcTimeType,
    pub TraderID: TThostFtdcTraderIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub OrderLocalID: TThostFtdcOrderLocalIDType,
    pub ActionLocalID: TThostFtdcOrderLocalIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ClientID: TThostFtdcClientIDType,
    pub BusinessUnit: TThostFtdcBusinessUnitType,
    pub OrderActionStatus: TThostFtdcOrderActionStatusType,
    pub UserID: TThostFtdcUserIDType,
    pub StatusMsg: TThostFtdcErrorMsgType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub BranchID: TThostFtdcBranchIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
    pub IPAddress: TThostFtdcIPAddressType,
    pub MacAddress: TThostFtdcMacAddressType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcErrOrderActionField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcErrOrderActionField>(),
        496usize,
        concat!("Size of: ", stringify!(CThostFtdcErrOrderActionField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcErrOrderActionField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcErrOrderActionField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).OrderActionRef as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(OrderActionRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).OrderRef as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(OrderRef)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).RequestID as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).FrontID as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(FrontID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).SessionID as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ExchangeID as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).OrderSysID as *const _
                as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(OrderSysID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ActionFlag as *const _
                as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ActionFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).LimitPrice as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(LimitPrice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).VolumeChange as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(VolumeChange)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ActionDate as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ActionDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ActionTime as *const _
                as usize
        },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ActionTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).TraderID as *const _ as usize
        },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(TraderID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).InstallID as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).OrderLocalID as *const _
                as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(OrderLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ActionLocalID as *const _
                as usize
        },
        157usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ActionLocalID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ParticipantID as *const _
                as usize
        },
        170usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ClientID as *const _ as usize
        },
        181usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ClientID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).BusinessUnit as *const _
                as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(BusinessUnit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).OrderActionStatus as *const _
                as usize
        },
        213usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(OrderActionStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).UserID as *const _ as usize
        },
        214usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).StatusMsg as *const _ as usize
        },
        230usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(StatusMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).InstrumentID as *const _
                as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).BranchID as *const _ as usize
        },
        342usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(BranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).InvestUnitID as *const _
                as usize
        },
        351usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(InvestUnitID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).IPAddress as *const _ as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(IPAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).MacAddress as *const _
                as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(MacAddress)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ErrorID as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcErrOrderActionField>())).ErrorMsg as *const _ as usize
        },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcErrOrderActionField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcErrOrderActionField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryExchangeSequenceField {
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryExchangeSequenceField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryExchangeSequenceField>(),
        9usize,
        concat!("Size of: ", stringify!(CThostFtdcQryExchangeSequenceField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryExchangeSequenceField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryExchangeSequenceField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryExchangeSequenceField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryExchangeSequenceField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcExchangeSequenceField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub MarketStatus: TThostFtdcInstrumentStatusType,
}
#[test]
fn bindgen_test_layout_CThostFtdcExchangeSequenceField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcExchangeSequenceField>(),
        20usize,
        concat!("Size of: ", stringify!(CThostFtdcExchangeSequenceField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcExchangeSequenceField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcExchangeSequenceField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeSequenceField>())).ExchangeID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeSequenceField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeSequenceField>())).SequenceNo as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeSequenceField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcExchangeSequenceField>())).MarketStatus as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcExchangeSequenceField),
            "::",
            stringify!(MarketStatus)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQueryMaxOrderVolumeWithPriceField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub Direction: TThostFtdcDirectionType,
    pub OffsetFlag: TThostFtdcOffsetFlagType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub MaxVolume: TThostFtdcVolumeType,
    pub Price: TThostFtdcPriceType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQueryMaxOrderVolumeWithPriceField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQueryMaxOrderVolumeWithPriceField>(),
        104usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQueryMaxOrderVolumeWithPriceField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).InstrumentID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).Direction
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).OffsetFlag
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(OffsetFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).HedgeFlag
                as *const _ as usize
        },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).MaxVolume
                as *const _ as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(MaxVolume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).Price
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(Price)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).ExchangeID
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryMaxOrderVolumeWithPriceField>())).InvestUnitID
                as *const _ as usize
        },
        81usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryMaxOrderVolumeWithPriceField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBrokerTradingParamsField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub AccountID: TThostFtdcAccountIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBrokerTradingParamsField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBrokerTradingParamsField>(),
        41usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryBrokerTradingParamsField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBrokerTradingParamsField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryBrokerTradingParamsField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerTradingParamsField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerTradingParamsField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerTradingParamsField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerTradingParamsField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerTradingParamsField>())).CurrencyID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerTradingParamsField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerTradingParamsField>())).AccountID as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerTradingParamsField),
            "::",
            stringify!(AccountID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcBrokerTradingParamsField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub MarginPriceType: TThostFtdcMarginPriceTypeType,
    pub Algorithm: TThostFtdcAlgorithmType,
    pub AvailIncludeCloseProfit: TThostFtdcIncludeCloseProfitType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub OptionRoyaltyPriceType: TThostFtdcOptionRoyaltyPriceTypeType,
    pub AccountID: TThostFtdcAccountIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerTradingParamsField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerTradingParamsField>(),
        45usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerTradingParamsField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerTradingParamsField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcBrokerTradingParamsField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).MarginPriceType
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(MarginPriceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).Algorithm as *const _
                as usize
        },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(Algorithm)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).AvailIncludeCloseProfit
                as *const _ as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(AvailIncludeCloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).CurrencyID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).OptionRoyaltyPriceType
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(OptionRoyaltyPriceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingParamsField>())).AccountID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingParamsField),
            "::",
            stringify!(AccountID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBrokerTradingAlgosField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBrokerTradingAlgosField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBrokerTradingAlgosField>(),
        51usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryBrokerTradingAlgosField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBrokerTradingAlgosField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryBrokerTradingAlgosField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerTradingAlgosField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerTradingAlgosField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerTradingAlgosField>())).ExchangeID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerTradingAlgosField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBrokerTradingAlgosField>())).InstrumentID
                as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBrokerTradingAlgosField),
            "::",
            stringify!(InstrumentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcBrokerTradingAlgosField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub HandlePositionAlgoID: TThostFtdcHandlePositionAlgoIDType,
    pub FindMarginRateAlgoID: TThostFtdcFindMarginRateAlgoIDType,
    pub HandleTradingAccountAlgoID: TThostFtdcHandleTradingAccountAlgoIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerTradingAlgosField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerTradingAlgosField>(),
        54usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerTradingAlgosField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerTradingAlgosField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcBrokerTradingAlgosField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingAlgosField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingAlgosField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingAlgosField>())).ExchangeID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingAlgosField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingAlgosField>())).InstrumentID as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingAlgosField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingAlgosField>())).HandlePositionAlgoID
                as *const _ as usize
        },
        51usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingAlgosField),
            "::",
            stringify!(HandlePositionAlgoID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingAlgosField>())).FindMarginRateAlgoID
                as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingAlgosField),
            "::",
            stringify!(FindMarginRateAlgoID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerTradingAlgosField>())).HandleTradingAccountAlgoID
                as *const _ as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerTradingAlgosField),
            "::",
            stringify!(HandleTradingAccountAlgoID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQueryBrokerDepositField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQueryBrokerDepositField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQueryBrokerDepositField>(),
        20usize,
        concat!("Size of: ", stringify!(CThostFtdcQueryBrokerDepositField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQueryBrokerDepositField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQueryBrokerDepositField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryBrokerDepositField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryBrokerDepositField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryBrokerDepositField>())).ExchangeID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryBrokerDepositField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcBrokerDepositField {
    pub TradingDay: TThostFtdcTradeDateType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub PreBalance: TThostFtdcMoneyType,
    pub CurrMargin: TThostFtdcMoneyType,
    pub CloseProfit: TThostFtdcMoneyType,
    pub Balance: TThostFtdcMoneyType,
    pub Deposit: TThostFtdcMoneyType,
    pub Withdraw: TThostFtdcMoneyType,
    pub Available: TThostFtdcMoneyType,
    pub Reserve: TThostFtdcMoneyType,
    pub FrozenMargin: TThostFtdcMoneyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerDepositField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerDepositField>(),
        112usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerDepositField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerDepositField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcBrokerDepositField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).TradingDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).BrokerID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).ParticipantID as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).ExchangeID as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).PreBalance as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(PreBalance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).CurrMargin as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(CurrMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).CloseProfit as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(CloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).Balance as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(Balance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).Deposit as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(Deposit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).Withdraw as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(Withdraw)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).Available as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(Available)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).Reserve as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(Reserve)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerDepositField>())).FrozenMargin as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerDepositField),
            "::",
            stringify!(FrozenMargin)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryCFMMCBrokerKeyField {
    pub BrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryCFMMCBrokerKeyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryCFMMCBrokerKeyField>(),
        11usize,
        concat!("Size of: ", stringify!(CThostFtdcQryCFMMCBrokerKeyField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryCFMMCBrokerKeyField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryCFMMCBrokerKeyField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCFMMCBrokerKeyField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCFMMCBrokerKeyField),
            "::",
            stringify!(BrokerID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCFMMCBrokerKeyField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub CreateDate: TThostFtdcDateType,
    pub CreateTime: TThostFtdcTimeType,
    pub KeyID: TThostFtdcSequenceNoType,
    pub CurrentKey: TThostFtdcCFMMCKeyType,
    pub KeyKind: TThostFtdcCFMMCKeyKindType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCFMMCBrokerKeyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCFMMCBrokerKeyField>(),
        68usize,
        concat!("Size of: ", stringify!(CThostFtdcCFMMCBrokerKeyField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCFMMCBrokerKeyField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcCFMMCBrokerKeyField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCBrokerKeyField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCBrokerKeyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCBrokerKeyField>())).ParticipantID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCBrokerKeyField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCBrokerKeyField>())).CreateDate as *const _
                as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCBrokerKeyField),
            "::",
            stringify!(CreateDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCBrokerKeyField>())).CreateTime as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCBrokerKeyField),
            "::",
            stringify!(CreateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCBrokerKeyField>())).KeyID as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCBrokerKeyField),
            "::",
            stringify!(KeyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCBrokerKeyField>())).CurrentKey as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCBrokerKeyField),
            "::",
            stringify!(CurrentKey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCBrokerKeyField>())).KeyKind as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCBrokerKeyField),
            "::",
            stringify!(KeyKind)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCFMMCTradingAccountKeyField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub KeyID: TThostFtdcSequenceNoType,
    pub CurrentKey: TThostFtdcCFMMCKeyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCFMMCTradingAccountKeyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCFMMCTradingAccountKeyField>(),
        64usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcCFMMCTradingAccountKeyField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCFMMCTradingAccountKeyField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcCFMMCTradingAccountKeyField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountKeyField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountKeyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountKeyField>())).ParticipantID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountKeyField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountKeyField>())).AccountID as *const _
                as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountKeyField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountKeyField>())).KeyID as *const _
                as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountKeyField),
            "::",
            stringify!(KeyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountKeyField>())).CurrentKey as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountKeyField),
            "::",
            stringify!(CurrentKey)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryCFMMCTradingAccountKeyField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryCFMMCTradingAccountKeyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryCFMMCTradingAccountKeyField>(),
        24usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryCFMMCTradingAccountKeyField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryCFMMCTradingAccountKeyField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryCFMMCTradingAccountKeyField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCFMMCTradingAccountKeyField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCFMMCTradingAccountKeyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCFMMCTradingAccountKeyField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCFMMCTradingAccountKeyField),
            "::",
            stringify!(InvestorID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcBrokerUserOTPParamField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub OTPVendorsID: TThostFtdcOTPVendorsIDType,
    pub SerialNumber: TThostFtdcSerialNumberType,
    pub AuthKey: TThostFtdcAuthKeyType,
    pub LastDrift: TThostFtdcLastDriftType,
    pub LastSuccess: TThostFtdcLastSuccessType,
    pub OTPType: TThostFtdcOTPTypeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerUserOTPParamField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerUserOTPParamField>(),
        100usize,
        concat!("Size of: ", stringify!(CThostFtdcBrokerUserOTPParamField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerUserOTPParamField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcBrokerUserOTPParamField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).OTPVendorsID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(OTPVendorsID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).SerialNumber as *const _
                as usize
        },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(SerialNumber)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).AuthKey as *const _
                as usize
        },
        46usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(AuthKey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).LastDrift as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(LastDrift)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).LastSuccess as *const _
                as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(LastSuccess)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserOTPParamField>())).OTPType as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserOTPParamField),
            "::",
            stringify!(OTPType)
        )
    );
}
impl Default for CThostFtdcBrokerUserOTPParamField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcManualSyncBrokerUserOTPField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub OTPType: TThostFtdcOTPTypeType,
    pub FirstOTP: TThostFtdcPasswordType,
    pub SecondOTP: TThostFtdcPasswordType,
}
#[test]
fn bindgen_test_layout_CThostFtdcManualSyncBrokerUserOTPField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcManualSyncBrokerUserOTPField>(),
        110usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcManualSyncBrokerUserOTPField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcManualSyncBrokerUserOTPField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcManualSyncBrokerUserOTPField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcManualSyncBrokerUserOTPField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcManualSyncBrokerUserOTPField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcManualSyncBrokerUserOTPField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcManualSyncBrokerUserOTPField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcManualSyncBrokerUserOTPField>())).OTPType as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcManualSyncBrokerUserOTPField),
            "::",
            stringify!(OTPType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcManualSyncBrokerUserOTPField>())).FirstOTP as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcManualSyncBrokerUserOTPField),
            "::",
            stringify!(FirstOTP)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcManualSyncBrokerUserOTPField>())).SecondOTP as *const _
                as usize
        },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcManualSyncBrokerUserOTPField),
            "::",
            stringify!(SecondOTP)
        )
    );
}
impl Default for CThostFtdcManualSyncBrokerUserOTPField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcCommRateModelField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub CommModelID: TThostFtdcInvestorIDType,
    pub CommModelName: TThostFtdcCommModelNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCommRateModelField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCommRateModelField>(),
        185usize,
        concat!("Size of: ", stringify!(CThostFtdcCommRateModelField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCommRateModelField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcCommRateModelField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCommRateModelField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCommRateModelField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCommRateModelField>())).CommModelID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCommRateModelField),
            "::",
            stringify!(CommModelID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCommRateModelField>())).CommModelName as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCommRateModelField),
            "::",
            stringify!(CommModelName)
        )
    );
}
impl Default for CThostFtdcCommRateModelField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryCommRateModelField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub CommModelID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryCommRateModelField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryCommRateModelField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryCommRateModelField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryCommRateModelField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryCommRateModelField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCommRateModelField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCommRateModelField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCommRateModelField>())).CommModelID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCommRateModelField),
            "::",
            stringify!(CommModelID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcMarginModelField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub MarginModelID: TThostFtdcInvestorIDType,
    pub MarginModelName: TThostFtdcCommModelNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMarginModelField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMarginModelField>(),
        185usize,
        concat!("Size of: ", stringify!(CThostFtdcMarginModelField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMarginModelField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcMarginModelField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarginModelField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarginModelField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarginModelField>())).MarginModelID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarginModelField),
            "::",
            stringify!(MarginModelID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMarginModelField>())).MarginModelName as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMarginModelField),
            "::",
            stringify!(MarginModelName)
        )
    );
}
impl Default for CThostFtdcMarginModelField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryMarginModelField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub MarginModelID: TThostFtdcInvestorIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryMarginModelField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryMarginModelField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryMarginModelField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryMarginModelField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryMarginModelField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMarginModelField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMarginModelField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryMarginModelField>())).MarginModelID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryMarginModelField),
            "::",
            stringify!(MarginModelID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcEWarrantOffsetField {
    pub TradingDay: TThostFtdcTradeDateType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub Direction: TThostFtdcDirectionType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub Volume: TThostFtdcVolumeType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcEWarrantOffsetField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcEWarrantOffsetField>(),
        100usize,
        concat!("Size of: ", stringify!(CThostFtdcEWarrantOffsetField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcEWarrantOffsetField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcEWarrantOffsetField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).TradingDay as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).BrokerID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).InvestorID as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).ExchangeID as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).InstrumentID as *const _
                as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).Direction as *const _ as usize
        },
        73usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(Direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).HedgeFlag as *const _ as usize
        },
        74usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).Volume as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(Volume)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcEWarrantOffsetField>())).InvestUnitID as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcEWarrantOffsetField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryEWarrantOffsetField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InstrumentID: TThostFtdcInstrumentIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryEWarrantOffsetField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryEWarrantOffsetField>(),
        81usize,
        concat!("Size of: ", stringify!(CThostFtdcQryEWarrantOffsetField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryEWarrantOffsetField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryEWarrantOffsetField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryEWarrantOffsetField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryEWarrantOffsetField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryEWarrantOffsetField>())).InvestorID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryEWarrantOffsetField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryEWarrantOffsetField>())).ExchangeID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryEWarrantOffsetField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryEWarrantOffsetField>())).InstrumentID as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryEWarrantOffsetField),
            "::",
            stringify!(InstrumentID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryEWarrantOffsetField>())).InvestUnitID as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryEWarrantOffsetField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryInvestorProductGroupMarginField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub ProductGroupID: TThostFtdcInstrumentIDType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryInvestorProductGroupMarginField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryInvestorProductGroupMarginField>(),
        82usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryInvestorProductGroupMarginField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorProductGroupMarginField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorProductGroupMarginField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorProductGroupMarginField>())).ProductGroupID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField),
            "::",
            stringify!(ProductGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorProductGroupMarginField>())).HedgeFlag
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorProductGroupMarginField>())).ExchangeID
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryInvestorProductGroupMarginField>())).InvestUnitID
                as *const _ as usize
        },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryInvestorProductGroupMarginField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcInvestorProductGroupMarginField {
    pub ProductGroupID: TThostFtdcInstrumentIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub TradingDay: TThostFtdcDateType,
    pub SettlementID: TThostFtdcSettlementIDType,
    pub FrozenMargin: TThostFtdcMoneyType,
    pub LongFrozenMargin: TThostFtdcMoneyType,
    pub ShortFrozenMargin: TThostFtdcMoneyType,
    pub UseMargin: TThostFtdcMoneyType,
    pub LongUseMargin: TThostFtdcMoneyType,
    pub ShortUseMargin: TThostFtdcMoneyType,
    pub ExchMargin: TThostFtdcMoneyType,
    pub LongExchMargin: TThostFtdcMoneyType,
    pub ShortExchMargin: TThostFtdcMoneyType,
    pub CloseProfit: TThostFtdcMoneyType,
    pub FrozenCommission: TThostFtdcMoneyType,
    pub Commission: TThostFtdcMoneyType,
    pub FrozenCash: TThostFtdcMoneyType,
    pub CashIn: TThostFtdcMoneyType,
    pub PositionProfit: TThostFtdcMoneyType,
    pub OffsetAmount: TThostFtdcMoneyType,
    pub LongOffsetAmount: TThostFtdcMoneyType,
    pub ShortOffsetAmount: TThostFtdcMoneyType,
    pub ExchOffsetAmount: TThostFtdcMoneyType,
    pub LongExchOffsetAmount: TThostFtdcMoneyType,
    pub ShortExchOffsetAmount: TThostFtdcMoneyType,
    pub HedgeFlag: TThostFtdcHedgeFlagType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcInvestorProductGroupMarginField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcInvestorProductGroupMarginField>(),
        272usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcInvestorProductGroupMarginField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcInvestorProductGroupMarginField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ProductGroupID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ProductGroupID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).BrokerID
                as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).InvestorID
                as *const _ as usize
        },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).TradingDay
                as *const _ as usize
        },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).SettlementID
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(SettlementID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).FrozenMargin
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(FrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).LongFrozenMargin
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(LongFrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ShortFrozenMargin
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ShortFrozenMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).UseMargin
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(UseMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).LongUseMargin
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(LongUseMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ShortUseMargin
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ShortUseMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ExchMargin
                as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ExchMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).LongExchMargin
                as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(LongExchMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ShortExchMargin
                as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ShortExchMargin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).CloseProfit
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(CloseProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).FrozenCommission
                as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(FrozenCommission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).Commission
                as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(Commission)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).FrozenCash
                as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(FrozenCash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).CashIn as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(CashIn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).PositionProfit
                as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(PositionProfit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).OffsetAmount
                as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(OffsetAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).LongOffsetAmount
                as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(LongOffsetAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ShortOffsetAmount
                as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ShortOffsetAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ExchOffsetAmount
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ExchOffsetAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>()))
                .LongExchOffsetAmount as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(LongExchOffsetAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>()))
                .ShortExchOffsetAmount as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ShortExchOffsetAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).HedgeFlag
                as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(HedgeFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).ExchangeID
                as *const _ as usize
        },
        241usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcInvestorProductGroupMarginField>())).InvestUnitID
                as *const _ as usize
        },
        250usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcInvestorProductGroupMarginField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQueryCFMMCTradingAccountTokenField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub InvestUnitID: TThostFtdcInvestUnitIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQueryCFMMCTradingAccountTokenField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQueryCFMMCTradingAccountTokenField>(),
        41usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQueryCFMMCTradingAccountTokenField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQueryCFMMCTradingAccountTokenField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQueryCFMMCTradingAccountTokenField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryCFMMCTradingAccountTokenField>())).BrokerID
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryCFMMCTradingAccountTokenField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryCFMMCTradingAccountTokenField>())).InvestorID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryCFMMCTradingAccountTokenField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQueryCFMMCTradingAccountTokenField>())).InvestUnitID
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQueryCFMMCTradingAccountTokenField),
            "::",
            stringify!(InvestUnitID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCFMMCTradingAccountTokenField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub ParticipantID: TThostFtdcParticipantIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub KeyID: TThostFtdcSequenceNoType,
    pub Token: TThostFtdcCFMMCTokenType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCFMMCTradingAccountTokenField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCFMMCTradingAccountTokenField>(),
        64usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcCFMMCTradingAccountTokenField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCFMMCTradingAccountTokenField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcCFMMCTradingAccountTokenField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountTokenField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountTokenField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountTokenField>())).ParticipantID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountTokenField),
            "::",
            stringify!(ParticipantID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountTokenField>())).AccountID
                as *const _ as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountTokenField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountTokenField>())).KeyID as *const _
                as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountTokenField),
            "::",
            stringify!(KeyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCFMMCTradingAccountTokenField>())).Token as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCFMMCTradingAccountTokenField),
            "::",
            stringify!(Token)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryProductGroupField {
    pub ProductID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryProductGroupField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryProductGroupField>(),
        40usize,
        concat!("Size of: ", stringify!(CThostFtdcQryProductGroupField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryProductGroupField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryProductGroupField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryProductGroupField>())).ProductID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryProductGroupField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryProductGroupField>())).ExchangeID as *const _
                as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryProductGroupField),
            "::",
            stringify!(ExchangeID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcProductGroupField {
    pub ProductID: TThostFtdcInstrumentIDType,
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub ProductGroupID: TThostFtdcInstrumentIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcProductGroupField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcProductGroupField>(),
        71usize,
        concat!("Size of: ", stringify!(CThostFtdcProductGroupField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcProductGroupField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcProductGroupField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductGroupField>())).ProductID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductGroupField),
            "::",
            stringify!(ProductID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductGroupField>())).ExchangeID as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductGroupField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcProductGroupField>())).ProductGroupID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcProductGroupField),
            "::",
            stringify!(ProductGroupID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcBulletinField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub TradingDay: TThostFtdcDateType,
    pub BulletinID: TThostFtdcBulletinIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub NewsType: TThostFtdcNewsTypeType,
    pub NewsUrgency: TThostFtdcNewsUrgencyType,
    pub SendTime: TThostFtdcTimeType,
    pub Abstract: TThostFtdcAbstractType,
    pub ComeFrom: TThostFtdcComeFromType,
    pub Content: TThostFtdcContentType,
    pub URLLink: TThostFtdcURLLinkType,
    pub MarketID: TThostFtdcMarketIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBulletinField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBulletinField>(),
        876usize,
        concat!("Size of: ", stringify!(CThostFtdcBulletinField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBulletinField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcBulletinField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).TradingDay as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).BulletinID as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(BulletinID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).SequenceNo as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).NewsType as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(NewsType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).NewsUrgency as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(NewsUrgency)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).SendTime as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(SendTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).Abstract as *const _ as usize
        },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(Abstract)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).ComeFrom as *const _ as usize
        },
        122usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(ComeFrom)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcBulletinField>())).Content as *const _ as usize },
        143usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(Content)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcBulletinField>())).URLLink as *const _ as usize },
        644usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(URLLink)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBulletinField>())).MarketID as *const _ as usize
        },
        845usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBulletinField),
            "::",
            stringify!(MarketID)
        )
    );
}
impl Default for CThostFtdcBulletinField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryBulletinField {
    pub ExchangeID: TThostFtdcExchangeIDType,
    pub BulletinID: TThostFtdcBulletinIDType,
    pub SequenceNo: TThostFtdcSequenceNoType,
    pub NewsType: TThostFtdcNewsTypeType,
    pub NewsUrgency: TThostFtdcNewsUrgencyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryBulletinField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryBulletinField>(),
        24usize,
        concat!("Size of: ", stringify!(CThostFtdcQryBulletinField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryBulletinField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryBulletinField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBulletinField>())).ExchangeID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBulletinField),
            "::",
            stringify!(ExchangeID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBulletinField>())).BulletinID as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBulletinField),
            "::",
            stringify!(BulletinID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBulletinField>())).SequenceNo as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBulletinField),
            "::",
            stringify!(SequenceNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBulletinField>())).NewsType as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBulletinField),
            "::",
            stringify!(NewsType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryBulletinField>())).NewsUrgency as *const _ as usize
        },
        23usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryBulletinField),
            "::",
            stringify!(NewsUrgency)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqOpenAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub CashExchangeCode: TThostFtdcCashExchangeCodeType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub TID: TThostFtdcTIDType,
    pub UserID: TThostFtdcUserIDType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqOpenAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqOpenAccountField>(),
        956usize,
        concat!("Size of: ", stringify!(CThostFtdcReqOpenAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqOpenAccountField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqOpenAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).IdCardType as *const _
                as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).Gender as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).CountryCode as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).CustType as *const _ as usize
        },
        237usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).Address as *const _ as usize
        },
        238usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).ZipCode as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).Telephone as *const _ as usize
        },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).MobilePhone as *const _
                as usize
        },
        387usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).Fax as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).EMail as *const _ as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).MoneyAccountStatus as *const _
                as usize
        },
        490usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankAccount as *const _
                as usize
        },
        491usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankPassWord as *const _
                as usize
        },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).AccountID as *const _ as usize
        },
        573usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).Password as *const _ as usize
        },
        586usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).InstallID as *const _ as usize
        },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).CurrencyID as *const _
                as usize
        },
        633usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).CashExchangeCode as *const _
                as usize
        },
        637usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(CashExchangeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).Digest as *const _ as usize
        },
        638usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankAccType as *const _
                as usize
        },
        674usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).DeviceID as *const _ as usize
        },
        675usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankSecuAccType as *const _
                as usize
        },
        678usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        679usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankSecuAcc as *const _
                as usize
        },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).BankPwdFlag as *const _
                as usize
        },
        753usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        754usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).OperNo as *const _ as usize
        },
        755usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).TID as *const _ as usize
        },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).UserID as *const _ as usize
        },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqOpenAccountField>())).LongCustomerName as *const _
                as usize
        },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqOpenAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcReqOpenAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqCancelAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub CashExchangeCode: TThostFtdcCashExchangeCodeType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub TID: TThostFtdcTIDType,
    pub UserID: TThostFtdcUserIDType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqCancelAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqCancelAccountField>(),
        956usize,
        concat!("Size of: ", stringify!(CThostFtdcReqCancelAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqCancelAccountField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqCancelAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).IdCardType as *const _
                as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).Gender as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).CountryCode as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).CustType as *const _
                as usize
        },
        237usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).Address as *const _ as usize
        },
        238usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).ZipCode as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).Telephone as *const _
                as usize
        },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).MobilePhone as *const _
                as usize
        },
        387usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).Fax as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).EMail as *const _ as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).MoneyAccountStatus
                as *const _ as usize
        },
        490usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankAccount as *const _
                as usize
        },
        491usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankPassWord as *const _
                as usize
        },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).AccountID as *const _
                as usize
        },
        573usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).Password as *const _
                as usize
        },
        586usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).InstallID as *const _
                as usize
        },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).CurrencyID as *const _
                as usize
        },
        633usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).CashExchangeCode as *const _
                as usize
        },
        637usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(CashExchangeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).Digest as *const _ as usize
        },
        638usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankAccType as *const _
                as usize
        },
        674usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).DeviceID as *const _
                as usize
        },
        675usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankSecuAccType as *const _
                as usize
        },
        678usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        679usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankSecuAcc as *const _
                as usize
        },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).BankPwdFlag as *const _
                as usize
        },
        753usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        754usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).OperNo as *const _ as usize
        },
        755usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).TID as *const _ as usize
        },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).UserID as *const _ as usize
        },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqCancelAccountField>())).LongCustomerName as *const _
                as usize
        },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqCancelAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcReqCancelAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqChangeAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub NewBankAccount: TThostFtdcBankAccountType,
    pub NewBankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub TID: TThostFtdcTIDType,
    pub Digest: TThostFtdcDigestType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqChangeAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqChangeAccountField>(),
        960usize,
        concat!("Size of: ", stringify!(CThostFtdcReqChangeAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqChangeAccountField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqChangeAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).IdCardType as *const _
                as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).Gender as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).CountryCode as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).CustType as *const _
                as usize
        },
        237usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).Address as *const _ as usize
        },
        238usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).ZipCode as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).Telephone as *const _
                as usize
        },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).MobilePhone as *const _
                as usize
        },
        387usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).Fax as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).EMail as *const _ as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).MoneyAccountStatus
                as *const _ as usize
        },
        490usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BankAccount as *const _
                as usize
        },
        491usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BankPassWord as *const _
                as usize
        },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).NewBankAccount as *const _
                as usize
        },
        573usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(NewBankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).NewBankPassWord as *const _
                as usize
        },
        614usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(NewBankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).AccountID as *const _
                as usize
        },
        655usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).Password as *const _
                as usize
        },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BankAccType as *const _
                as usize
        },
        709usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).InstallID as *const _
                as usize
        },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).CurrencyID as *const _
                as usize
        },
        717usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        721usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).BankPwdFlag as *const _
                as usize
        },
        754usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        755usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).TID as *const _ as usize
        },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).Digest as *const _ as usize
        },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqChangeAccountField>())).LongCustomerName as *const _
                as usize
        },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqChangeAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcReqChangeAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqTransferField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub UserID: TThostFtdcUserIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub TradeAmount: TThostFtdcTradeAmountType,
    pub FutureFetchAmount: TThostFtdcTradeAmountType,
    pub FeePayFlag: TThostFtdcFeePayFlagType,
    pub CustFee: TThostFtdcCustFeeType,
    pub BrokerFee: TThostFtdcFutureFeeType,
    pub Message: TThostFtdcAddInfoType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub TransferStatus: TThostFtdcTransferStatusType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqTransferField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqTransferField>(),
        864usize,
        concat!("Size of: ", stringify!(CThostFtdcReqTransferField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqTransferField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqTransferField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankBranchID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).PlateSerial as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).LastFragment as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).CustomerName as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).IdCardType as *const _ as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).CustType as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankAccount as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankPassWord as *const _ as usize
        },
        257usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).AccountID as *const _ as usize
        },
        298usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).Password as *const _ as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).InstallID as *const _ as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).FutureSerial as *const _ as usize
        },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).UserID as *const _ as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).VerifyCertNoFlag as *const _
                as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).CurrencyID as *const _ as usize
        },
        377usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).TradeAmount as *const _ as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(TradeAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).FutureFetchAmount as *const _
                as usize
        },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(FutureFetchAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).FeePayFlag as *const _ as usize
        },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(FeePayFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).CustFee as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BrokerFee as *const _ as usize
        },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BrokerFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).Message as *const _ as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(Message)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).Digest as *const _ as usize
        },
        553usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankAccType as *const _ as usize
        },
        589usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).DeviceID as *const _ as usize
        },
        590usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankSecuAccType as *const _
                as usize
        },
        593usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BrokerIDByBank as *const _
                as usize
        },
        594usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankSecuAcc as *const _ as usize
        },
        627usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).BankPwdFlag as *const _ as usize
        },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).SecuPwdFlag as *const _ as usize
        },
        669usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).OperNo as *const _ as usize
        },
        670usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).RequestID as *const _ as usize
        },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).TID as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).TransferStatus as *const _
                as usize
        },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(TransferStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqTransferField>())).LongCustomerName as *const _
                as usize
        },
        697usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqTransferField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcReqTransferField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspTransferField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub UserID: TThostFtdcUserIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub TradeAmount: TThostFtdcTradeAmountType,
    pub FutureFetchAmount: TThostFtdcTradeAmountType,
    pub FeePayFlag: TThostFtdcFeePayFlagType,
    pub CustFee: TThostFtdcCustFeeType,
    pub BrokerFee: TThostFtdcFutureFeeType,
    pub Message: TThostFtdcAddInfoType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub TransferStatus: TThostFtdcTransferStatusType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspTransferField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspTransferField>(),
        952usize,
        concat!("Size of: ", stringify!(CThostFtdcRspTransferField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspTransferField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspTransferField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankBranchID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).PlateSerial as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).LastFragment as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).CustomerName as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).IdCardType as *const _ as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).CustType as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankAccount as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankPassWord as *const _ as usize
        },
        257usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).AccountID as *const _ as usize
        },
        298usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).Password as *const _ as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).InstallID as *const _ as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).FutureSerial as *const _ as usize
        },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).UserID as *const _ as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).VerifyCertNoFlag as *const _
                as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).CurrencyID as *const _ as usize
        },
        377usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).TradeAmount as *const _ as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(TradeAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).FutureFetchAmount as *const _
                as usize
        },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(FutureFetchAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).FeePayFlag as *const _ as usize
        },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(FeePayFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).CustFee as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BrokerFee as *const _ as usize
        },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BrokerFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).Message as *const _ as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(Message)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).Digest as *const _ as usize
        },
        553usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankAccType as *const _ as usize
        },
        589usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).DeviceID as *const _ as usize
        },
        590usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankSecuAccType as *const _
                as usize
        },
        593usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BrokerIDByBank as *const _
                as usize
        },
        594usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankSecuAcc as *const _ as usize
        },
        627usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).BankPwdFlag as *const _ as usize
        },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).SecuPwdFlag as *const _ as usize
        },
        669usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).OperNo as *const _ as usize
        },
        670usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).RequestID as *const _ as usize
        },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).TID as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).TransferStatus as *const _
                as usize
        },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(TransferStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).ErrorID as *const _ as usize
        },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).ErrorMsg as *const _ as usize
        },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspTransferField>())).LongCustomerName as *const _
                as usize
        },
        785usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspTransferField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcRspTransferField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqRepealField {
    pub RepealTimeInterval: TThostFtdcRepealTimeIntervalType,
    pub RepealedTimes: TThostFtdcRepealedTimesType,
    pub BankRepealFlag: TThostFtdcBankRepealFlagType,
    pub BrokerRepealFlag: TThostFtdcBrokerRepealFlagType,
    pub PlateRepealSerial: TThostFtdcPlateSerialType,
    pub BankRepealSerial: TThostFtdcBankSerialType,
    pub FutureRepealSerial: TThostFtdcFutureSerialType,
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub UserID: TThostFtdcUserIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub TradeAmount: TThostFtdcTradeAmountType,
    pub FutureFetchAmount: TThostFtdcTradeAmountType,
    pub FeePayFlag: TThostFtdcFeePayFlagType,
    pub CustFee: TThostFtdcCustFeeType,
    pub BrokerFee: TThostFtdcFutureFeeType,
    pub Message: TThostFtdcAddInfoType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub TransferStatus: TThostFtdcTransferStatusType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqRepealField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqRepealField>(),
        904usize,
        concat!("Size of: ", stringify!(CThostFtdcReqRepealField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqRepealField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqRepealField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).RepealTimeInterval as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(RepealTimeInterval)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).RepealedTimes as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(RepealedTimes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankRepealFlag as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankRepealFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BrokerRepealFlag as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BrokerRepealFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).PlateRepealSerial as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(PlateRepealSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankRepealSerial as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankRepealSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).FutureRepealSerial as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(FutureRepealSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).TradeCode as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankID as *const _ as usize },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankBranchID as *const _ as usize
        },
        47usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BrokerID as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BrokerBranchID as *const _ as usize
        },
        63usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).TradeDate as *const _ as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).TradeTime as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankSerial as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).TradingDay as *const _ as usize
        },
        125usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).PlateSerial as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).LastFragment as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).SessionID as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).CustomerName as *const _ as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).IdCardType as *const _ as usize
        },
        199usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).IdentifiedCardNo as *const _
                as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).CustType as *const _ as usize
        },
        251usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankAccount as *const _ as usize
        },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankPassWord as *const _ as usize
        },
        293usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).AccountID as *const _ as usize
        },
        334usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).Password as *const _ as usize
        },
        347usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).InstallID as *const _ as usize
        },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).FutureSerial as *const _ as usize
        },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).UserID as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).VerifyCertNoFlag as *const _
                as usize
        },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).CurrencyID as *const _ as usize
        },
        413usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).TradeAmount as *const _ as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(TradeAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).FutureFetchAmount as *const _
                as usize
        },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(FutureFetchAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).FeePayFlag as *const _ as usize
        },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(FeePayFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).CustFee as *const _ as usize
        },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BrokerFee as *const _ as usize
        },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BrokerFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).Message as *const _ as usize
        },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(Message)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).Digest as *const _ as usize },
        593usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankAccType as *const _ as usize
        },
        629usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).DeviceID as *const _ as usize
        },
        630usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankSecuAccType as *const _
                as usize
        },
        633usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BrokerIDByBank as *const _ as usize
        },
        634usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankSecuAcc as *const _ as usize
        },
        667usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).BankPwdFlag as *const _ as usize
        },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).SecuPwdFlag as *const _ as usize
        },
        709usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).OperNo as *const _ as usize },
        710usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).RequestID as *const _ as usize
        },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).TID as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).TransferStatus as *const _ as usize
        },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(TransferStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqRepealField>())).LongCustomerName as *const _
                as usize
        },
        737usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqRepealField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcReqRepealField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspRepealField {
    pub RepealTimeInterval: TThostFtdcRepealTimeIntervalType,
    pub RepealedTimes: TThostFtdcRepealedTimesType,
    pub BankRepealFlag: TThostFtdcBankRepealFlagType,
    pub BrokerRepealFlag: TThostFtdcBrokerRepealFlagType,
    pub PlateRepealSerial: TThostFtdcPlateSerialType,
    pub BankRepealSerial: TThostFtdcBankSerialType,
    pub FutureRepealSerial: TThostFtdcFutureSerialType,
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub UserID: TThostFtdcUserIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub TradeAmount: TThostFtdcTradeAmountType,
    pub FutureFetchAmount: TThostFtdcTradeAmountType,
    pub FeePayFlag: TThostFtdcFeePayFlagType,
    pub CustFee: TThostFtdcCustFeeType,
    pub BrokerFee: TThostFtdcFutureFeeType,
    pub Message: TThostFtdcAddInfoType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub TransferStatus: TThostFtdcTransferStatusType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspRepealField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspRepealField>(),
        992usize,
        concat!("Size of: ", stringify!(CThostFtdcRspRepealField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspRepealField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspRepealField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).RepealTimeInterval as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(RepealTimeInterval)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).RepealedTimes as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(RepealedTimes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankRepealFlag as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankRepealFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BrokerRepealFlag as *const _
                as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BrokerRepealFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).PlateRepealSerial as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(PlateRepealSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankRepealSerial as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankRepealSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).FutureRepealSerial as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(FutureRepealSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).TradeCode as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankID as *const _ as usize },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankBranchID as *const _ as usize
        },
        47usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BrokerID as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BrokerBranchID as *const _ as usize
        },
        63usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).TradeDate as *const _ as usize
        },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).TradeTime as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankSerial as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).TradingDay as *const _ as usize
        },
        125usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).PlateSerial as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).LastFragment as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).SessionID as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).CustomerName as *const _ as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).IdCardType as *const _ as usize
        },
        199usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).IdentifiedCardNo as *const _
                as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).CustType as *const _ as usize
        },
        251usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankAccount as *const _ as usize
        },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankPassWord as *const _ as usize
        },
        293usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).AccountID as *const _ as usize
        },
        334usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).Password as *const _ as usize
        },
        347usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).InstallID as *const _ as usize
        },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).FutureSerial as *const _ as usize
        },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).UserID as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).VerifyCertNoFlag as *const _
                as usize
        },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).CurrencyID as *const _ as usize
        },
        413usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).TradeAmount as *const _ as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(TradeAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).FutureFetchAmount as *const _
                as usize
        },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(FutureFetchAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).FeePayFlag as *const _ as usize
        },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(FeePayFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).CustFee as *const _ as usize
        },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BrokerFee as *const _ as usize
        },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BrokerFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).Message as *const _ as usize
        },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(Message)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).Digest as *const _ as usize },
        593usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankAccType as *const _ as usize
        },
        629usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).DeviceID as *const _ as usize
        },
        630usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankSecuAccType as *const _
                as usize
        },
        633usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BrokerIDByBank as *const _ as usize
        },
        634usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankSecuAcc as *const _ as usize
        },
        667usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).BankPwdFlag as *const _ as usize
        },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).SecuPwdFlag as *const _ as usize
        },
        709usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).OperNo as *const _ as usize },
        710usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).RequestID as *const _ as usize
        },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).TID as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).TransferStatus as *const _ as usize
        },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(TransferStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).ErrorID as *const _ as usize
        },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).ErrorMsg as *const _ as usize
        },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspRepealField>())).LongCustomerName as *const _
                as usize
        },
        825usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspRepealField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcRspRepealField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqQueryAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqQueryAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqQueryAccountField>(),
        688usize,
        concat!("Size of: ", stringify!(CThostFtdcReqQueryAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqQueryAccountField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqQueryAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).IdCardType as *const _
                as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).CustType as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankAccount as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankPassWord as *const _
                as usize
        },
        257usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).AccountID as *const _
                as usize
        },
        298usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).Password as *const _ as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).FutureSerial as *const _
                as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).InstallID as *const _
                as usize
        },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).UserID as *const _ as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).CurrencyID as *const _
                as usize
        },
        377usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).Digest as *const _ as usize
        },
        381usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankAccType as *const _
                as usize
        },
        417usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).DeviceID as *const _ as usize
        },
        418usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankSecuAccType as *const _
                as usize
        },
        421usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        422usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankSecuAcc as *const _
                as usize
        },
        455usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).BankPwdFlag as *const _
                as usize
        },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        497usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).OperNo as *const _ as usize
        },
        498usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).RequestID as *const _
                as usize
        },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).TID as *const _ as usize
        },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryAccountField>())).LongCustomerName as *const _
                as usize
        },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcReqQueryAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspQueryAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub BankUseAmount: TThostFtdcTradeAmountType,
    pub BankFetchAmount: TThostFtdcTradeAmountType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspQueryAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspQueryAccountField>(),
        712usize,
        concat!("Size of: ", stringify!(CThostFtdcRspQueryAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspQueryAccountField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspQueryAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).IdCardType as *const _
                as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).CustType as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankAccount as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankPassWord as *const _
                as usize
        },
        257usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).AccountID as *const _
                as usize
        },
        298usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).Password as *const _ as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).FutureSerial as *const _
                as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).InstallID as *const _
                as usize
        },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).UserID as *const _ as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).CurrencyID as *const _
                as usize
        },
        377usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).Digest as *const _ as usize
        },
        381usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankAccType as *const _
                as usize
        },
        417usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).DeviceID as *const _ as usize
        },
        418usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankSecuAccType as *const _
                as usize
        },
        421usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        422usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankSecuAcc as *const _
                as usize
        },
        455usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankPwdFlag as *const _
                as usize
        },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        497usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).OperNo as *const _ as usize
        },
        498usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).RequestID as *const _
                as usize
        },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).TID as *const _ as usize
        },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankUseAmount as *const _
                as usize
        },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankUseAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).BankFetchAmount as *const _
                as usize
        },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(BankFetchAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryAccountField>())).LongCustomerName as *const _
                as usize
        },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcRspQueryAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcFutureSignIOField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Digest: TThostFtdcDigestType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcFutureSignIOField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcFutureSignIOField>(),
        236usize,
        concat!("Size of: ", stringify!(CThostFtdcFutureSignIOField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcFutureSignIOField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcFutureSignIOField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).PlateSerial as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).InstallID as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).UserID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).Digest as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).CurrencyID as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).DeviceID as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).BrokerIDByBank as *const _
                as usize
        },
        175usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).OperNo as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).RequestID as *const _ as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcFutureSignIOField>())).TID as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFutureSignIOField),
            "::",
            stringify!(TID)
        )
    );
}
impl Default for CThostFtdcFutureSignIOField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspFutureSignInField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Digest: TThostFtdcDigestType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub PinKey: TThostFtdcPasswordKeyType,
    pub MacKey: TThostFtdcPasswordKeyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspFutureSignInField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspFutureSignInField>(),
        580usize,
        concat!("Size of: ", stringify!(CThostFtdcRspFutureSignInField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspFutureSignInField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspFutureSignInField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).InstallID as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).UserID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).Digest as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).CurrencyID as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).DeviceID as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).BrokerIDByBank as *const _
                as usize
        },
        175usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).OperNo as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).RequestID as *const _
                as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).TID as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).ErrorID as *const _ as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).ErrorMsg as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).PinKey as *const _ as usize
        },
        321usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(PinKey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignInField>())).MacKey as *const _ as usize
        },
        450usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignInField),
            "::",
            stringify!(MacKey)
        )
    );
}
impl Default for CThostFtdcRspFutureSignInField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqFutureSignOutField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Digest: TThostFtdcDigestType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqFutureSignOutField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqFutureSignOutField>(),
        236usize,
        concat!("Size of: ", stringify!(CThostFtdcReqFutureSignOutField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqFutureSignOutField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqFutureSignOutField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).InstallID as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).UserID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).Digest as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).CurrencyID as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).DeviceID as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).BrokerIDByBank as *const _
                as usize
        },
        175usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).OperNo as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).RequestID as *const _
                as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqFutureSignOutField>())).TID as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqFutureSignOutField),
            "::",
            stringify!(TID)
        )
    );
}
impl Default for CThostFtdcReqFutureSignOutField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspFutureSignOutField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Digest: TThostFtdcDigestType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspFutureSignOutField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspFutureSignOutField>(),
        324usize,
        concat!("Size of: ", stringify!(CThostFtdcRspFutureSignOutField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspFutureSignOutField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspFutureSignOutField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).InstallID as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).UserID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).Digest as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).CurrencyID as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).DeviceID as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).BrokerIDByBank as *const _
                as usize
        },
        175usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).OperNo as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).RequestID as *const _
                as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).TID as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).ErrorID as *const _ as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspFutureSignOutField>())).ErrorMsg as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspFutureSignOutField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcRspFutureSignOutField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqQueryTradeResultBySerialField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub Reference: TThostFtdcSerialType,
    pub RefrenceIssureType: TThostFtdcInstitutionTypeType,
    pub RefrenceIssure: TThostFtdcOrganCodeType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub TradeAmount: TThostFtdcTradeAmountType,
    pub Digest: TThostFtdcDigestType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqQueryTradeResultBySerialField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqQueryTradeResultBySerialField>(),
        608usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqQueryTradeResultBySerialField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).TradeCode
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).BankID
                as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).BankBranchID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).BrokerID
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).BrokerBranchID
                as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).TradeDate
                as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).TradeTime
                as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).BankSerial
                as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).TradingDay
                as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).PlateSerial
                as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).LastFragment
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).SessionID
                as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).Reference
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(Reference)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>()))
                .RefrenceIssureType as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(RefrenceIssureType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).RefrenceIssure
                as *const _ as usize
        },
        117usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(RefrenceIssure)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).CustomerName
                as *const _ as usize
        },
        153usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).IdCardType
                as *const _ as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).IdentifiedCardNo
                as *const _ as usize
        },
        205usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).CustType
                as *const _ as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).BankAccount
                as *const _ as usize
        },
        257usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).BankPassWord
                as *const _ as usize
        },
        298usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).AccountID
                as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).Password
                as *const _ as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).CurrencyID
                as *const _ as usize
        },
        393usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).TradeAmount
                as *const _ as usize
        },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(TradeAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).Digest
                as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqQueryTradeResultBySerialField>())).LongCustomerName
                as *const _ as usize
        },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqQueryTradeResultBySerialField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcReqQueryTradeResultBySerialField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspQueryTradeResultBySerialField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub Reference: TThostFtdcSerialType,
    pub RefrenceIssureType: TThostFtdcInstitutionTypeType,
    pub RefrenceIssure: TThostFtdcOrganCodeType,
    pub OriginReturnCode: TThostFtdcReturnCodeType,
    pub OriginDescrInfoForReturnCode: TThostFtdcDescrInfoForReturnCodeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub TradeAmount: TThostFtdcTradeAmountType,
    pub Digest: TThostFtdcDigestType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspQueryTradeResultBySerialField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspQueryTradeResultBySerialField>(),
        568usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspQueryTradeResultBySerialField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).TradeCode
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).BankID
                as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).BankBranchID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).BrokerID
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).BrokerBranchID
                as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).TradeDate
                as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).TradeTime
                as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).BankSerial
                as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).TradingDay
                as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).PlateSerial
                as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).LastFragment
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).SessionID
                as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).ErrorID
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).ErrorMsg
                as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).Reference
                as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(Reference)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>()))
                .RefrenceIssureType as *const _ as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(RefrenceIssureType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).RefrenceIssure
                as *const _ as usize
        },
        205usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(RefrenceIssure)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).OriginReturnCode
                as *const _ as usize
        },
        241usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(OriginReturnCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>()))
                .OriginDescrInfoForReturnCode as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(OriginDescrInfoForReturnCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).BankAccount
                as *const _ as usize
        },
        377usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).BankPassWord
                as *const _ as usize
        },
        418usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).AccountID
                as *const _ as usize
        },
        459usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).Password
                as *const _ as usize
        },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).CurrencyID
                as *const _ as usize
        },
        513usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).TradeAmount
                as *const _ as usize
        },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(TradeAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspQueryTradeResultBySerialField>())).Digest
                as *const _ as usize
        },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspQueryTradeResultBySerialField),
            "::",
            stringify!(Digest)
        )
    );
}
impl Default for CThostFtdcRspQueryTradeResultBySerialField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqDayEndFileReadyField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub FileBusinessCode: TThostFtdcFileBusinessCodeType,
    pub Digest: TThostFtdcDigestType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqDayEndFileReadyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqDayEndFileReadyField>(),
        152usize,
        concat!("Size of: ", stringify!(CThostFtdcReqDayEndFileReadyField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqDayEndFileReadyField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcReqDayEndFileReadyField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).BankID as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).FileBusinessCode
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(FileBusinessCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqDayEndFileReadyField>())).Digest as *const _
                as usize
        },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqDayEndFileReadyField),
            "::",
            stringify!(Digest)
        )
    );
}
impl Default for CThostFtdcReqDayEndFileReadyField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReturnResultField {
    pub ReturnCode: TThostFtdcReturnCodeType,
    pub DescrInfoForReturnCode: TThostFtdcDescrInfoForReturnCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReturnResultField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReturnResultField>(),
        136usize,
        concat!("Size of: ", stringify!(CThostFtdcReturnResultField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReturnResultField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcReturnResultField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReturnResultField>())).ReturnCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReturnResultField),
            "::",
            stringify!(ReturnCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReturnResultField>())).DescrInfoForReturnCode
                as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReturnResultField),
            "::",
            stringify!(DescrInfoForReturnCode)
        )
    );
}
impl Default for CThostFtdcReturnResultField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcVerifyFuturePasswordField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub TID: TThostFtdcTIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcVerifyFuturePasswordField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcVerifyFuturePasswordField>(),
        260usize,
        concat!("Size of: ", stringify!(CThostFtdcVerifyFuturePasswordField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcVerifyFuturePasswordField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcVerifyFuturePasswordField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).BankID as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).BrokerBranchID
                as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).AccountID as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).Password as *const _
                as usize
        },
        125usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).BankAccount as *const _
                as usize
        },
        166usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).BankPassWord as *const _
                as usize
        },
        207usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).InstallID as *const _
                as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).TID as *const _ as usize
        },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordField>())).CurrencyID as *const _
                as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
impl Default for CThostFtdcVerifyFuturePasswordField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcVerifyCustInfoField {
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcVerifyCustInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcVerifyCustInfoField>(),
        265usize,
        concat!("Size of: ", stringify!(CThostFtdcVerifyCustInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcVerifyCustInfoField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcVerifyCustInfoField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyCustInfoField>())).CustomerName as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyCustInfoField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyCustInfoField>())).IdCardType as *const _
                as usize
        },
        51usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyCustInfoField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyCustInfoField>())).IdentifiedCardNo as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyCustInfoField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyCustInfoField>())).CustType as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyCustInfoField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyCustInfoField>())).LongCustomerName as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyCustInfoField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcVerifyCustInfoField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcVerifyFuturePasswordAndCustInfoField {
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcVerifyFuturePasswordAndCustInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcVerifyFuturePasswordAndCustInfoField>(),
        323usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcVerifyFuturePasswordAndCustInfoField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>())).CustomerName
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>())).IdCardType
                as *const _ as usize
        },
        51usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>()))
                .IdentifiedCardNo as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>())).CustType
                as *const _ as usize
        },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>())).AccountID
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>())).Password
                as *const _ as usize
        },
        117usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>())).CurrencyID
                as *const _ as usize
        },
        158usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcVerifyFuturePasswordAndCustInfoField>()))
                .LongCustomerName as *const _ as usize
        },
        162usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcVerifyFuturePasswordAndCustInfoField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcVerifyFuturePasswordAndCustInfoField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcDepositResultInformField {
    pub DepositSeqNo: TThostFtdcDepositSeqNoType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub Deposit: TThostFtdcMoneyType,
    pub RequestID: TThostFtdcRequestIDType,
    pub ReturnCode: TThostFtdcReturnCodeType,
    pub DescrInfoForReturnCode: TThostFtdcDescrInfoForReturnCodeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcDepositResultInformField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcDepositResultInformField>(),
        192usize,
        concat!("Size of: ", stringify!(CThostFtdcDepositResultInformField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcDepositResultInformField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcDepositResultInformField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepositResultInformField>())).DepositSeqNo as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepositResultInformField),
            "::",
            stringify!(DepositSeqNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepositResultInformField>())).BrokerID as *const _
                as usize
        },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepositResultInformField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepositResultInformField>())).InvestorID as *const _
                as usize
        },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepositResultInformField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepositResultInformField>())).Deposit as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepositResultInformField),
            "::",
            stringify!(Deposit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepositResultInformField>())).RequestID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepositResultInformField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepositResultInformField>())).ReturnCode as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepositResultInformField),
            "::",
            stringify!(ReturnCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDepositResultInformField>())).DescrInfoForReturnCode
                as *const _ as usize
        },
        59usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDepositResultInformField),
            "::",
            stringify!(DescrInfoForReturnCode)
        )
    );
}
impl Default for CThostFtdcDepositResultInformField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReqSyncKeyField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Message: TThostFtdcAddInfoType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReqSyncKeyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReqSyncKeyField>(),
        324usize,
        concat!("Size of: ", stringify!(CThostFtdcReqSyncKeyField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReqSyncKeyField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcReqSyncKeyField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).BankBranchID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).PlateSerial as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).LastFragment as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).InstallID as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).UserID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).Message as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(Message)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).DeviceID as *const _ as usize
        },
        261usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).BrokerIDByBank as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).OperNo as *const _ as usize
        },
        297usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).RequestID as *const _ as usize
        },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcReqSyncKeyField>())).TID as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReqSyncKeyField),
            "::",
            stringify!(TID)
        )
    );
}
impl Default for CThostFtdcReqSyncKeyField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcRspSyncKeyField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Message: TThostFtdcAddInfoType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcRspSyncKeyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcRspSyncKeyField>(),
        412usize,
        concat!("Size of: ", stringify!(CThostFtdcRspSyncKeyField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcRspSyncKeyField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcRspSyncKeyField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).BankBranchID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).PlateSerial as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).LastFragment as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).InstallID as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).UserID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).Message as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(Message)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).DeviceID as *const _ as usize
        },
        261usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).BrokerIDByBank as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).OperNo as *const _ as usize
        },
        297usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).RequestID as *const _ as usize
        },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).TID as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).ErrorID as *const _ as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcRspSyncKeyField>())).ErrorMsg as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcRspSyncKeyField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcRspSyncKeyField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcNotifyQueryAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub BankUseAmount: TThostFtdcTradeAmountType,
    pub BankFetchAmount: TThostFtdcTradeAmountType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcNotifyQueryAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcNotifyQueryAccountField>(),
        792usize,
        concat!("Size of: ", stringify!(CThostFtdcNotifyQueryAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcNotifyQueryAccountField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcNotifyQueryAccountField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankID as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).IdCardType as *const _
                as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).IdentifiedCardNo
                as *const _ as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).CustType as *const _
                as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankAccount as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankPassWord as *const _
                as usize
        },
        257usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).AccountID as *const _
                as usize
        },
        298usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).Password as *const _
                as usize
        },
        311usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).FutureSerial as *const _
                as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).InstallID as *const _
                as usize
        },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).UserID as *const _
                as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).VerifyCertNoFlag
                as *const _ as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).CurrencyID as *const _
                as usize
        },
        377usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).Digest as *const _
                as usize
        },
        381usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankAccType as *const _
                as usize
        },
        417usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).DeviceID as *const _
                as usize
        },
        418usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankSecuAccType
                as *const _ as usize
        },
        421usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        422usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankSecuAcc as *const _
                as usize
        },
        455usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankPwdFlag as *const _
                as usize
        },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        497usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).OperNo as *const _
                as usize
        },
        498usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).RequestID as *const _
                as usize
        },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).TID as *const _ as usize
        },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankUseAmount as *const _
                as usize
        },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankUseAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).BankFetchAmount
                as *const _ as usize
        },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(BankFetchAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).ErrorID as *const _
                as usize
        },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).ErrorMsg as *const _
                as usize
        },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyQueryAccountField>())).LongCustomerName
                as *const _ as usize
        },
        629usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyQueryAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcNotifyQueryAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcTransferSerialField {
    pub PlateSerial: TThostFtdcPlateSerialType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradingDay: TThostFtdcDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub TradeCode: TThostFtdcTradeCodeType,
    pub SessionID: TThostFtdcSessionIDType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub FutureAccType: TThostFtdcFutureAccTypeType,
    pub AccountID: TThostFtdcAccountIDType,
    pub InvestorID: TThostFtdcInvestorIDType,
    pub FutureSerial: TThostFtdcFutureSerialType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub TradeAmount: TThostFtdcTradeAmountType,
    pub CustFee: TThostFtdcCustFeeType,
    pub BrokerFee: TThostFtdcFutureFeeType,
    pub AvailabilityFlag: TThostFtdcAvailabilityFlagType,
    pub OperatorCode: TThostFtdcOperatorCodeType,
    pub BankNewAccount: TThostFtdcBankAccountType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTransferSerialField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTransferSerialField>(),
        416usize,
        concat!("Size of: ", stringify!(CThostFtdcTransferSerialField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTransferSerialField>(),
        8usize,
        concat!("Alignment of ", stringify!(CThostFtdcTransferSerialField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).PlateSerial as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).TradeDate as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).TradingDay as *const _
                as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).TradeTime as *const _ as usize
        },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).TradeCode as *const _ as usize
        },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).SessionID as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BankID as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BankBranchID as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BankAccType as *const _
                as usize
        },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BankAccount as *const _
                as usize
        },
        54usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BankSerial as *const _
                as usize
        },
        95usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BrokerID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BrokerBranchID as *const _
                as usize
        },
        119usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).FutureAccType as *const _
                as usize
        },
        150usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(FutureAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).AccountID as *const _ as usize
        },
        151usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).InvestorID as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(InvestorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).FutureSerial as *const _
                as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(FutureSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).IdCardType as *const _
                as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).IdentifiedCardNo as *const _
                as usize
        },
        185usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).CurrencyID as *const _
                as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).TradeAmount as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(TradeAmount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).CustFee as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(CustFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BrokerFee as *const _ as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BrokerFee)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).AvailabilityFlag as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(AvailabilityFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).OperatorCode as *const _
                as usize
        },
        265usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(OperatorCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).BankNewAccount as *const _
                as usize
        },
        282usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(BankNewAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).ErrorID as *const _ as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTransferSerialField>())).ErrorMsg as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTransferSerialField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcTransferSerialField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryTransferSerialField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub BankID: TThostFtdcBankIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryTransferSerialField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryTransferSerialField>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcQryTransferSerialField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryTransferSerialField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryTransferSerialField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTransferSerialField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTransferSerialField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTransferSerialField>())).AccountID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTransferSerialField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTransferSerialField>())).BankID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTransferSerialField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryTransferSerialField>())).CurrencyID as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryTransferSerialField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcNotifyFutureSignInField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Digest: TThostFtdcDigestType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub PinKey: TThostFtdcPasswordKeyType,
    pub MacKey: TThostFtdcPasswordKeyType,
}
#[test]
fn bindgen_test_layout_CThostFtdcNotifyFutureSignInField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcNotifyFutureSignInField>(),
        580usize,
        concat!("Size of: ", stringify!(CThostFtdcNotifyFutureSignInField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcNotifyFutureSignInField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcNotifyFutureSignInField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).BankID as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).InstallID as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).UserID as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).Digest as *const _
                as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).CurrencyID as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).DeviceID as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).BrokerIDByBank as *const _
                as usize
        },
        175usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).OperNo as *const _
                as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).RequestID as *const _
                as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).TID as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).ErrorID as *const _
                as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).ErrorMsg as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).PinKey as *const _
                as usize
        },
        321usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(PinKey)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignInField>())).MacKey as *const _
                as usize
        },
        450usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignInField),
            "::",
            stringify!(MacKey)
        )
    );
}
impl Default for CThostFtdcNotifyFutureSignInField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcNotifyFutureSignOutField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Digest: TThostFtdcDigestType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcNotifyFutureSignOutField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcNotifyFutureSignOutField>(),
        324usize,
        concat!("Size of: ", stringify!(CThostFtdcNotifyFutureSignOutField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcNotifyFutureSignOutField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcNotifyFutureSignOutField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).BankID as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).BrokerBranchID
                as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).InstallID as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).UserID as *const _
                as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).Digest as *const _
                as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).CurrencyID as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).DeviceID as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).BrokerIDByBank
                as *const _ as usize
        },
        175usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).OperNo as *const _
                as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).RequestID as *const _
                as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).TID as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).ErrorID as *const _
                as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifyFutureSignOutField>())).ErrorMsg as *const _
                as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifyFutureSignOutField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcNotifyFutureSignOutField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcNotifySyncKeyField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub InstallID: TThostFtdcInstallIDType,
    pub UserID: TThostFtdcUserIDType,
    pub Message: TThostFtdcAddInfoType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub OperNo: TThostFtdcOperNoType,
    pub RequestID: TThostFtdcRequestIDType,
    pub TID: TThostFtdcTIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcNotifySyncKeyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcNotifySyncKeyField>(),
        412usize,
        concat!("Size of: ", stringify!(CThostFtdcNotifySyncKeyField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcNotifySyncKeyField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcNotifySyncKeyField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).InstallID as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).UserID as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).Message as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(Message)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).DeviceID as *const _ as usize
        },
        261usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).BrokerIDByBank as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).OperNo as *const _ as usize
        },
        297usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).RequestID as *const _ as usize
        },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(RequestID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).TID as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).ErrorID as *const _ as usize
        },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcNotifySyncKeyField>())).ErrorMsg as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcNotifySyncKeyField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcNotifySyncKeyField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryAccountregisterField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryAccountregisterField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryAccountregisterField>(),
        37usize,
        concat!("Size of: ", stringify!(CThostFtdcQryAccountregisterField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryAccountregisterField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryAccountregisterField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryAccountregisterField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryAccountregisterField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryAccountregisterField>())).AccountID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryAccountregisterField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryAccountregisterField>())).BankID as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryAccountregisterField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryAccountregisterField>())).BankBranchID as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryAccountregisterField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryAccountregisterField>())).CurrencyID as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryAccountregisterField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcAccountregisterField {
    pub TradeDay: TThostFtdcTradeDateType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub OpenOrDestroy: TThostFtdcOpenOrDestroyType,
    pub RegDate: TThostFtdcTradeDateType,
    pub OutDate: TThostFtdcTradeDateType,
    pub TID: TThostFtdcTIDType,
    pub CustType: TThostFtdcCustTypeType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcAccountregisterField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcAccountregisterField>(),
        408usize,
        concat!("Size of: ", stringify!(CThostFtdcAccountregisterField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcAccountregisterField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcAccountregisterField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).TradeDay as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(TradeDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).BankID as *const _ as usize
        },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).BankBranchID as *const _
                as usize
        },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).BankAccount as *const _
                as usize
        },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).BrokerID as *const _ as usize
        },
        59usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).BrokerBranchID as *const _
                as usize
        },
        70usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).AccountID as *const _
                as usize
        },
        101usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).IdCardType as *const _
                as usize
        },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).IdentifiedCardNo as *const _
                as usize
        },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).CustomerName as *const _
                as usize
        },
        166usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).CurrencyID as *const _
                as usize
        },
        217usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).OpenOrDestroy as *const _
                as usize
        },
        221usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(OpenOrDestroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).RegDate as *const _ as usize
        },
        222usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(RegDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).OutDate as *const _ as usize
        },
        231usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(OutDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).TID as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).CustType as *const _ as usize
        },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).BankAccType as *const _
                as usize
        },
        245usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountregisterField>())).LongCustomerName as *const _
                as usize
        },
        246usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountregisterField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcAccountregisterField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcOpenAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub CashExchangeCode: TThostFtdcCashExchangeCodeType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub TID: TThostFtdcTIDType,
    pub UserID: TThostFtdcUserIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcOpenAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcOpenAccountField>(),
        1040usize,
        concat!("Size of: ", stringify!(CThostFtdcOpenAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcOpenAccountField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcOpenAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankBranchID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).PlateSerial as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).LastFragment as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).CustomerName as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).IdCardType as *const _ as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).Gender as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).CountryCode as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).CustType as *const _ as usize
        },
        237usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).Address as *const _ as usize
        },
        238usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).ZipCode as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).Telephone as *const _ as usize
        },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).MobilePhone as *const _ as usize
        },
        387usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).Fax as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).EMail as *const _ as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).MoneyAccountStatus as *const _
                as usize
        },
        490usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankAccount as *const _ as usize
        },
        491usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankPassWord as *const _ as usize
        },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).AccountID as *const _ as usize
        },
        573usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).Password as *const _ as usize
        },
        586usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).InstallID as *const _ as usize
        },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).CurrencyID as *const _ as usize
        },
        633usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).CashExchangeCode as *const _
                as usize
        },
        637usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(CashExchangeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).Digest as *const _ as usize
        },
        638usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankAccType as *const _ as usize
        },
        674usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).DeviceID as *const _ as usize
        },
        675usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankSecuAccType as *const _
                as usize
        },
        678usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        679usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankSecuAcc as *const _ as usize
        },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).BankPwdFlag as *const _ as usize
        },
        753usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).SecuPwdFlag as *const _ as usize
        },
        754usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).OperNo as *const _ as usize
        },
        755usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).TID as *const _ as usize },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).UserID as *const _ as usize
        },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).ErrorID as *const _ as usize
        },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).ErrorMsg as *const _ as usize
        },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcOpenAccountField>())).LongCustomerName as *const _
                as usize
        },
        877usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcOpenAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcOpenAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcCancelAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub CashExchangeCode: TThostFtdcCashExchangeCodeType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub DeviceID: TThostFtdcDeviceIDType,
    pub BankSecuAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankSecuAcc: TThostFtdcBankAccountType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub OperNo: TThostFtdcOperNoType,
    pub TID: TThostFtdcTIDType,
    pub UserID: TThostFtdcUserIDType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCancelAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCancelAccountField>(),
        1040usize,
        concat!("Size of: ", stringify!(CThostFtdcCancelAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCancelAccountField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcCancelAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).IdCardType as *const _ as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).Gender as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).CountryCode as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).CustType as *const _ as usize
        },
        237usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).Address as *const _ as usize
        },
        238usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).ZipCode as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).Telephone as *const _ as usize
        },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).MobilePhone as *const _
                as usize
        },
        387usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).Fax as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).EMail as *const _ as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).MoneyAccountStatus as *const _
                as usize
        },
        490usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankAccount as *const _
                as usize
        },
        491usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankPassWord as *const _
                as usize
        },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).AccountID as *const _ as usize
        },
        573usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).Password as *const _ as usize
        },
        586usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).InstallID as *const _ as usize
        },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).CurrencyID as *const _ as usize
        },
        633usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).CashExchangeCode as *const _
                as usize
        },
        637usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(CashExchangeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).Digest as *const _ as usize
        },
        638usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankAccType as *const _
                as usize
        },
        674usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).DeviceID as *const _ as usize
        },
        675usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(DeviceID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankSecuAccType as *const _
                as usize
        },
        678usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankSecuAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        679usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankSecuAcc as *const _
                as usize
        },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankSecuAcc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).BankPwdFlag as *const _
                as usize
        },
        753usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        754usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).OperNo as *const _ as usize
        },
        755usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(OperNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).TID as *const _ as usize
        },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).UserID as *const _ as usize
        },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).ErrorID as *const _ as usize
        },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).ErrorMsg as *const _ as usize
        },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCancelAccountField>())).LongCustomerName as *const _
                as usize
        },
        877usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCancelAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcCancelAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcChangeAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub NewBankAccount: TThostFtdcBankAccountType,
    pub NewBankPassWord: TThostFtdcPasswordType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub BankPwdFlag: TThostFtdcPwdFlagType,
    pub SecuPwdFlag: TThostFtdcPwdFlagType,
    pub TID: TThostFtdcTIDType,
    pub Digest: TThostFtdcDigestType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
    pub LongCustomerName: TThostFtdcLongIndividualNameType,
}
#[test]
fn bindgen_test_layout_CThostFtdcChangeAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcChangeAccountField>(),
        1044usize,
        concat!("Size of: ", stringify!(CThostFtdcChangeAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcChangeAccountField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcChangeAccountField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).TradeCode as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BankID as *const _ as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BrokerID as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).TradeDate as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).TradeTime as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BankSerial as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).TradingDay as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).SessionID as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).IdCardType as *const _ as usize
        },
        163usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).IdentifiedCardNo as *const _
                as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).Gender as *const _ as usize
        },
        215usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).CountryCode as *const _
                as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).CustType as *const _ as usize
        },
        237usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).Address as *const _ as usize
        },
        238usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).ZipCode as *const _ as usize
        },
        339usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).Telephone as *const _ as usize
        },
        346usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).MobilePhone as *const _
                as usize
        },
        387usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).Fax as *const _ as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).EMail as *const _ as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).MoneyAccountStatus as *const _
                as usize
        },
        490usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BankAccount as *const _
                as usize
        },
        491usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BankPassWord as *const _
                as usize
        },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).NewBankAccount as *const _
                as usize
        },
        573usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(NewBankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).NewBankPassWord as *const _
                as usize
        },
        614usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(NewBankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).AccountID as *const _ as usize
        },
        655usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).Password as *const _ as usize
        },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BankAccType as *const _
                as usize
        },
        709usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).InstallID as *const _ as usize
        },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).VerifyCertNoFlag as *const _
                as usize
        },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).CurrencyID as *const _ as usize
        },
        717usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        721usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).BankPwdFlag as *const _
                as usize
        },
        754usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(BankPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).SecuPwdFlag as *const _
                as usize
        },
        755usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(SecuPwdFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).TID as *const _ as usize
        },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).Digest as *const _ as usize
        },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).ErrorID as *const _ as usize
        },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).ErrorMsg as *const _ as usize
        },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(ErrorMsg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcChangeAccountField>())).LongCustomerName as *const _
                as usize
        },
        881usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcChangeAccountField),
            "::",
            stringify!(LongCustomerName)
        )
    );
}
impl Default for CThostFtdcChangeAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcSecAgentACIDMapField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub BrokerSecAgentID: TThostFtdcAccountIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcSecAgentACIDMapField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcSecAgentACIDMapField>(),
        57usize,
        concat!("Size of: ", stringify!(CThostFtdcSecAgentACIDMapField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcSecAgentACIDMapField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcSecAgentACIDMapField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSecAgentACIDMapField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSecAgentACIDMapField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSecAgentACIDMapField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSecAgentACIDMapField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSecAgentACIDMapField>())).AccountID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSecAgentACIDMapField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSecAgentACIDMapField>())).CurrencyID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSecAgentACIDMapField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcSecAgentACIDMapField>())).BrokerSecAgentID as *const _
                as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcSecAgentACIDMapField),
            "::",
            stringify!(BrokerSecAgentID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQrySecAgentACIDMapField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQrySecAgentACIDMapField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQrySecAgentACIDMapField>(),
        44usize,
        concat!("Size of: ", stringify!(CThostFtdcQrySecAgentACIDMapField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQrySecAgentACIDMapField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQrySecAgentACIDMapField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySecAgentACIDMapField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySecAgentACIDMapField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySecAgentACIDMapField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySecAgentACIDMapField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySecAgentACIDMapField>())).AccountID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySecAgentACIDMapField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQrySecAgentACIDMapField>())).CurrencyID as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQrySecAgentACIDMapField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcUserRightsAssignField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub DRIdentityID: TThostFtdcDRIdentityIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcUserRightsAssignField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcUserRightsAssignField>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcUserRightsAssignField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcUserRightsAssignField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcUserRightsAssignField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserRightsAssignField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserRightsAssignField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserRightsAssignField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserRightsAssignField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcUserRightsAssignField>())).DRIdentityID as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcUserRightsAssignField),
            "::",
            stringify!(DRIdentityID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcBrokerUserRightAssignField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub DRIdentityID: TThostFtdcDRIdentityIDType,
    pub Tradeable: TThostFtdcBoolType,
}
#[test]
fn bindgen_test_layout_CThostFtdcBrokerUserRightAssignField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcBrokerUserRightAssignField>(),
        20usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcBrokerUserRightAssignField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcBrokerUserRightAssignField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcBrokerUserRightAssignField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserRightAssignField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserRightAssignField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserRightAssignField>())).DRIdentityID
                as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserRightAssignField),
            "::",
            stringify!(DRIdentityID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcBrokerUserRightAssignField>())).Tradeable as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcBrokerUserRightAssignField),
            "::",
            stringify!(Tradeable)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcDRTransferField {
    pub OrigDRIdentityID: TThostFtdcDRIdentityIDType,
    pub DestDRIdentityID: TThostFtdcDRIdentityIDType,
    pub OrigBrokerID: TThostFtdcBrokerIDType,
    pub DestBrokerID: TThostFtdcBrokerIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcDRTransferField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcDRTransferField>(),
        32usize,
        concat!("Size of: ", stringify!(CThostFtdcDRTransferField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcDRTransferField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcDRTransferField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDRTransferField>())).OrigDRIdentityID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDRTransferField),
            "::",
            stringify!(OrigDRIdentityID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDRTransferField>())).DestDRIdentityID as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDRTransferField),
            "::",
            stringify!(DestDRIdentityID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDRTransferField>())).OrigBrokerID as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDRTransferField),
            "::",
            stringify!(OrigBrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcDRTransferField>())).DestBrokerID as *const _ as usize
        },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcDRTransferField),
            "::",
            stringify!(DestBrokerID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcFensUserInfoField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub LoginMode: TThostFtdcLoginModeType,
}
#[test]
fn bindgen_test_layout_CThostFtdcFensUserInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcFensUserInfoField>(),
        28usize,
        concat!("Size of: ", stringify!(CThostFtdcFensUserInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcFensUserInfoField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcFensUserInfoField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFensUserInfoField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFensUserInfoField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFensUserInfoField>())).UserID as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFensUserInfoField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcFensUserInfoField>())).LoginMode as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcFensUserInfoField),
            "::",
            stringify!(LoginMode)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCurrTransferIdentityField {
    pub IdentityID: TThostFtdcDRIdentityIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCurrTransferIdentityField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCurrTransferIdentityField>(),
        4usize,
        concat!("Size of: ", stringify!(CThostFtdcCurrTransferIdentityField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCurrTransferIdentityField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcCurrTransferIdentityField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCurrTransferIdentityField>())).IdentityID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCurrTransferIdentityField),
            "::",
            stringify!(IdentityID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcLoginForbiddenUserField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
    pub IPAddress: TThostFtdcIPAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcLoginForbiddenUserField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcLoginForbiddenUserField>(),
        43usize,
        concat!("Size of: ", stringify!(CThostFtdcLoginForbiddenUserField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcLoginForbiddenUserField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcLoginForbiddenUserField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginForbiddenUserField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginForbiddenUserField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginForbiddenUserField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginForbiddenUserField),
            "::",
            stringify!(UserID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcLoginForbiddenUserField>())).IPAddress as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcLoginForbiddenUserField),
            "::",
            stringify!(IPAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryLoginForbiddenUserField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryLoginForbiddenUserField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryLoginForbiddenUserField>(),
        27usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcQryLoginForbiddenUserField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryLoginForbiddenUserField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryLoginForbiddenUserField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryLoginForbiddenUserField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryLoginForbiddenUserField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryLoginForbiddenUserField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryLoginForbiddenUserField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcMulticastGroupInfoField {
    pub GroupIP: TThostFtdcIPAddressType,
    pub GroupPort: TThostFtdcIPPortType,
    pub SourceIP: TThostFtdcIPAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcMulticastGroupInfoField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcMulticastGroupInfoField>(),
        36usize,
        concat!("Size of: ", stringify!(CThostFtdcMulticastGroupInfoField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcMulticastGroupInfoField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcMulticastGroupInfoField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMulticastGroupInfoField>())).GroupIP as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMulticastGroupInfoField),
            "::",
            stringify!(GroupIP)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMulticastGroupInfoField>())).GroupPort as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMulticastGroupInfoField),
            "::",
            stringify!(GroupPort)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcMulticastGroupInfoField>())).SourceIP as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcMulticastGroupInfoField),
            "::",
            stringify!(SourceIP)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcTradingAccountReserveField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Reserve: TThostFtdcMoneyType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcTradingAccountReserveField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcTradingAccountReserveField>(),
        40usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcTradingAccountReserveField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcTradingAccountReserveField>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcTradingAccountReserveField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountReserveField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountReserveField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountReserveField>())).AccountID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountReserveField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountReserveField>())).Reserve as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountReserveField),
            "::",
            stringify!(Reserve)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcTradingAccountReserveField>())).CurrencyID as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcTradingAccountReserveField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryLoginForbiddenIPField {
    pub IPAddress: TThostFtdcIPAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryLoginForbiddenIPField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryLoginForbiddenIPField>(),
        16usize,
        concat!("Size of: ", stringify!(CThostFtdcQryLoginForbiddenIPField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryLoginForbiddenIPField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryLoginForbiddenIPField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryLoginForbiddenIPField>())).IPAddress as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryLoginForbiddenIPField),
            "::",
            stringify!(IPAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryIPListField {
    pub IPAddress: TThostFtdcIPAddressType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryIPListField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryIPListField>(),
        16usize,
        concat!("Size of: ", stringify!(CThostFtdcQryIPListField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryIPListField>(),
        1usize,
        concat!("Alignment of ", stringify!(CThostFtdcQryIPListField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryIPListField>())).IPAddress as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryIPListField),
            "::",
            stringify!(IPAddress)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryUserRightsAssignField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub UserID: TThostFtdcUserIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryUserRightsAssignField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryUserRightsAssignField>(),
        27usize,
        concat!("Size of: ", stringify!(CThostFtdcQryUserRightsAssignField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryUserRightsAssignField>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryUserRightsAssignField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryUserRightsAssignField>())).BrokerID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryUserRightsAssignField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryUserRightsAssignField>())).UserID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryUserRightsAssignField),
            "::",
            stringify!(UserID)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReserveOpenAccountConfirmField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcLongIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub TID: TThostFtdcTIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub Password: TThostFtdcPasswordType,
    pub BankReserveOpenSeq: TThostFtdcBankSerialType,
    pub BookDate: TThostFtdcTradeDateType,
    pub BookPsw: TThostFtdcPasswordType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReserveOpenAccountConfirmField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReserveOpenAccountConfirmField>(),
        976usize,
        concat!(
            "Size of: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReserveOpenAccountConfirmField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).TradeCode
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BankID as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BankBranchID
                as *const _ as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BrokerID
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BrokerBranchID
                as *const _ as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).TradeDate
                as *const _ as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).TradeTime
                as *const _ as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BankSerial
                as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).TradingDay
                as *const _ as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).PlateSerial
                as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).LastFragment
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).SessionID
                as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).CustomerName
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).IdCardType
                as *const _ as usize
        },
        273usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).IdentifiedCardNo
                as *const _ as usize
        },
        274usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).Gender as *const _
                as usize
        },
        325usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).CountryCode
                as *const _ as usize
        },
        326usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).CustType
                as *const _ as usize
        },
        347usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).Address as *const _
                as usize
        },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).ZipCode as *const _
                as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).Telephone
                as *const _ as usize
        },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).MobilePhone
                as *const _ as usize
        },
        497usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).Fax as *const _
                as usize
        },
        518usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).EMail as *const _
                as usize
        },
        559usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).MoneyAccountStatus
                as *const _ as usize
        },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BankAccount
                as *const _ as usize
        },
        601usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BankPassWord
                as *const _ as usize
        },
        642usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).InstallID
                as *const _ as usize
        },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).VerifyCertNoFlag
                as *const _ as usize
        },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).CurrencyID
                as *const _ as usize
        },
        689usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).Digest as *const _
                as usize
        },
        693usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BankAccType
                as *const _ as usize
        },
        729usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BrokerIDByBank
                as *const _ as usize
        },
        730usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).TID as *const _
                as usize
        },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).AccountID
                as *const _ as usize
        },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).Password
                as *const _ as usize
        },
        781usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(Password)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BankReserveOpenSeq
                as *const _ as usize
        },
        822usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BankReserveOpenSeq)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BookDate
                as *const _ as usize
        },
        835usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BookDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).BookPsw as *const _
                as usize
        },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(BookPsw)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).ErrorID as *const _
                as usize
        },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountConfirmField>())).ErrorMsg
                as *const _ as usize
        },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountConfirmField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcReserveOpenAccountConfirmField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcReserveOpenAccountField {
    pub TradeCode: TThostFtdcTradeCodeType,
    pub BankID: TThostFtdcBankIDType,
    pub BankBranchID: TThostFtdcBankBrchIDType,
    pub BrokerID: TThostFtdcBrokerIDType,
    pub BrokerBranchID: TThostFtdcFutureBranchIDType,
    pub TradeDate: TThostFtdcTradeDateType,
    pub TradeTime: TThostFtdcTradeTimeType,
    pub BankSerial: TThostFtdcBankSerialType,
    pub TradingDay: TThostFtdcTradeDateType,
    pub PlateSerial: TThostFtdcSerialType,
    pub LastFragment: TThostFtdcLastFragmentType,
    pub SessionID: TThostFtdcSessionIDType,
    pub CustomerName: TThostFtdcLongIndividualNameType,
    pub IdCardType: TThostFtdcIdCardTypeType,
    pub IdentifiedCardNo: TThostFtdcIdentifiedCardNoType,
    pub Gender: TThostFtdcGenderType,
    pub CountryCode: TThostFtdcCountryCodeType,
    pub CustType: TThostFtdcCustTypeType,
    pub Address: TThostFtdcAddressType,
    pub ZipCode: TThostFtdcZipCodeType,
    pub Telephone: TThostFtdcTelephoneType,
    pub MobilePhone: TThostFtdcMobilePhoneType,
    pub Fax: TThostFtdcFaxType,
    pub EMail: TThostFtdcEMailType,
    pub MoneyAccountStatus: TThostFtdcMoneyAccountStatusType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub BankPassWord: TThostFtdcPasswordType,
    pub InstallID: TThostFtdcInstallIDType,
    pub VerifyCertNoFlag: TThostFtdcYesNoIndicatorType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
    pub Digest: TThostFtdcDigestType,
    pub BankAccType: TThostFtdcBankAccTypeType,
    pub BrokerIDByBank: TThostFtdcBankCodingForFutureType,
    pub TID: TThostFtdcTIDType,
    pub ReserveOpenAccStas: TThostFtdcReserveOpenAccStasType,
    pub ErrorID: TThostFtdcErrorIDType,
    pub ErrorMsg: TThostFtdcErrorMsgType,
}
#[test]
fn bindgen_test_layout_CThostFtdcReserveOpenAccountField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcReserveOpenAccountField>(),
        860usize,
        concat!("Size of: ", stringify!(CThostFtdcReserveOpenAccountField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcReserveOpenAccountField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcReserveOpenAccountField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).TradeCode as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(TradeCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BankID as *const _
                as usize
        },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BankBranchID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BankBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BrokerID as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BrokerBranchID as *const _
                as usize
        },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BrokerBranchID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).TradeDate as *const _
                as usize
        },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(TradeDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).TradeTime as *const _
                as usize
        },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(TradeTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BankSerial as *const _
                as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BankSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).TradingDay as *const _
                as usize
        },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(TradingDay)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).PlateSerial as *const _
                as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(PlateSerial)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).LastFragment as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(LastFragment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).SessionID as *const _
                as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(SessionID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).CustomerName as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(CustomerName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).IdCardType as *const _
                as usize
        },
        273usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(IdCardType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).IdentifiedCardNo
                as *const _ as usize
        },
        274usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(IdentifiedCardNo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).Gender as *const _
                as usize
        },
        325usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(Gender)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).CountryCode as *const _
                as usize
        },
        326usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(CountryCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).CustType as *const _
                as usize
        },
        347usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(CustType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).Address as *const _
                as usize
        },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(Address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).ZipCode as *const _
                as usize
        },
        449usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(ZipCode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).Telephone as *const _
                as usize
        },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(Telephone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).MobilePhone as *const _
                as usize
        },
        497usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(MobilePhone)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).Fax as *const _ as usize
        },
        518usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(Fax)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).EMail as *const _ as usize
        },
        559usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(EMail)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).MoneyAccountStatus
                as *const _ as usize
        },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(MoneyAccountStatus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BankAccount as *const _
                as usize
        },
        601usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BankPassWord as *const _
                as usize
        },
        642usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BankPassWord)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).InstallID as *const _
                as usize
        },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(InstallID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).VerifyCertNoFlag
                as *const _ as usize
        },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(VerifyCertNoFlag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).CurrencyID as *const _
                as usize
        },
        689usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(CurrencyID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).Digest as *const _
                as usize
        },
        693usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(Digest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BankAccType as *const _
                as usize
        },
        729usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BankAccType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).BrokerIDByBank as *const _
                as usize
        },
        730usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(BrokerIDByBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).TID as *const _ as usize
        },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(TID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).ReserveOpenAccStas
                as *const _ as usize
        },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(ReserveOpenAccStas)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).ErrorID as *const _
                as usize
        },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(ErrorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcReserveOpenAccountField>())).ErrorMsg as *const _
                as usize
        },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcReserveOpenAccountField),
            "::",
            stringify!(ErrorMsg)
        )
    );
}
impl Default for CThostFtdcReserveOpenAccountField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct CThostFtdcAccountPropertyField {
    pub BrokerID: TThostFtdcBrokerIDType,
    pub AccountID: TThostFtdcAccountIDType,
    pub BankID: TThostFtdcBankIDType,
    pub BankAccount: TThostFtdcBankAccountType,
    pub OpenName: TThostFtdcInvestorFullNameType,
    pub OpenBank: TThostFtdcOpenBankType,
    pub IsActive: TThostFtdcBoolType,
    pub AccountSourceType: TThostFtdcAccountSourceTypeType,
    pub OpenDate: TThostFtdcDateType,
    pub CancelDate: TThostFtdcDateType,
    pub OperatorID: TThostFtdcOperatorIDType,
    pub OperateDate: TThostFtdcDateType,
    pub OperateTime: TThostFtdcTimeType,
    pub CurrencyID: TThostFtdcCurrencyIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcAccountPropertyField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcAccountPropertyField>(),
        384usize,
        concat!("Size of: ", stringify!(CThostFtdcAccountPropertyField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcAccountPropertyField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcAccountPropertyField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).BrokerID as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(BrokerID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).AccountID as *const _
                as usize
        },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(AccountID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).BankID as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(BankID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).BankAccount as *const _
                as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(BankAccount)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).OpenName as *const _ as usize
        },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(OpenName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).OpenBank as *const _ as usize
        },
        170usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(OpenBank)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).IsActive as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(IsActive)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).AccountSourceType as *const _
                as usize
        },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(AccountSourceType)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).OpenDate as *const _ as usize
        },
        277usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(OpenDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).CancelDate as *const _
                as usize
        },
        286usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(CancelDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).OperatorID as *const _
                as usize
        },
        295usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(OperatorID)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).OperateDate as *const _
                as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(OperateDate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).OperateTime as *const _
                as usize
        },
        369usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(OperateTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcAccountPropertyField>())).CurrencyID as *const _
                as usize
        },
        378usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcAccountPropertyField),
            "::",
            stringify!(CurrencyID)
        )
    );
}
impl Default for CThostFtdcAccountPropertyField {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcQryCurrDRIdentityField {
    pub DRIdentityID: TThostFtdcDRIdentityIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcQryCurrDRIdentityField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcQryCurrDRIdentityField>(),
        4usize,
        concat!("Size of: ", stringify!(CThostFtdcQryCurrDRIdentityField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcQryCurrDRIdentityField>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(CThostFtdcQryCurrDRIdentityField)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcQryCurrDRIdentityField>())).DRIdentityID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcQryCurrDRIdentityField),
            "::",
            stringify!(DRIdentityID)
        )
    );
}
#[repr(C)]
#[derive(Default, Copy, Clone)]
pub struct CThostFtdcCurrDRIdentityField {
    pub DRIdentityID: TThostFtdcDRIdentityIDType,
}
#[test]
fn bindgen_test_layout_CThostFtdcCurrDRIdentityField() {
    assert_eq!(
        ::std::mem::size_of::<CThostFtdcCurrDRIdentityField>(),
        4usize,
        concat!("Size of: ", stringify!(CThostFtdcCurrDRIdentityField))
    );
    assert_eq!(
        ::std::mem::align_of::<CThostFtdcCurrDRIdentityField>(),
        4usize,
        concat!("Alignment of ", stringify!(CThostFtdcCurrDRIdentityField))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<CThostFtdcCurrDRIdentityField>())).DRIdentityID as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CThostFtdcCurrDRIdentityField),
            "::",
            stringify!(DRIdentityID)
        )
    );
}
